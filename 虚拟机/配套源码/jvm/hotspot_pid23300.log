<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='23300' time_ms='1560609755015'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.91-b14
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.91-b14) for windows-amd64 JRE (1.8.0_91-b14), built on Apr  1 2016 00:58:32 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-Dvisualvm.id=151850379725874 -XX:+UnlockDiagnosticVMOptions -XX:+LogCompilation -XX:+PrintAssembly -javaagent:D:\ideaIU-2019.1.win\lib\idea_rt.jar=51678:D:\ideaIU-2019.1.win\bin -Dfile.encoding=UTF-8 
</args>
<command>
cn.itcast.jvm.t4.Demo4_2
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.91-b14
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_91\jre\lib\endorsed
sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_91\jre\bin
java.library.path=C:\Program Files\Java\jdk1.8.0_91\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\ideaIU-2019.1.win\bin\;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Program Files (x86)\NetSarang\Xftp 6\;c:\program files\graphicsmagick-1.3.31-q8;C:\oraclexe\app\oracle\product\11.2.0\server\bin;D:\apache-maven-3.5.2\bin;C:\Program Files\Java\jdk-11\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Git\cmd;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\ffmpeg\bin;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\WINDOWS\System32\OpenSSH\;D:\nodejs\;C:\Program Files\TortoiseSVN\bin;C:\Users\lenovo\AppData\Local\Programs\Python\Python37\Scripts\;C:\Users\lenovo\AppData\Local\Programs\Python\Python37\;C:\Program Files\Docker Toolbox;C:\Users\lenovo\AppData\Local\atom\bin;C:\Users\lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\lenovo\AppData\Roaming\npm;C:\Users\lenovo\AppData\Local\Programs\Microsoft VS Code\bin;E:\mysql-5.5\bin;;.
java.home=C:\Program Files\Java\jdk1.8.0_91\jre
java.class.path=C:\Program Files\Java\jdk1.8.0_91\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\rt.jar;E:\git\jvm\out\production\jvm;E:\git\jvm\lib\jackson-core-2.3.3.jar;E:\git\jvm\lib\jackson-databind-2.3.3.jar;E:\git\jvm\lib\jackson-annotations-2.3.3.jar
sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_91\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_91\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
visualvm.id=151850379725874
file.encoding=UTF-8
sun.java.command=cn.itcast.jvm.t4.Demo4_2
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='26572'/>
<thread_logfile thread='26572' filename='C:\Users\lenovo\AppData\Local\Temp\\hs_c26572_pid23300.log'/>
<writer thread='21972'/>
Loaded disassembler from C:\Program Files\Java\jdk1.8.0_91\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x0000000002dae9d0:
Code:
<writer thread='23708'/>
<thread_logfile thread='23708' filename='C:\Users\lenovo\AppData\Local\Temp\\hs_c23708_pid23300.log'/>
<writer thread='21972'/>
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
  # {method} {0x000000001b9896a8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x0000000002daeb40: mov    0x8(%rdx),%r10d
  0x0000000002daeb44: shl    $0x3,%r10
  0x0000000002daeb48: cmp    %r10,%rax
  0x0000000002daeb4b: je     0x0000000002daeb58
  0x0000000002daeb51: jmpq   0x0000000002d85f60  ;   {runtime_call}
  0x0000000002daeb56: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002daeb58: mov    %eax,-0x6000(%rsp)
  0x0000000002daeb5f: push   %rbp
  0x0000000002daeb60: mov    %rsp,%rbp
  0x0000000002daeb63: sub    $0x80,%rsp
  0x0000000002daeb6a: mov    %rsi,0x30(%rsp)
  0x0000000002daeb6f: mov    %rdi,0x28(%rsp)
  0x0000000002daeb74: mov    %r9,0x48(%rsp)
  0x0000000002daeb79: cmp    $0x0,%r9
  0x0000000002daeb7d: lea    0x48(%rsp),%rax
  0x0000000002daeb82: cmove  0x48(%rsp),%rax
  0x0000000002daeb88: mov    %rax,0x20(%rsp)
  0x0000000002daeb8d: mov    %r8,%r9
  0x0000000002daeb90: mov    %rdx,0x38(%rsp)
  0x0000000002daeb95: cmp    $0x0,%rdx
  0x0000000002daeb99: lea    0x38(%rsp),%r8
  0x0000000002daeb9e: cmove  0x38(%rsp),%r8
  0x0000000002daeba4: movabs $0x76b400c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002daebae: mov    %r14,0x68(%rsp)
  0x0000000002daebb3: lea    0x68(%rsp),%r14
  0x0000000002daebb8: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x0000000002daebbb: movabs $0x2daebbb,%r10    ;   {section_word}
  0x0000000002daebc5: mov    %r10,0x1e0(%r15)
  0x0000000002daebcc: mov    %rsp,0x1d8(%r15)
  0x0000000002daebd3: cmpb   $0x0,0x7224545d(%rip)        # 0x0000000074ff4037
                                                ;   {external_word}
  0x0000000002daebda: je     0x0000000002daec22
  0x0000000002daebe0: push   %rdx
  0x0000000002daebe1: push   %r8
  0x0000000002daebe3: push   %r9
  0x0000000002daebe5: movabs $0x1b9896a0,%rdx   ;   {metadata({method} {0x000000001b9896a8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002daebef: mov    %r15,%rcx
  0x0000000002daebf2: sub    $0x20,%rsp
  0x0000000002daebf6: test   $0xf,%esp
  0x0000000002daebfc: je     0x0000000002daec14
  0x0000000002daec02: sub    $0x8,%rsp
  0x0000000002daec06: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002daec0b: add    $0x8,%rsp
  0x0000000002daec0f: jmpq   0x0000000002daec19
  0x0000000002daec14: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002daec19: add    $0x20,%rsp
  0x0000000002daec1d: pop    %r9
  0x0000000002daec1f: pop    %r8
  0x0000000002daec21: pop    %rdx
  0x0000000002daec22: lea    0x1f8(%r15),%rcx
  0x0000000002daec29: movl   $0x4,0x270(%r15)
  0x0000000002daec34: callq  0x00000000500307fe  ;   {runtime_call}
  0x0000000002daec39: vzeroupper 
  0x0000000002daec3c: movl   $0x5,0x270(%r15)
  0x0000000002daec47: mov    %r15d,%ecx
  0x0000000002daec4a: shr    $0x4,%ecx
  0x0000000002daec4d: and    $0xffc,%ecx
  0x0000000002daec53: movabs $0x9f0000,%r10     ;   {external_word}
  0x0000000002daec5d: mov    %ecx,(%r10,%rcx,1)
  0x0000000002daec61: cmpl   $0x0,0x72245fa5(%rip)        # 0x0000000074ff4c10
                                                ;   {external_word}
  0x0000000002daec6b: jne    0x0000000002daec7f
  0x0000000002daec71: cmpl   $0x0,0x30(%r15)
  0x0000000002daec79: je     0x0000000002daec98
  0x0000000002daec7f: mov    %r15,%rcx
  0x0000000002daec82: mov    %rsp,%r12
  0x0000000002daec85: sub    $0x20,%rsp
  0x0000000002daec89: and    $0xfffffffffffffff0,%rsp
  0x0000000002daec8d: callq  0x0000000074a31270  ;   {runtime_call}
  0x0000000002daec92: mov    %r12,%rsp
  0x0000000002daec95: xor    %r12,%r12
  0x0000000002daec98: movl   $0x8,0x270(%r15)
  0x0000000002daeca3: cmpl   $0x1,0x29c(%r15)
  0x0000000002daecae: je     0x0000000002daed3e
  0x0000000002daecb4: cmpb   $0x0,0x7224537c(%rip)        # 0x0000000074ff4037
                                                ;   {external_word}
  0x0000000002daecbb: je     0x0000000002daecf9
  0x0000000002daecc1: movabs $0x1b9896a0,%rdx   ;   {metadata({method} {0x000000001b9896a8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002daeccb: mov    %r15,%rcx
  0x0000000002daecce: sub    $0x20,%rsp
  0x0000000002daecd2: test   $0xf,%esp
  0x0000000002daecd8: je     0x0000000002daecf0
  0x0000000002daecde: sub    $0x8,%rsp
  0x0000000002daece2: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002daece7: add    $0x8,%rsp
  0x0000000002daeceb: jmpq   0x0000000002daecf5
  0x0000000002daecf0: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002daecf5: add    $0x20,%rsp
  0x0000000002daecf9: movabs $0x0,%r10
  0x0000000002daed03: mov    %r10,0x1d8(%r15)
  0x0000000002daed0a: movabs $0x0,%r10
  0x0000000002daed14: mov    %r10,0x1e0(%r15)
  0x0000000002daed1b: mov    0x38(%r15),%rcx
  0x0000000002daed1f: movl   $0x0,0x100(%rcx)
  0x0000000002daed29: leaveq 
  0x0000000002daed2a: cmpq   $0x0,0x8(%r15)
  0x0000000002daed32: jne    0x0000000002daed39
  0x0000000002daed38: retq   
  0x0000000002daed39: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002daed3e: mov    %rsp,%r12
  0x0000000002daed41: sub    $0x20,%rsp
  0x0000000002daed45: and    $0xfffffffffffffff0,%rsp
  0x0000000002daed49: callq  0x0000000074a1ae00  ;   {runtime_call}
  0x0000000002daed4e: mov    %r12,%rsp
  0x0000000002daed51: xor    %r12,%r12
  0x0000000002daed54: jmpq   0x0000000002daecb4
  0x0000000002daed59: hlt    
  0x0000000002daed5a: hlt    
  0x0000000002daed5b: hlt    
  0x0000000002daed5c: hlt    
  0x0000000002daed5d: hlt    
  0x0000000002daed5e: hlt    
  0x0000000002daed5f: hlt    
<nmethod compile_id='1' compile_kind='c2n' level='0' entry='0x0000000002daeb40' size='912' address='0x0000000002dae9d0' relocation_offset='288' consts_offset='912' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='2689' iicount='2689' stamp='0.262'/>
<writer thread='12632'/>
<thread_logfile thread='12632' filename='C:\Users\lenovo\AppData\Local\Temp\\hs_c12632_pid23300.log'/>
<writer thread='21972'/>
<task_queued compile_id='2' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='256' iicount='256' level='3' stamp='0.271' comment='tiered' hot_count='256'/>
<task_queued compile_id='3' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4480' iicount='4480' level='3' stamp='0.272' comment='tiered' hot_count='4480'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e420d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b970488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000002e42220: mov    0x8(%rdx),%r10d
  0x0000000002e42224: shl    $0x3,%r10
  0x0000000002e42228: cmp    %rax,%r10
  0x0000000002e4222b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e42231: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e4223c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e42240: mov    %eax,-0x6000(%rsp)
  0x0000000002e42247: push   %rbp
  0x0000000002e42248: sub    $0x50,%rsp
  0x0000000002e4224c: movabs $0x1baa1918,%rcx   ;   {metadata(method data for {method} {0x000000001b970488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002e42256: mov    0xdc(%rcx),%esi
  0x0000000002e4225c: add    $0x8,%esi
  0x0000000002e4225f: mov    %esi,0xdc(%rcx)
  0x0000000002e42265: movabs $0x1b970480,%rcx   ;   {metadata({method} {0x000000001b970488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002e4226f: and    $0x1ff8,%esi
  0x0000000002e42275: cmp    $0x0,%esi
  0x0000000002e42278: je     0x0000000002e42297
  0x0000000002e4227e: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000002e42281: mov    %rdx,0x40(%rsp)
  0x0000000002e42286: callq  0x0000000002db0920  ; OopMap{[64]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000002e4228b: add    $0x50,%rsp
  0x0000000002e4228f: pop    %rbp
  0x0000000002e42290: test   %eax,-0x2852196(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e42296: retq   
  0x0000000002e42297: mov    %rcx,0x8(%rsp)
  0x0000000002e4229c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e422a4: callq  0x0000000002e41c20  ; OopMap{rdx=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x0000000002e422a9: jmp    0x0000000002e4227e
  0x0000000002e422ab: nop
  0x0000000002e422ac: nop
  0x0000000002e422ad: mov    0x2a8(%r15),%rax
  0x0000000002e422b4: movabs $0x0,%r10
  0x0000000002e422be: mov    %r10,0x2a8(%r15)
  0x0000000002e422c5: movabs $0x0,%r10
  0x0000000002e422cf: mov    %r10,0x2b0(%r15)
  0x0000000002e422d6: add    $0x50,%rsp
  0x0000000002e422da: pop    %rbp
  0x0000000002e422db: jmpq   0x0000000002db1720  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x0000000002e422e0: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e422e5: mov    %rsp,-0x28(%rsp)
  0x0000000002e422ea: sub    $0x80,%rsp
  0x0000000002e422f1: mov    %rax,0x78(%rsp)
  0x0000000002e422f6: mov    %rcx,0x70(%rsp)
  0x0000000002e422fb: mov    %rdx,0x68(%rsp)
  0x0000000002e42300: mov    %rbx,0x60(%rsp)
  0x0000000002e42305: mov    %rbp,0x50(%rsp)
  0x0000000002e4230a: mov    %rsi,0x48(%rsp)
  0x0000000002e4230f: mov    %rdi,0x40(%rsp)
  0x0000000002e42314: mov    %r8,0x38(%rsp)
  0x0000000002e42319: mov    %r9,0x30(%rsp)
  0x0000000002e4231e: mov    %r10,0x28(%rsp)
  0x0000000002e42323: mov    %r11,0x20(%rsp)
  0x0000000002e42328: mov    %r12,0x18(%rsp)
  0x0000000002e4232d: mov    %r13,0x10(%rsp)
  0x0000000002e42332: mov    %r14,0x8(%rsp)
  0x0000000002e42337: mov    %r15,(%rsp)
  0x0000000002e4233b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e42345: movabs $0x2e422e5,%rdx    ;   {internal_word}
  0x0000000002e4234f: mov    %rsp,%r8
  0x0000000002e42352: and    $0xfffffffffffffff0,%rsp
  0x0000000002e42356: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e4235b: hlt    
[Deopt Handler Code]
  0x0000000002e4235c: movabs $0x2e4235c,%r10    ;   {section_word}
  0x0000000002e42366: push   %r10
  0x0000000002e42368: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e4236d: hlt    
  0x0000000002e4236e: hlt    
  0x0000000002e4236f: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x0000000002e42220' size='800' address='0x0000000002e420d0' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='792' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4498' iicount='4498' stamp='0.276'/>
Decoding compiled method 0x0000000002e42410:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b9e7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002e42580: mov    0x8(%rdx),%r10d
  0x0000000002e42584: shl    $0x3,%r10
  0x0000000002e42588: cmp    %rax,%r10
  0x0000000002e4258b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e42591: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e4259c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e425a0: mov    %eax,-0x6000(%rsp)
  0x0000000002e425a7: push   %rbp
  0x0000000002e425a8: sub    $0x40,%rsp
  0x0000000002e425ac: mov    %rdx,%r8
  0x0000000002e425af: movabs $0x1bbe3de8,%rbx   ;   {metadata(method data for {method} {0x000000001b9e7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e425b9: mov    0xdc(%rbx),%edx
  0x0000000002e425bf: add    $0x8,%edx
  0x0000000002e425c2: mov    %edx,0xdc(%rbx)
  0x0000000002e425c8: movabs $0x1b9e7420,%rbx   ;   {metadata({method} {0x000000001b9e7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e425d2: and    $0x1ff8,%edx
  0x0000000002e425d8: cmp    $0x0,%edx
  0x0000000002e425db: je     0x0000000002e42715  ;*aload_0
                                                ; - java.lang.StringBuilder::&lt;init&gt;@0 (line 89)

  0x0000000002e425e1: mov    %r8,%rbx
  0x0000000002e425e4: movabs $0x1bbe3de8,%rdx   ;   {metadata(method data for {method} {0x000000001b9e7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e425ee: addq   $0x1,0x108(%rdx)
  0x0000000002e425f6: movabs $0x1bbe3f18,%rbx   ;   {metadata(method data for {method} {0x000000001b9e3810} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e42600: mov    0xdc(%rbx),%edx
  0x0000000002e42606: add    $0x8,%edx
  0x0000000002e42609: mov    %edx,0xdc(%rbx)
  0x0000000002e4260f: movabs $0x1b9e3808,%rbx   ;   {metadata({method} {0x000000001b9e3810} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e42619: and    $0x7ffff8,%edx
  0x0000000002e4261f: cmp    $0x0,%edx
  0x0000000002e42622: je     0x0000000002e4272c
  0x0000000002e42628: mov    %r8,%rbx
  0x0000000002e4262b: movabs $0x1bbe3f18,%rdx   ;   {metadata(method data for {method} {0x000000001b9e3810} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e42635: addq   $0x1,0x108(%rdx)
  0x0000000002e4263d: movabs $0x1baa1918,%rbx   ;   {metadata(method data for {method} {0x000000001b970488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002e42647: mov    0xdc(%rbx),%edx
  0x0000000002e4264d: add    $0x8,%edx
  0x0000000002e42650: mov    %edx,0xdc(%rbx)
  0x0000000002e42656: movabs $0x1b970480,%rbx   ;   {metadata({method} {0x000000001b970488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002e42660: and    $0x7ffff8,%edx
  0x0000000002e42666: cmp    $0x0,%edx
  0x0000000002e42669: je     0x0000000002e42743
  0x0000000002e4266f: mov    $0x10,%ebx
  0x0000000002e42674: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002e4267e: movslq %ebx,%rbx
  0x0000000002e42681: mov    %rbx,%rdi
  0x0000000002e42684: cmp    $0xffffff,%rbx
  0x0000000002e4268b: ja     0x0000000002e4275a
  0x0000000002e42691: movabs $0x17,%rsi
  0x0000000002e4269b: lea    (%rsi,%rbx,2),%rsi
  0x0000000002e4269f: and    $0xfffffffffffffff8,%rsi
  0x0000000002e426a3: mov    0x60(%r15),%rax
  0x0000000002e426a7: lea    (%rax,%rsi,1),%rsi
  0x0000000002e426ab: cmp    0x70(%r15),%rsi
  0x0000000002e426af: ja     0x0000000002e4275a
  0x0000000002e426b5: mov    %rsi,0x60(%r15)
  0x0000000002e426b9: sub    %rax,%rsi
  0x0000000002e426bc: movq   $0x1,(%rax)
  0x0000000002e426c3: mov    %rdx,%rcx
  0x0000000002e426c6: shr    $0x3,%rcx
  0x0000000002e426ca: mov    %ecx,0x8(%rax)
  0x0000000002e426cd: mov    %ebx,0xc(%rax)
  0x0000000002e426d0: sub    $0x10,%rsi
  0x0000000002e426d4: je     0x0000000002e426eb
  0x0000000002e426da: xor    %rbx,%rbx
  0x0000000002e426dd: shr    $0x3,%rsi
  0x0000000002e426e1: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002e426e6: dec    %rsi
  0x0000000002e426e9: jne    0x0000000002e426e1  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x0000000002e426eb: mov    %rax,%r10
  0x0000000002e426ee: shr    $0x3,%r10
  0x0000000002e426f2: mov    %r10d,0x10(%r8)
  0x0000000002e426f6: shr    $0x9,%r8
  0x0000000002e426fa: movabs $0xeaf2000,%rsi
  0x0000000002e42704: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x0000000002e42709: add    $0x40,%rsp
  0x0000000002e4270d: pop    %rbp
  0x0000000002e4270e: test   %eax,-0x2852614(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e42714: retq   
  0x0000000002e42715: mov    %rbx,0x8(%rsp)
  0x0000000002e4271a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e42722: callq  0x0000000002e41c20  ; OopMap{r8=Oop off=423}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ;   {runtime_call}
  0x0000000002e42727: jmpq   0x0000000002e425e1
  0x0000000002e4272c: mov    %rbx,0x8(%rsp)
  0x0000000002e42731: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e42739: callq  0x0000000002e41c20  ; OopMap{r8=Oop off=446}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000002e4273e: jmpq   0x0000000002e42628
  0x0000000002e42743: mov    %rbx,0x8(%rsp)
  0x0000000002e42748: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e42750: callq  0x0000000002e41c20  ; OopMap{r8=Oop off=469}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000002e42755: jmpq   0x0000000002e4266f
  0x0000000002e4275a: callq  0x0000000002daf940  ; OopMap{r8=Oop off=479}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000002e4275f: jmp    0x0000000002e426eb
  0x0000000002e42761: nop
  0x0000000002e42762: nop
  0x0000000002e42763: mov    0x2a8(%r15),%rax
  0x0000000002e4276a: movabs $0x0,%r10
  0x0000000002e42774: mov    %r10,0x2a8(%r15)
  0x0000000002e4277b: movabs $0x0,%r10
  0x0000000002e42785: mov    %r10,0x2b0(%r15)
  0x0000000002e4278c: add    $0x40,%rsp
  0x0000000002e42790: pop    %rbp
  0x0000000002e42791: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e42796: hlt    
  0x0000000002e42797: hlt    
  0x0000000002e42798: hlt    
  0x0000000002e42799: hlt    
  0x0000000002e4279a: hlt    
  0x0000000002e4279b: hlt    
  0x0000000002e4279c: hlt    
  0x0000000002e4279d: hlt    
  0x0000000002e4279e: hlt    
  0x0000000002e4279f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e427a0: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e427a5: mov    %rsp,-0x28(%rsp)
  0x0000000002e427aa: sub    $0x80,%rsp
  0x0000000002e427b1: mov    %rax,0x78(%rsp)
  0x0000000002e427b6: mov    %rcx,0x70(%rsp)
  0x0000000002e427bb: mov    %rdx,0x68(%rsp)
  0x0000000002e427c0: mov    %rbx,0x60(%rsp)
  0x0000000002e427c5: mov    %rbp,0x50(%rsp)
  0x0000000002e427ca: mov    %rsi,0x48(%rsp)
  0x0000000002e427cf: mov    %rdi,0x40(%rsp)
  0x0000000002e427d4: mov    %r8,0x38(%rsp)
  0x0000000002e427d9: mov    %r9,0x30(%rsp)
  0x0000000002e427de: mov    %r10,0x28(%rsp)
  0x0000000002e427e3: mov    %r11,0x20(%rsp)
  0x0000000002e427e8: mov    %r12,0x18(%rsp)
  0x0000000002e427ed: mov    %r13,0x10(%rsp)
  0x0000000002e427f2: mov    %r14,0x8(%rsp)
  0x0000000002e427f7: mov    %r15,(%rsp)
  0x0000000002e427fb: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e42805: movabs $0x2e427a5,%rdx    ;   {internal_word}
  0x0000000002e4280f: mov    %rsp,%r8
  0x0000000002e42812: and    $0xfffffffffffffff0,%rsp
  0x0000000002e42816: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e4281b: hlt    
[Deopt Handler Code]
  0x0000000002e4281c: movabs $0x2e4281c,%r10    ;   {section_word}
  0x0000000002e42826: push   %r10
  0x0000000002e42828: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e4282d: hlt    
  0x0000000002e4282e: hlt    
  0x0000000002e4282f: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x0000000002e42580' size='1312' address='0x0000000002e42410' relocation_offset='288' insts_offset='368' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1160' dependencies_offset='1304' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='260' iicount='260' stamp='0.284'/>
<writer thread='21988'/>
<task_queued compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='757' backedge_count='14336' iicount='757' level='3' stamp='0.285' comment='tiered' hot_count='757'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e438d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b974fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002e43a40: mov    0x8(%rdx),%r10d
  0x0000000002e43a44: shl    $0x3,%r10
  0x0000000002e43a48: cmp    %rax,%r10
  0x0000000002e43a4b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e43a51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e43a5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e43a60: mov    %eax,-0x6000(%rsp)
  0x0000000002e43a67: push   %rbp
  0x0000000002e43a68: sub    $0x30,%rsp
  0x0000000002e43a6c: movabs $0x1bb52548,%rax   ;   {metadata(method data for {method} {0x000000001b974fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e43a76: mov    0xdc(%rax),%esi
  0x0000000002e43a7c: add    $0x8,%esi
  0x0000000002e43a7f: mov    %esi,0xdc(%rax)
  0x0000000002e43a85: movabs $0x1b974fb0,%rax   ;   {metadata({method} {0x000000001b974fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e43a8f: and    $0x1ff8,%esi
  0x0000000002e43a95: cmp    $0x0,%esi
  0x0000000002e43a98: je     0x0000000002e43bd1  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x0000000002e43a9e: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x0000000002e43aa1: cmp    $0x0,%eax
  0x0000000002e43aa4: movabs $0x1bb52548,%rsi   ;   {metadata(method data for {method} {0x000000001b974fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e43aae: movabs $0x108,%rdi
  0x0000000002e43ab8: jne    0x0000000002e43ac8
  0x0000000002e43abe: movabs $0x118,%rdi
  0x0000000002e43ac8: mov    (%rsi,%rdi,1),%rbx
  0x0000000002e43acc: lea    0x1(%rbx),%rbx
  0x0000000002e43ad0: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002e43ad4: jne    0x0000000002e43bc5  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x0000000002e43ada: mov    0xc(%rdx),%esi
  0x0000000002e43add: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x0000000002e43ae1: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x0000000002e43be8
  0x0000000002e43ae4: cmp    $0x0,%edi
  0x0000000002e43ae7: movabs $0x1bb52548,%rbx   ;   {metadata(method data for {method} {0x000000001b974fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e43af1: movabs $0x128,%rcx
  0x0000000002e43afb: jle    0x0000000002e43b0b
  0x0000000002e43b01: movabs $0x138,%rcx
  0x0000000002e43b0b: mov    (%rbx,%rcx,1),%r8
  0x0000000002e43b0f: lea    0x1(%r8),%r8
  0x0000000002e43b13: mov    %r8,(%rbx,%rcx,1)
  0x0000000002e43b17: jle    0x0000000002e43bc5  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x0000000002e43b1d: mov    $0x0,%ebx
  0x0000000002e43b22: jmpq   0x0000000002e43b8a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x0000000002e43b27: nop
  0x0000000002e43b28: movslq %ebx,%rcx
  0x0000000002e43b2b: movzwl 0x10(%rsi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002e43b30: mov    %rax,%r8
  0x0000000002e43b33: shl    $0x5,%eax
  0x0000000002e43b36: sub    %r8d,%eax
  0x0000000002e43b39: add    %ecx,%eax
  0x0000000002e43b3b: inc    %ebx
  0x0000000002e43b3d: movabs $0x1bb52548,%rcx   ;   {metadata(method data for {method} {0x000000001b974fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e43b47: mov    0xe0(%rcx),%r8d
  0x0000000002e43b4e: add    $0x8,%r8d
  0x0000000002e43b52: mov    %r8d,0xe0(%rcx)
  0x0000000002e43b59: movabs $0x1b974fb0,%rcx   ;   {metadata({method} {0x000000001b974fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e43b63: and    $0xfff8,%r8d
  0x0000000002e43b6a: cmp    $0x0,%r8d
  0x0000000002e43b6e: je     0x0000000002e43bed  ; OopMap{rsi=Oop rdx=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000002e43b74: test   %eax,-0x2853a7a(%rip)        # 0x00000000005f0100
                                                ;   {poll}
  0x0000000002e43b7a: movabs $0x1bb52548,%rcx   ;   {metadata(method data for {method} {0x000000001b974fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e43b84: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000002e43b8a: cmp    %edi,%ebx
  0x0000000002e43b8c: movabs $0x1bb52548,%rcx   ;   {metadata(method data for {method} {0x000000001b974fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e43b96: movabs $0x148,%r8
  0x0000000002e43ba0: jge    0x0000000002e43bb0
  0x0000000002e43ba6: movabs $0x158,%r8
  0x0000000002e43bb0: mov    (%rcx,%r8,1),%r9
  0x0000000002e43bb4: lea    0x1(%r9),%r9
  0x0000000002e43bb8: mov    %r9,(%rcx,%r8,1)
  0x0000000002e43bbc: jl     0x0000000002e43b28  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002e43bc2: mov    %eax,0x10(%rdx)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x0000000002e43bc5: add    $0x30,%rsp
  0x0000000002e43bc9: pop    %rbp
  0x0000000002e43bca: test   %eax,-0x2853ad0(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e43bd0: retq   
  0x0000000002e43bd1: mov    %rax,0x8(%rsp)
  0x0000000002e43bd6: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e43bde: callq  0x0000000002e41c20  ; OopMap{rdx=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x0000000002e43be3: jmpq   0x0000000002e43a9e
  0x0000000002e43be8: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop rsi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x0000000002e43bed: mov    %rcx,0x8(%rsp)
  0x0000000002e43bf2: movq   $0x2d,(%rsp)
  0x0000000002e43bfa: callq  0x0000000002e41c20  ; OopMap{rsi=Oop rdx=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x0000000002e43bff: jmpq   0x0000000002e43b74
  0x0000000002e43c04: nop
  0x0000000002e43c05: nop
  0x0000000002e43c06: mov    0x2a8(%r15),%rax
  0x0000000002e43c0d: movabs $0x0,%r10
  0x0000000002e43c17: mov    %r10,0x2a8(%r15)
  0x0000000002e43c1e: movabs $0x0,%r10
  0x0000000002e43c28: mov    %r10,0x2b0(%r15)
  0x0000000002e43c2f: add    $0x30,%rsp
  0x0000000002e43c33: pop    %rbp
  0x0000000002e43c34: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e43c39: hlt    
  0x0000000002e43c3a: hlt    
  0x0000000002e43c3b: hlt    
  0x0000000002e43c3c: hlt    
  0x0000000002e43c3d: hlt    
  0x0000000002e43c3e: hlt    
  0x0000000002e43c3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e43c40: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e43c45: mov    %rsp,-0x28(%rsp)
  0x0000000002e43c4a: sub    $0x80,%rsp
  0x0000000002e43c51: mov    %rax,0x78(%rsp)
  0x0000000002e43c56: mov    %rcx,0x70(%rsp)
  0x0000000002e43c5b: mov    %rdx,0x68(%rsp)
  0x0000000002e43c60: mov    %rbx,0x60(%rsp)
  0x0000000002e43c65: mov    %rbp,0x50(%rsp)
  0x0000000002e43c6a: mov    %rsi,0x48(%rsp)
  0x0000000002e43c6f: mov    %rdi,0x40(%rsp)
  0x0000000002e43c74: mov    %r8,0x38(%rsp)
  0x0000000002e43c79: mov    %r9,0x30(%rsp)
  0x0000000002e43c7e: mov    %r10,0x28(%rsp)
  0x0000000002e43c83: mov    %r11,0x20(%rsp)
  0x0000000002e43c88: mov    %r12,0x18(%rsp)
  0x0000000002e43c8d: mov    %r13,0x10(%rsp)
  0x0000000002e43c92: mov    %r14,0x8(%rsp)
  0x0000000002e43c97: mov    %r15,(%rsp)
  0x0000000002e43c9b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e43ca5: movabs $0x2e43c45,%rdx    ;   {internal_word}
  0x0000000002e43caf: mov    %rsp,%r8
  0x0000000002e43cb2: and    $0xfffffffffffffff0,%rsp
  0x0000000002e43cb6: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e43cbb: hlt    
[Deopt Handler Code]
  0x0000000002e43cbc: movabs $0x2e43cbc,%r10    ;   {section_word}
  0x0000000002e43cc6: push   %r10
  0x0000000002e43cc8: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e43ccd: hlt    
  0x0000000002e43cce: hlt    
  0x0000000002e43ccf: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x0000000002e43a40' size='1448' address='0x0000000002e438d0' relocation_offset='288' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='757' backedge_count='14372' iicount='757' stamp='0.293'/>
<writer thread='21988'/>
<task_queued compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='640' backedge_count='2967' iicount='640' level='3' stamp='0.295' comment='tiered' hot_count='640'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e44490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002e44620: mov    0x8(%rdx),%r10d
  0x0000000002e44624: shl    $0x3,%r10
  0x0000000002e44628: cmp    %rax,%r10
  0x0000000002e4462b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e44631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e4463c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e44640: mov    %eax,-0x6000(%rsp)
  0x0000000002e44647: push   %rbp
  0x0000000002e44648: sub    $0x30,%rsp
  0x0000000002e4464c: movabs $0x1bba0550,%rax   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e44656: mov    0xdc(%rax),%esi
  0x0000000002e4465c: add    $0x8,%esi
  0x0000000002e4465f: mov    %esi,0xdc(%rax)
  0x0000000002e44665: movabs $0x1b9745d0,%rax   ;   {metadata({method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e4466f: and    $0x1ff8,%esi
  0x0000000002e44675: cmp    $0x0,%esi
  0x0000000002e44678: je     0x0000000002e44a4e  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x0000000002e4467e: cmp    %r8,%rdx
  0x0000000002e44681: movabs $0x1bba0550,%rax   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e4468b: movabs $0x108,%rsi
  0x0000000002e44695: jne    0x0000000002e446a5
  0x0000000002e4469b: movabs $0x118,%rsi
  0x0000000002e446a5: mov    (%rax,%rsi,1),%rdi
  0x0000000002e446a9: lea    0x1(%rdi),%rdi
  0x0000000002e446ad: mov    %rdi,(%rax,%rsi,1)
  0x0000000002e446b1: je     0x0000000002e44a3d  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x0000000002e446b7: cmp    $0x0,%r8
  0x0000000002e446bb: jne    0x0000000002e446d6
  0x0000000002e446bd: movabs $0x1bba0550,%rdi   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e446c7: orl    $0x100,0x120(%rdi)
  0x0000000002e446d1: jmpq   0x0000000002e44798
  0x0000000002e446d6: movabs $0x7c00016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002e446e0: mov    0x8(%r8),%esi
  0x0000000002e446e4: shl    $0x3,%rsi
  0x0000000002e446e8: cmp    %rsi,%rbx
  0x0000000002e446eb: jne    0x0000000002e4477c
  0x0000000002e446f1: movabs $0x1bba0550,%rdi   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e446fb: mov    0x8(%r8),%ebx
  0x0000000002e446ff: shl    $0x3,%rbx
  0x0000000002e44703: cmp    0x130(%rdi),%rbx
  0x0000000002e4470a: jne    0x0000000002e44719
  0x0000000002e4470c: addq   $0x1,0x138(%rdi)
  0x0000000002e44714: jmpq   0x0000000002e4479d
  0x0000000002e44719: cmp    0x140(%rdi),%rbx
  0x0000000002e44720: jne    0x0000000002e4472f
  0x0000000002e44722: addq   $0x1,0x148(%rdi)
  0x0000000002e4472a: jmpq   0x0000000002e4479d
  0x0000000002e4472f: cmpq   $0x0,0x130(%rdi)
  0x0000000002e4473a: jne    0x0000000002e44753
  0x0000000002e4473c: mov    %rbx,0x130(%rdi)
  0x0000000002e44743: movq   $0x1,0x138(%rdi)
  0x0000000002e4474e: jmpq   0x0000000002e4479d
  0x0000000002e44753: cmpq   $0x0,0x140(%rdi)
  0x0000000002e4475e: jne    0x0000000002e44777
  0x0000000002e44760: mov    %rbx,0x140(%rdi)
  0x0000000002e44767: movq   $0x1,0x148(%rdi)
  0x0000000002e44772: jmpq   0x0000000002e4479d
  0x0000000002e44777: jmpq   0x0000000002e4479d
  0x0000000002e4477c: movabs $0x1bba0550,%rdi   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e44786: subq   $0x1,0x128(%rdi)
  0x0000000002e4478e: jmpq   0x0000000002e44798
  0x0000000002e44793: jmpq   0x0000000002e4479d
  0x0000000002e44798: xor    %rax,%rax
  0x0000000002e4479b: jmp    0x0000000002e447a7
  0x0000000002e4479d: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000002e447a7: cmp    $0x0,%eax
  0x0000000002e447aa: movabs $0x1bba0550,%rax   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e447b4: movabs $0x158,%rsi
  0x0000000002e447be: je     0x0000000002e447ce
  0x0000000002e447c4: movabs $0x168,%rsi
  0x0000000002e447ce: mov    (%rax,%rsi,1),%rdi
  0x0000000002e447d2: lea    0x1(%rdi),%rdi
  0x0000000002e447d6: mov    %rdi,(%rax,%rsi,1)
  0x0000000002e447da: je     0x0000000002e44a2c  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x0000000002e447e0: cmp    $0x0,%r8
  0x0000000002e447e4: jne    0x0000000002e447ff
  0x0000000002e447e6: movabs $0x1bba0550,%rdi   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e447f0: orl    $0x100,0x170(%rdi)
  0x0000000002e447fa: jmpq   0x0000000002e448c1
  0x0000000002e447ff: movabs $0x7c00016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002e44809: mov    0x8(%r8),%esi
  0x0000000002e4480d: shl    $0x3,%rsi
  0x0000000002e44811: cmp    %rsi,%rbx
  0x0000000002e44814: jne    0x0000000002e448a5
  0x0000000002e4481a: movabs $0x1bba0550,%rdi   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e44824: mov    0x8(%r8),%ebx
  0x0000000002e44828: shl    $0x3,%rbx
  0x0000000002e4482c: cmp    0x180(%rdi),%rbx
  0x0000000002e44833: jne    0x0000000002e44842
  0x0000000002e44835: addq   $0x1,0x188(%rdi)
  0x0000000002e4483d: jmpq   0x0000000002e448c1
  0x0000000002e44842: cmp    0x190(%rdi),%rbx
  0x0000000002e44849: jne    0x0000000002e44858
  0x0000000002e4484b: addq   $0x1,0x198(%rdi)
  0x0000000002e44853: jmpq   0x0000000002e448c1
  0x0000000002e44858: cmpq   $0x0,0x180(%rdi)
  0x0000000002e44863: jne    0x0000000002e4487c
  0x0000000002e44865: mov    %rbx,0x180(%rdi)
  0x0000000002e4486c: movq   $0x1,0x188(%rdi)
  0x0000000002e44877: jmpq   0x0000000002e448c1
  0x0000000002e4487c: cmpq   $0x0,0x190(%rdi)
  0x0000000002e44887: jne    0x0000000002e448a0
  0x0000000002e44889: mov    %rbx,0x190(%rdi)
  0x0000000002e44890: movq   $0x1,0x198(%rdi)
  0x0000000002e4489b: jmpq   0x0000000002e448c1
  0x0000000002e448a0: jmpq   0x0000000002e448c1
  0x0000000002e448a5: movabs $0x1bba0550,%rdi   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e448af: subq   $0x1,0x178(%rdi)
  0x0000000002e448b7: jmpq   0x0000000002e44a65
  0x0000000002e448bc: jmpq   0x0000000002e448c1
  0x0000000002e448c1: mov    %r8,%rax           ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x0000000002e448c4: mov    0xc(%rdx),%esi
  0x0000000002e448c7: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x0000000002e448cb: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x0000000002e44a6e
  0x0000000002e448ce: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000002e44a73
  0x0000000002e448d1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x0000000002e448d5: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x0000000002e44a78
  0x0000000002e448d8: cmp    %ebx,%edi
  0x0000000002e448da: movabs $0x1bba0550,%rbx   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e448e4: movabs $0x1a8,%rdx
  0x0000000002e448ee: jne    0x0000000002e448fe
  0x0000000002e448f4: movabs $0x1b8,%rdx
  0x0000000002e448fe: mov    (%rbx,%rdx,1),%rcx
  0x0000000002e44902: lea    0x1(%rcx),%rcx
  0x0000000002e44906: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002e4490a: jne    0x0000000002e44a2c  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x0000000002e44910: mov    $0x0,%ebx
  0x0000000002e44915: jmpq   0x0000000002e449c7  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x0000000002e4491a: nopw   0x0(%rax,%rax,1)
  0x0000000002e44920: movslq %ebx,%rdi
  0x0000000002e44923: cmp    0xc(%rsi),%ebx
  0x0000000002e44926: jae    0x0000000002e44a7d
  0x0000000002e4492c: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002e44931: movslq %ebx,%rcx
  0x0000000002e44934: cmp    0xc(%rax),%ebx
  0x0000000002e44937: jae    0x0000000002e44a86
  0x0000000002e4493d: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002e44942: cmp    %ecx,%edi
  0x0000000002e44944: movabs $0x1bba0550,%rdi   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e4494e: movabs $0x1e8,%rcx
  0x0000000002e44958: je     0x0000000002e44968
  0x0000000002e4495e: movabs $0x1f8,%rcx
  0x0000000002e44968: mov    (%rdi,%rcx,1),%r8
  0x0000000002e4496c: lea    0x1(%r8),%r8
  0x0000000002e44970: mov    %r8,(%rdi,%rcx,1)
  0x0000000002e44974: jne    0x0000000002e44a0a  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002e4497a: inc    %ebx
  0x0000000002e4497c: movabs $0x1bba0550,%rdi   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e44986: mov    0xe0(%rdi),%ecx
  0x0000000002e4498c: add    $0x8,%ecx
  0x0000000002e4498f: mov    %ecx,0xe0(%rdi)
  0x0000000002e44995: movabs $0x1b9745d0,%rdi   ;   {metadata({method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e4499f: and    $0xfff8,%ecx
  0x0000000002e449a5: cmp    $0x0,%ecx
  0x0000000002e449a8: je     0x0000000002e44a8f  ; OopMap{rax=Oop rsi=Oop off=910}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000002e449ae: test   %eax,-0x28548b4(%rip)        # 0x00000000005f0100
                                                ;   {poll}
  0x0000000002e449b4: movabs $0x1bba0550,%rdi   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e449be: incl   0x208(%rdi)
  0x0000000002e449c4: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000002e449c7: mov    %rdi,%rdx
  0x0000000002e449ca: dec    %edx
  0x0000000002e449cc: cmp    $0x0,%edi
  0x0000000002e449cf: movabs $0x1bba0550,%rdi   ;   {metadata(method data for {method} {0x000000001b9745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e449d9: movabs $0x1c8,%rcx
  0x0000000002e449e3: je     0x0000000002e449f3
  0x0000000002e449e9: movabs $0x1d8,%rcx
  0x0000000002e449f3: mov    (%rdi,%rcx,1),%r8
  0x0000000002e449f7: lea    0x1(%r8),%r8
  0x0000000002e449fb: mov    %r8,(%rdi,%rcx,1)
  0x0000000002e449ff: je     0x0000000002e44a1b
  0x0000000002e44a05: jmpq   0x0000000002e44920  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000002e44a0a: mov    $0x0,%eax
  0x0000000002e44a0f: add    $0x30,%rsp
  0x0000000002e44a13: pop    %rbp
  0x0000000002e44a14: test   %eax,-0x285491a(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e44a1a: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x0000000002e44a1b: mov    $0x1,%eax
  0x0000000002e44a20: add    $0x30,%rsp
  0x0000000002e44a24: pop    %rbp
  0x0000000002e44a25: test   %eax,-0x285492b(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e44a2b: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x0000000002e44a2c: mov    $0x0,%eax
  0x0000000002e44a31: add    $0x30,%rsp
  0x0000000002e44a35: pop    %rbp
  0x0000000002e44a36: test   %eax,-0x285493c(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e44a3c: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x0000000002e44a3d: mov    $0x1,%eax
  0x0000000002e44a42: add    $0x30,%rsp
  0x0000000002e44a46: pop    %rbp
  0x0000000002e44a47: test   %eax,-0x285494d(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e44a4d: retq   
  0x0000000002e44a4e: mov    %rax,0x8(%rsp)
  0x0000000002e44a53: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e44a5b: callq  0x0000000002e41c20  ; OopMap{rdx=Oop r8=Oop off=1088}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x0000000002e44a60: jmpq   0x0000000002e4467e
  0x0000000002e44a65: mov    %r8,(%rsp)
  0x0000000002e44a69: callq  0x0000000002e3f740  ; OopMap{rdx=Oop off=1102}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x0000000002e44a6e: callq  0x0000000002db0bc0  ; OopMap{rax=Oop rsi=Oop off=1107}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x0000000002e44a73: callq  0x0000000002db0bc0  ; OopMap{rsi=Oop off=1112}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x0000000002e44a78: callq  0x0000000002db0bc0  ; OopMap{rsi=Oop rax=Oop off=1117}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x0000000002e44a7d: mov    %rbx,(%rsp)
  0x0000000002e44a81: callq  0x0000000002db1280  ; OopMap{rax=Oop rsi=Oop off=1126}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x0000000002e44a86: mov    %rbx,(%rsp)
  0x0000000002e44a8a: callq  0x0000000002db1280  ; OopMap{rax=Oop rsi=Oop off=1135}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x0000000002e44a8f: mov    %rdi,0x8(%rsp)
  0x0000000002e44a94: movq   $0x4a,(%rsp)
  0x0000000002e44a9c: callq  0x0000000002e41c20  ; OopMap{rax=Oop rsi=Oop off=1153}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x0000000002e44aa1: jmpq   0x0000000002e449ae
  0x0000000002e44aa6: nop
  0x0000000002e44aa7: nop
  0x0000000002e44aa8: mov    0x2a8(%r15),%rax
  0x0000000002e44aaf: movabs $0x0,%r10
  0x0000000002e44ab9: mov    %r10,0x2a8(%r15)
  0x0000000002e44ac0: movabs $0x0,%r10
  0x0000000002e44aca: mov    %r10,0x2b0(%r15)
  0x0000000002e44ad1: add    $0x30,%rsp
  0x0000000002e44ad5: pop    %rbp
  0x0000000002e44ad6: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e44adb: hlt    
  0x0000000002e44adc: hlt    
  0x0000000002e44add: hlt    
  0x0000000002e44ade: hlt    
  0x0000000002e44adf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e44ae0: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e44ae5: mov    %rsp,-0x28(%rsp)
  0x0000000002e44aea: sub    $0x80,%rsp
  0x0000000002e44af1: mov    %rax,0x78(%rsp)
  0x0000000002e44af6: mov    %rcx,0x70(%rsp)
  0x0000000002e44afb: mov    %rdx,0x68(%rsp)
  0x0000000002e44b00: mov    %rbx,0x60(%rsp)
  0x0000000002e44b05: mov    %rbp,0x50(%rsp)
  0x0000000002e44b0a: mov    %rsi,0x48(%rsp)
  0x0000000002e44b0f: mov    %rdi,0x40(%rsp)
  0x0000000002e44b14: mov    %r8,0x38(%rsp)
  0x0000000002e44b19: mov    %r9,0x30(%rsp)
  0x0000000002e44b1e: mov    %r10,0x28(%rsp)
  0x0000000002e44b23: mov    %r11,0x20(%rsp)
  0x0000000002e44b28: mov    %r12,0x18(%rsp)
  0x0000000002e44b2d: mov    %r13,0x10(%rsp)
  0x0000000002e44b32: mov    %r14,0x8(%rsp)
  0x0000000002e44b37: mov    %r15,(%rsp)
  0x0000000002e44b3b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e44b45: movabs $0x2e44ae5,%rdx    ;   {internal_word}
  0x0000000002e44b4f: mov    %rsp,%r8
  0x0000000002e44b52: and    $0xfffffffffffffff0,%rsp
  0x0000000002e44b56: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e44b5b: hlt    
[Deopt Handler Code]
  0x0000000002e44b5c: movabs $0x2e44b5c,%r10    ;   {section_word}
  0x0000000002e44b66: push   %r10
  0x0000000002e44b68: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e44b6d: hlt    
  0x0000000002e44b6e: hlt    
  0x0000000002e44b6f: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x0000000002e44620' size='2504' address='0x0000000002e44490' relocation_offset='288' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='640' backedge_count='2967' iicount='640' stamp='0.309'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='21972'/>
<task_queued compile_id='6' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='0.310' comment='tiered' hot_count='128'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e4d210:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb610f0} &apos;getSnapshotTransformerList&apos; &apos;()[Lsun/instrument/TransformerManager$TransformerInfo;&apos; in &apos;sun/instrument/TransformerManager&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002e4d360: mov    0x8(%rdx),%r10d
  0x0000000002e4d364: shl    $0x3,%r10
  0x0000000002e4d368: cmp    %rax,%r10
  0x0000000002e4d36b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e4d371: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e4d37c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e4d380: mov    %eax,-0x6000(%rsp)
  0x0000000002e4d387: push   %rbp
  0x0000000002e4d388: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@0 (line 166)

  0x0000000002e4d38c: mov    0x10(%rdx),%eax
  0x0000000002e4d38f: shl    $0x3,%rax          ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1 (line 166)

  0x0000000002e4d393: add    $0x30,%rsp
  0x0000000002e4d397: pop    %rbp
  0x0000000002e4d398: test   %eax,-0x285d29e(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e4d39e: retq   
  0x0000000002e4d39f: nop
  0x0000000002e4d3a0: nop
  0x0000000002e4d3a1: mov    0x2a8(%r15),%rax
  0x0000000002e4d3a8: movabs $0x0,%r10
  0x0000000002e4d3b2: mov    %r10,0x2a8(%r15)
  0x0000000002e4d3b9: movabs $0x0,%r10
  0x0000000002e4d3c3: mov    %r10,0x2b0(%r15)
  0x0000000002e4d3ca: add    $0x30,%rsp
  0x0000000002e4d3ce: pop    %rbp
  0x0000000002e4d3cf: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e4d3d4: hlt    
  0x0000000002e4d3d5: hlt    
  0x0000000002e4d3d6: hlt    
  0x0000000002e4d3d7: hlt    
  0x0000000002e4d3d8: hlt    
  0x0000000002e4d3d9: hlt    
  0x0000000002e4d3da: hlt    
  0x0000000002e4d3db: hlt    
  0x0000000002e4d3dc: hlt    
  0x0000000002e4d3dd: hlt    
  0x0000000002e4d3de: hlt    
  0x0000000002e4d3df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e4d3e0: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e4d3e5: mov    %rsp,-0x28(%rsp)
  0x0000000002e4d3ea: sub    $0x80,%rsp
  0x0000000002e4d3f1: mov    %rax,0x78(%rsp)
  0x0000000002e4d3f6: mov    %rcx,0x70(%rsp)
  0x0000000002e4d3fb: mov    %rdx,0x68(%rsp)
  0x0000000002e4d400: mov    %rbx,0x60(%rsp)
  0x0000000002e4d405: mov    %rbp,0x50(%rsp)
  0x0000000002e4d40a: mov    %rsi,0x48(%rsp)
  0x0000000002e4d40f: mov    %rdi,0x40(%rsp)
  0x0000000002e4d414: mov    %r8,0x38(%rsp)
  0x0000000002e4d419: mov    %r9,0x30(%rsp)
  0x0000000002e4d41e: mov    %r10,0x28(%rsp)
  0x0000000002e4d423: mov    %r11,0x20(%rsp)
  0x0000000002e4d428: mov    %r12,0x18(%rsp)
  0x0000000002e4d42d: mov    %r13,0x10(%rsp)
  0x0000000002e4d432: mov    %r14,0x8(%rsp)
  0x0000000002e4d437: mov    %r15,(%rsp)
  0x0000000002e4d43b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e4d445: movabs $0x2e4d3e5,%rdx    ;   {internal_word}
  0x0000000002e4d44f: mov    %rsp,%r8
  0x0000000002e4d452: and    $0xfffffffffffffff0,%rsp
  0x0000000002e4d456: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e4d45b: hlt    
[Deopt Handler Code]
  0x0000000002e4d45c: movabs $0x2e4d45c,%r10    ;   {section_word}
  0x0000000002e4d466: push   %r10
  0x0000000002e4d468: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e4d46d: hlt    
  0x0000000002e4d46e: hlt    
  0x0000000002e4d46f: hlt    
<nmethod compile_id='6' compiler='C1' level='1' entry='0x0000000002e4d360' size='704' address='0x0000000002e4d210' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='131' iicount='131' stamp='0.314'/>
<writer thread='21972'/>
<task_queued compile_id='7' method='java/lang/String charAt (I)C' bytes='29' count='102400' iicount='102400' stamp='0.316' comment='tiered' hot_count='102400'/>
<task_queued compile_id='8' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='768' iicount='768' level='3' stamp='0.317' comment='tiered' hot_count='768'/>
<writer thread='21988'/>
<task_queued compile_id='9' method='java/lang/Math min (II)I' bytes='11' count='1799' iicount='1799' level='3' stamp='0.317' comment='tiered' hot_count='1792'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e4d910:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001ba628d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002e4da60: mov    %eax,-0x6000(%rsp)
  0x0000000002e4da67: push   %rbp
  0x0000000002e4da68: sub    $0x30,%rsp
  0x0000000002e4da6c: movabs $0x1bb5bd30,%rax   ;   {metadata(method data for {method} {0x000000001ba628d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002e4da76: mov    0xdc(%rax),%esi
  0x0000000002e4da7c: add    $0x8,%esi
  0x0000000002e4da7f: mov    %esi,0xdc(%rax)
  0x0000000002e4da85: movabs $0x1ba628d0,%rax   ;   {metadata({method} {0x000000001ba628d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002e4da8f: and    $0x1ff8,%esi
  0x0000000002e4da95: cmp    $0x0,%esi
  0x0000000002e4da98: je     0x0000000002e4dafe  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x0000000002e4da9e: cmp    %r8d,%edx
  0x0000000002e4daa1: movabs $0x1bb5bd30,%rax   ;   {metadata(method data for {method} {0x000000001ba628d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002e4daab: movabs $0x108,%rsi
  0x0000000002e4dab5: jg     0x0000000002e4dac5
  0x0000000002e4dabb: movabs $0x118,%rsi
  0x0000000002e4dac5: mov    (%rax,%rsi,1),%rdi
  0x0000000002e4dac9: lea    0x1(%rdi),%rdi
  0x0000000002e4dacd: mov    %rdi,(%rax,%rsi,1)
  0x0000000002e4dad1: jg     0x0000000002e4daec  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x0000000002e4dad7: movabs $0x1bb5bd30,%rax   ;   {metadata(method data for {method} {0x000000001ba628d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002e4dae1: incl   0x128(%rax)
  0x0000000002e4dae7: jmpq   0x0000000002e4daef  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x0000000002e4daec: mov    %r8,%rdx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x0000000002e4daef: mov    %rdx,%rax
  0x0000000002e4daf2: add    $0x30,%rsp
  0x0000000002e4daf6: pop    %rbp
  0x0000000002e4daf7: test   %eax,-0x285d9fd(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e4dafd: retq   
  0x0000000002e4dafe: mov    %rax,0x8(%rsp)
  0x0000000002e4db03: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e4db0b: callq  0x0000000002e41c20  ; OopMap{off=176}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x0000000002e4db10: jmp    0x0000000002e4da9e
  0x0000000002e4db12: nop
  0x0000000002e4db13: nop
  0x0000000002e4db14: mov    0x2a8(%r15),%rax
  0x0000000002e4db1b: movabs $0x0,%r10
  0x0000000002e4db25: mov    %r10,0x2a8(%r15)
  0x0000000002e4db2c: movabs $0x0,%r10
  0x0000000002e4db36: mov    %r10,0x2b0(%r15)
  0x0000000002e4db3d: add    $0x30,%rsp
  0x0000000002e4db41: pop    %rbp
  0x0000000002e4db42: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e4db47: hlt    
  0x0000000002e4db48: hlt    
  0x0000000002e4db49: hlt    
  0x0000000002e4db4a: hlt    
  0x0000000002e4db4b: hlt    
  0x0000000002e4db4c: hlt    
  0x0000000002e4db4d: hlt    
  0x0000000002e4db4e: hlt    
  0x0000000002e4db4f: hlt    
  0x0000000002e4db50: hlt    
  0x0000000002e4db51: hlt    
  0x0000000002e4db52: hlt    
  0x0000000002e4db53: hlt    
  0x0000000002e4db54: hlt    
  0x0000000002e4db55: hlt    
  0x0000000002e4db56: hlt    
  0x0000000002e4db57: hlt    
  0x0000000002e4db58: hlt    
  0x0000000002e4db59: hlt    
  0x0000000002e4db5a: hlt    
  0x0000000002e4db5b: hlt    
  0x0000000002e4db5c: hlt    
  0x0000000002e4db5d: hlt    
  0x0000000002e4db5e: hlt    
  0x0000000002e4db5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e4db60: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e4db65: mov    %rsp,-0x28(%rsp)
  0x0000000002e4db6a: sub    $0x80,%rsp
  0x0000000002e4db71: mov    %rax,0x78(%rsp)
  0x0000000002e4db76: mov    %rcx,0x70(%rsp)
  0x0000000002e4db7b: mov    %rdx,0x68(%rsp)
  0x0000000002e4db80: mov    %rbx,0x60(%rsp)
  0x0000000002e4db85: mov    %rbp,0x50(%rsp)
  0x0000000002e4db8a: mov    %rsi,0x48(%rsp)
  0x0000000002e4db8f: mov    %rdi,0x40(%rsp)
  0x0000000002e4db94: mov    %r8,0x38(%rsp)
  0x0000000002e4db99: mov    %r9,0x30(%rsp)
  0x0000000002e4db9e: mov    %r10,0x28(%rsp)
  0x0000000002e4dba3: mov    %r11,0x20(%rsp)
  0x0000000002e4dba8: mov    %r12,0x18(%rsp)
  0x0000000002e4dbad: mov    %r13,0x10(%rsp)
  0x0000000002e4dbb2: mov    %r14,0x8(%rsp)
  0x0000000002e4dbb7: mov    %r15,(%rsp)
  0x0000000002e4dbbb: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e4dbc5: movabs $0x2e4db65,%rdx    ;   {internal_word}
  0x0000000002e4dbcf: mov    %rsp,%r8
  0x0000000002e4dbd2: and    $0xfffffffffffffff0,%rsp
  0x0000000002e4dbd6: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e4dbdb: hlt    
[Deopt Handler Code]
  0x0000000002e4dbdc: movabs $0x2e4dbdc,%r10    ;   {section_word}
  0x0000000002e4dbe6: push   %r10
  0x0000000002e4dbe8: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e4dbed: hlt    
  0x0000000002e4dbee: hlt    
  0x0000000002e4dbef: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x0000000002e4da60' size='904' address='0x0000000002e4d910' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' method='java/lang/Math min (II)I' bytes='11' count='1804' iicount='1804' stamp='0.322'/>
<writer thread='26572'/>
Decoding compiled method 0x0000000002e50990:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b973d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002e50ae0: mov    0x8(%rdx),%r10d
  0x0000000002e50ae4: shl    $0x3,%r10
  0x0000000002e50ae8: cmp    %r10,%rax
  0x0000000002e50aeb: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e50af1: data16 xchg %ax,%ax
  0x0000000002e50af4: nopl   0x0(%rax,%rax,1)
  0x0000000002e50afc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e50b00: mov    %eax,-0x6000(%rsp)
  0x0000000002e50b07: push   %rbp
  0x0000000002e50b08: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x0000000002e50b0c: test   %r8d,%r8d
  0x0000000002e50b0f: jl     0x0000000002e50b4d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002e50b11: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x0000000002e50b15: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000002e50b75
  0x0000000002e50b1a: cmp    %ebp,%r8d
  0x0000000002e50b1d: jge    0x0000000002e50b61  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002e50b1f: cmp    %ebp,%r8d
  0x0000000002e50b22: jae    0x0000000002e50b3a
  0x0000000002e50b24: shl    $0x3,%r10
  0x0000000002e50b28: movzwl 0x10(%r10,%r8,2),%eax
  0x0000000002e50b2e: add    $0x20,%rsp
  0x0000000002e50b32: pop    %rbp
  0x0000000002e50b33: test   %eax,-0x2860b39(%rip)        # 0x00000000005f0000
                                                ;   {poll_return}
  0x0000000002e50b39: retq   
  0x0000000002e50b3a: mov    $0xffffffe4,%edx
  0x0000000002e50b3f: mov    %r8d,%ebp
  0x0000000002e50b42: mov    %r10d,(%rsp)
  0x0000000002e50b46: nop
  0x0000000002e50b47: callq  0x0000000002d857a0  ; OopMap{[0]=NarrowOop off=108}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x0000000002e50b4c: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x0000000002e50b4d: mov    %rdx,%rbp
  0x0000000002e50b50: mov    %r8d,0x4(%rsp)
  0x0000000002e50b55: mov    $0xffffff65,%edx
  0x0000000002e50b5a: nop
  0x0000000002e50b5b: callq  0x0000000002d857a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x0000000002e50b60: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002e50b61: mov    %rdx,(%rsp)
  0x0000000002e50b65: mov    %r8d,0xc(%rsp)
  0x0000000002e50b6a: mov    $0xffffff65,%edx
  0x0000000002e50b6f: callq  0x0000000002d857a0  ; OopMap{[0]=Oop off=148}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x0000000002e50b74: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002e50b75: mov    $0xfffffff6,%edx
  0x0000000002e50b7a: nop
  0x0000000002e50b7b: callq  0x0000000002d857a0  ; OopMap{off=160}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000002e50b80: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x0000000002e50b81: hlt    
  0x0000000002e50b82: hlt    
  0x0000000002e50b83: hlt    
  0x0000000002e50b84: hlt    
  0x0000000002e50b85: hlt    
  0x0000000002e50b86: hlt    
  0x0000000002e50b87: hlt    
  0x0000000002e50b88: hlt    
  0x0000000002e50b89: hlt    
  0x0000000002e50b8a: hlt    
  0x0000000002e50b8b: hlt    
  0x0000000002e50b8c: hlt    
  0x0000000002e50b8d: hlt    
  0x0000000002e50b8e: hlt    
  0x0000000002e50b8f: hlt    
  0x0000000002e50b90: hlt    
  0x0000000002e50b91: hlt    
  0x0000000002e50b92: hlt    
  0x0000000002e50b93: hlt    
  0x0000000002e50b94: hlt    
  0x0000000002e50b95: hlt    
  0x0000000002e50b96: hlt    
  0x0000000002e50b97: hlt    
  0x0000000002e50b98: hlt    
  0x0000000002e50b99: hlt    
  0x0000000002e50b9a: hlt    
  0x0000000002e50b9b: hlt    
  0x0000000002e50b9c: hlt    
  0x0000000002e50b9d: hlt    
  0x0000000002e50b9e: hlt    
  0x0000000002e50b9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e50ba0: jmpq   0x0000000002daeea0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002e50ba5: callq  0x0000000002e50baa
  0x0000000002e50baa: subq   $0x5,(%rsp)
  0x0000000002e50baf: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e50bb4: hlt    
  0x0000000002e50bb5: hlt    
  0x0000000002e50bb6: hlt    
  0x0000000002e50bb7: hlt    
<nmethod compile_id='7' compiler='C2' level='4' entry='0x0000000002e50ae0' size='928' address='0x0000000002e50990' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='102525' iicount='102525' stamp='0.327'/>
<writer thread='21988'/>
<task_queued compile_id='10' method='java/lang/String indexOf (II)I' bytes='70' count='527' backedge_count='17408' iicount='527' level='3' stamp='0.327' comment='tiered' hot_count='527'/>
<task_queued compile_id='11' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='384' iicount='384' level='3' stamp='0.327' comment='tiered' hot_count='384'/>
<writer thread='21972'/>
<task_queued compile_id='12' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4618' iicount='4618' level='1' stamp='0.327' comment='tiered' hot_count='4608'/>
<writer thread='21988'/>
<task_queued compile_id='13' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='896' iicount='896' level='3' stamp='0.327' comment='tiered' hot_count='896'/>
<task_queued compile_id='14' method='java/lang/String indexOf (I)I' bytes='7' count='512' iicount='512' level='3' stamp='0.327' comment='tiered' hot_count='512'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e4fed0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b973160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002e500a0: mov    0x8(%rdx),%r10d
  0x0000000002e500a4: shl    $0x3,%r10
  0x0000000002e500a8: cmp    %rax,%r10
  0x0000000002e500ab: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e500b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e500bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e500c0: mov    %eax,-0x6000(%rsp)
  0x0000000002e500c7: push   %rbp
  0x0000000002e500c8: sub    $0x60,%rsp
  0x0000000002e500cc: movabs $0x1bb965b0,%rsi   ;   {metadata(method data for {method} {0x000000001b973160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e500d6: mov    0xdc(%rsi),%ebx
  0x0000000002e500dc: add    $0x8,%ebx
  0x0000000002e500df: mov    %ebx,0xdc(%rsi)
  0x0000000002e500e5: movabs $0x1b973158,%rsi   ;   {metadata({method} {0x000000001b973160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e500ef: and    $0x1ff8,%ebx
  0x0000000002e500f5: cmp    $0x0,%ebx
  0x0000000002e500f8: je     0x0000000002e503ce  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x0000000002e500fe: mov    %rdx,%rsi
  0x0000000002e50101: movabs $0x1bb965b0,%rbx   ;   {metadata(method data for {method} {0x000000001b973160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e5010b: addq   $0x1,0x108(%rbx)
  0x0000000002e50113: movabs $0x1baa1918,%rsi   ;   {metadata(method data for {method} {0x000000001b970488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002e5011d: mov    0xdc(%rsi),%ebx
  0x0000000002e50123: add    $0x8,%ebx
  0x0000000002e50126: mov    %ebx,0xdc(%rsi)
  0x0000000002e5012c: movabs $0x1b970480,%rsi   ;   {metadata({method} {0x000000001b970488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002e50136: and    $0x7ffff8,%ebx
  0x0000000002e5013c: cmp    $0x0,%ebx
  0x0000000002e5013f: je     0x0000000002e503e5
  0x0000000002e50145: cmp    $0x0,%r9d
  0x0000000002e50149: movabs $0x1bb965b0,%rsi   ;   {metadata(method data for {method} {0x000000001b973160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e50153: movabs $0x118,%rbx
  0x0000000002e5015d: jge    0x0000000002e5016d
  0x0000000002e50163: movabs $0x128,%rbx
  0x0000000002e5016d: mov    (%rsi,%rbx,1),%rax
  0x0000000002e50171: lea    0x1(%rax),%rax
  0x0000000002e50175: mov    %rax,(%rsi,%rbx,1)
  0x0000000002e50179: jl     0x0000000002e5038e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x0000000002e5017f: cmp    $0x0,%edi
  0x0000000002e50182: movabs $0x1bb965b0,%rsi   ;   {metadata(method data for {method} {0x000000001b973160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e5018c: movabs $0x148,%rbx
  0x0000000002e50196: jg     0x0000000002e501a6
  0x0000000002e5019c: movabs $0x158,%rbx
  0x0000000002e501a6: mov    (%rsi,%rbx,1),%rax
  0x0000000002e501aa: lea    0x1(%rax),%rax
  0x0000000002e501ae: mov    %rax,(%rsi,%rbx,1)
  0x0000000002e501b2: jg     0x0000000002e5022e  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x0000000002e501b8: cmp    $0x0,%edi
  0x0000000002e501bb: movabs $0x1bb965b0,%rsi   ;   {metadata(method data for {method} {0x000000001b973160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e501c5: movabs $0x168,%rbx
  0x0000000002e501cf: jge    0x0000000002e501df
  0x0000000002e501d5: movabs $0x178,%rbx
  0x0000000002e501df: mov    (%rsi,%rbx,1),%rax
  0x0000000002e501e3: lea    0x1(%rax),%rax
  0x0000000002e501e7: mov    %rax,(%rsi,%rbx,1)
  0x0000000002e501eb: jl     0x0000000002e5034e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x0000000002e501f1: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x0000000002e503fc
  0x0000000002e501f5: cmp    %esi,%r9d
  0x0000000002e501f8: movabs $0x1bb965b0,%rsi   ;   {metadata(method data for {method} {0x000000001b973160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e50202: movabs $0x198,%rbx
  0x0000000002e5020c: jg     0x0000000002e5021c
  0x0000000002e50212: movabs $0x1a8,%rbx
  0x0000000002e5021c: mov    (%rsi,%rbx,1),%rax
  0x0000000002e50220: lea    0x1(%rax),%rax
  0x0000000002e50224: mov    %rax,(%rsi,%rbx,1)
  0x0000000002e50228: jle    0x0000000002e502ca  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x0000000002e5022e: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000002e50401
  0x0000000002e50232: sub    %edi,%esi
  0x0000000002e50234: cmp    %esi,%r9d
  0x0000000002e50237: movabs $0x1bb965b0,%rsi   ;   {metadata(method data for {method} {0x000000001b973160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e50241: movabs $0x1b8,%rbx
  0x0000000002e5024b: jle    0x0000000002e5025b
  0x0000000002e50251: movabs $0x1c8,%rbx
  0x0000000002e5025b: mov    (%rsi,%rbx,1),%rax
  0x0000000002e5025f: lea    0x1(%rax),%rax
  0x0000000002e50263: mov    %rax,(%rsi,%rbx,1)
  0x0000000002e50267: jg     0x0000000002e50304  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x0000000002e5026d: mov    %rdx,0x38(%rsp)
  0x0000000002e50272: movabs $0x1bb965b0,%rsi   ;   {metadata(method data for {method} {0x000000001b973160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e5027c: addq   $0x1,0x1e8(%rsi)
  0x0000000002e50284: add    %r9d,%edi
  0x0000000002e50287: mov    %r8,%rdx
  0x0000000002e5028a: mov    %r9,%r8
  0x0000000002e5028d: mov    %rdi,%r9           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x0000000002e50290: nop
  0x0000000002e50291: nop
  0x0000000002e50292: nop
  0x0000000002e50293: nop
  0x0000000002e50294: nop
  0x0000000002e50295: nop
  0x0000000002e50296: nop
  0x0000000002e50297: callq  0x0000000002d86620  ; OopMap{[56]=Oop off=508}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x0000000002e5029c: mov    0x38(%rsp),%rdx
  0x0000000002e502a1: mov    %rax,%r10
  0x0000000002e502a4: shr    $0x3,%r10
  0x0000000002e502a8: mov    %r10d,0xc(%rdx)
  0x0000000002e502ac: shr    $0x9,%rdx
  0x0000000002e502b0: movabs $0xeaf2000,%rax
  0x0000000002e502ba: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x0000000002e502be: add    $0x60,%rsp
  0x0000000002e502c2: pop    %rbp
  0x0000000002e502c3: test   %eax,-0x28601c9(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e502c9: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x0000000002e502ca: movabs $0x76b40aaa8,%rax  ;   {oop(&quot;&quot;)}
  0x0000000002e502d4: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000002e50406
  0x0000000002e502d7: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x0000000002e502db: mov    %rax,%r10
  0x0000000002e502de: shr    $0x3,%r10
  0x0000000002e502e2: mov    %r10d,0xc(%rdx)
  0x0000000002e502e6: shr    $0x9,%rdx
  0x0000000002e502ea: movabs $0xeaf2000,%rax
  0x0000000002e502f4: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x0000000002e502f8: add    $0x60,%rsp
  0x0000000002e502fc: pop    %rbp
  0x0000000002e502fd: test   %eax,-0x2860203(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e50303: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x0000000002e50304: nopl   0x0(%rax)
  0x0000000002e50308: jmpq   0x0000000002e5041a  ;   {no_reloc}
  0x0000000002e5030d: add    %al,(%rax)
  0x0000000002e5030f: add    %al,(%rax)
  0x0000000002e50311: add    %ch,%cl
  0x0000000002e50313: or     $0x4c000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x0000000002e50318: mov    %eax,%eax
  0x0000000002e5031a: movabs $0x1bb965b0,%rdx   ;   {metadata(method data for {method} {0x000000001b973160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e50324: addq   $0x1,0x1d8(%rdx)
  0x0000000002e5032c: add    %r9d,%edi
  0x0000000002e5032f: mov    %rdi,%r8
  0x0000000002e50332: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x0000000002e50335: mov    %rax,0x40(%rsp)
  0x0000000002e5033a: nop
  0x0000000002e5033b: nop
  0x0000000002e5033c: nop
  0x0000000002e5033d: nop
  0x0000000002e5033e: nop
  0x0000000002e5033f: callq  0x0000000002d861a0  ; OopMap{[64]=Oop off=676}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x0000000002e50344: mov    0x40(%rsp),%rax
  0x0000000002e50349: jmpq   0x0000000002e504a8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x0000000002e5034e: xchg   %ax,%ax
  0x0000000002e50350: jmpq   0x0000000002e50440  ;   {no_reloc}
  0x0000000002e50355: add    %al,(%rax)
  0x0000000002e50357: add    %al,(%rax)
  0x0000000002e50359: add    %ch,%cl
  0x0000000002e5035b: jmp    0x0000000002e5035d
  0x0000000002e5035d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x0000000002e5035f: mov    %rax,%r8
  0x0000000002e50362: movabs $0x1bb965b0,%rdx   ;   {metadata(method data for {method} {0x000000001b973160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e5036c: addq   $0x1,0x188(%rdx)
  0x0000000002e50374: mov    %rdi,%r8
  0x0000000002e50377: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x0000000002e5037a: mov    %rax,0x48(%rsp)
  0x0000000002e5037f: callq  0x0000000002d861a0  ; OopMap{[72]=Oop off=740}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x0000000002e50384: mov    0x48(%rsp),%rax
  0x0000000002e50389: jmpq   0x0000000002e504a8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x0000000002e5038e: xchg   %ax,%ax
  0x0000000002e50390: jmpq   0x0000000002e50466  ;   {no_reloc}
  0x0000000002e50395: add    %al,(%rax)
  0x0000000002e50397: add    %al,(%rax)
  0x0000000002e50399: add    %ch,%cl
  0x0000000002e5039b: roll   (%rax)
  0x0000000002e5039d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x0000000002e5039f: mov    %rax,%r8
  0x0000000002e503a2: movabs $0x1bb965b0,%rdx   ;   {metadata(method data for {method} {0x000000001b973160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e503ac: addq   $0x1,0x138(%rdx)
  0x0000000002e503b4: mov    %r9,%r8
  0x0000000002e503b7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x0000000002e503ba: mov    %rax,0x50(%rsp)
  0x0000000002e503bf: callq  0x0000000002d861a0  ; OopMap{[80]=Oop off=804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000002e503c4: mov    0x50(%rsp),%rax
  0x0000000002e503c9: jmpq   0x0000000002e504a8
  0x0000000002e503ce: mov    %rsi,0x8(%rsp)
  0x0000000002e503d3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e503db: callq  0x0000000002e41c20  ; OopMap{rdx=Oop r8=Oop off=832}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000002e503e0: jmpq   0x0000000002e500fe
  0x0000000002e503e5: mov    %rsi,0x8(%rsp)
  0x0000000002e503ea: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e503f2: callq  0x0000000002e41c20  ; OopMap{rdx=Oop r8=Oop off=855}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x0000000002e503f7: jmpq   0x0000000002e50145
  0x0000000002e503fc: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop r8=Oop off=865}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x0000000002e50401: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop r8=Oop off=870}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x0000000002e50406: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop off=875}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x0000000002e5040b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002e50415: mov    $0xa050f00,%eax
  0x0000000002e5041a: callq  0x0000000002e40b60  ; OopMap{off=895}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002e5041f: jmpq   0x0000000002e50308
  0x0000000002e50424: mov    %rdx,%rdx
  0x0000000002e50427: callq  0x0000000002db06a0  ; OopMap{off=908}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002e5042c: jmpq   0x0000000002e50317
  0x0000000002e50431: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002e5043b: mov    $0xa050f00,%eax
  0x0000000002e50440: callq  0x0000000002e40b60  ; OopMap{off=933}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002e50445: jmpq   0x0000000002e50350
  0x0000000002e5044a: mov    %rdx,%rdx
  0x0000000002e5044d: callq  0x0000000002db06a0  ; OopMap{off=946}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002e50452: jmpq   0x0000000002e5035f
  0x0000000002e50457: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002e50461: mov    $0xa050f00,%eax
  0x0000000002e50466: callq  0x0000000002e40b60  ; OopMap{off=971}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002e5046b: jmpq   0x0000000002e50390
  0x0000000002e50470: mov    %rdx,%rdx
  0x0000000002e50473: callq  0x0000000002db06a0  ; OopMap{off=984}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002e50478: jmpq   0x0000000002e5039f
  0x0000000002e5047d: nop
  0x0000000002e5047e: nop
  0x0000000002e5047f: mov    0x2a8(%r15),%rax
  0x0000000002e50486: movabs $0x0,%r10
  0x0000000002e50490: mov    %r10,0x2a8(%r15)
  0x0000000002e50497: movabs $0x0,%r10
  0x0000000002e504a1: mov    %r10,0x2b0(%r15)
  0x0000000002e504a8: add    $0x60,%rsp
  0x0000000002e504ac: pop    %rbp
  0x0000000002e504ad: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e504b2: hlt    
  0x0000000002e504b3: hlt    
  0x0000000002e504b4: hlt    
  0x0000000002e504b5: hlt    
  0x0000000002e504b6: hlt    
  0x0000000002e504b7: hlt    
  0x0000000002e504b8: hlt    
  0x0000000002e504b9: hlt    
  0x0000000002e504ba: hlt    
  0x0000000002e504bb: hlt    
  0x0000000002e504bc: hlt    
  0x0000000002e504bd: hlt    
  0x0000000002e504be: hlt    
  0x0000000002e504bf: hlt    
[Stub Code]
  0x0000000002e504c0: nop                       ;   {no_reloc}
  0x0000000002e504c1: nop
  0x0000000002e504c2: nop
  0x0000000002e504c3: nop
  0x0000000002e504c4: nop
  0x0000000002e504c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e504cf: jmpq   0x0000000002e504cf  ;   {runtime_call}
  0x0000000002e504d4: nop
  0x0000000002e504d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e504df: jmpq   0x0000000002e504df  ;   {runtime_call}
  0x0000000002e504e4: nop
  0x0000000002e504e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e504ef: jmpq   0x0000000002e504ef  ;   {runtime_call}
  0x0000000002e504f4: nop
  0x0000000002e504f5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e504ff: jmpq   0x0000000002e504ff  ;   {runtime_call}
[Exception Handler]
  0x0000000002e50504: callq  0x0000000002e3f3e0  ;   {runtime_call}
  0x0000000002e50509: mov    %rsp,-0x28(%rsp)
  0x0000000002e5050e: sub    $0x80,%rsp
  0x0000000002e50515: mov    %rax,0x78(%rsp)
  0x0000000002e5051a: mov    %rcx,0x70(%rsp)
  0x0000000002e5051f: mov    %rdx,0x68(%rsp)
  0x0000000002e50524: mov    %rbx,0x60(%rsp)
  0x0000000002e50529: mov    %rbp,0x50(%rsp)
  0x0000000002e5052e: mov    %rsi,0x48(%rsp)
  0x0000000002e50533: mov    %rdi,0x40(%rsp)
  0x0000000002e50538: mov    %r8,0x38(%rsp)
  0x0000000002e5053d: mov    %r9,0x30(%rsp)
  0x0000000002e50542: mov    %r10,0x28(%rsp)
  0x0000000002e50547: mov    %r11,0x20(%rsp)
  0x0000000002e5054c: mov    %r12,0x18(%rsp)
  0x0000000002e50551: mov    %r13,0x10(%rsp)
  0x0000000002e50556: mov    %r14,0x8(%rsp)
  0x0000000002e5055b: mov    %r15,(%rsp)
  0x0000000002e5055f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e50569: movabs $0x2e50509,%rdx    ;   {internal_word}
  0x0000000002e50573: mov    %rsp,%r8
  0x0000000002e50576: and    $0xfffffffffffffff0,%rsp
  0x0000000002e5057a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5057f: hlt    
[Deopt Handler Code]
  0x0000000002e50580: movabs $0x2e50580,%r10    ;   {section_word}
  0x0000000002e5058a: push   %r10
  0x0000000002e5058c: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e50591: hlt    
  0x0000000002e50592: hlt    
  0x0000000002e50593: hlt    
  0x0000000002e50594: hlt    
  0x0000000002e50595: hlt    
  0x0000000002e50596: hlt    
  0x0000000002e50597: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x0000000002e500a0' size='2704' address='0x0000000002e4fed0' relocation_offset='288' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='902' iicount='902' stamp='0.344'/>
Decoding compiled method 0x0000000002e4fbd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b970488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000002e4fd20: mov    0x8(%rdx),%r10d
  0x0000000002e4fd24: shl    $0x3,%r10
  0x0000000002e4fd28: cmp    %rax,%r10
  0x0000000002e4fd2b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e4fd31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e4fd3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e4fd40: mov    %eax,-0x6000(%rsp)
  0x0000000002e4fd47: push   %rbp
  0x0000000002e4fd48: sub    $0x50,%rsp
  0x0000000002e4fd4c: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000002e4fd4f: mov    %rdx,0x40(%rsp)
  0x0000000002e4fd54: callq  0x0000000002db0920  ; OopMap{[64]=Oop off=57}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000002e4fd59: add    $0x50,%rsp
  0x0000000002e4fd5d: pop    %rbp
  0x0000000002e4fd5e: test   %eax,-0x285fc64(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e4fd64: retq   
  0x0000000002e4fd65: nop
  0x0000000002e4fd66: nop
  0x0000000002e4fd67: mov    0x2a8(%r15),%rax
  0x0000000002e4fd6e: movabs $0x0,%r10
  0x0000000002e4fd78: mov    %r10,0x2a8(%r15)
  0x0000000002e4fd7f: movabs $0x0,%r10
  0x0000000002e4fd89: mov    %r10,0x2b0(%r15)
  0x0000000002e4fd90: add    $0x50,%rsp
  0x0000000002e4fd94: pop    %rbp
  0x0000000002e4fd95: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e4fd9a: hlt    
  0x0000000002e4fd9b: hlt    
  0x0000000002e4fd9c: hlt    
  0x0000000002e4fd9d: hlt    
  0x0000000002e4fd9e: hlt    
  0x0000000002e4fd9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e4fda0: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e4fda5: mov    %rsp,-0x28(%rsp)
  0x0000000002e4fdaa: sub    $0x80,%rsp
  0x0000000002e4fdb1: mov    %rax,0x78(%rsp)
  0x0000000002e4fdb6: mov    %rcx,0x70(%rsp)
  0x0000000002e4fdbb: mov    %rdx,0x68(%rsp)
  0x0000000002e4fdc0: mov    %rbx,0x60(%rsp)
  0x0000000002e4fdc5: mov    %rbp,0x50(%rsp)
  0x0000000002e4fdca: mov    %rsi,0x48(%rsp)
  0x0000000002e4fdcf: mov    %rdi,0x40(%rsp)
  0x0000000002e4fdd4: mov    %r8,0x38(%rsp)
  0x0000000002e4fdd9: mov    %r9,0x30(%rsp)
  0x0000000002e4fdde: mov    %r10,0x28(%rsp)
  0x0000000002e4fde3: mov    %r11,0x20(%rsp)
  0x0000000002e4fde8: mov    %r12,0x18(%rsp)
  0x0000000002e4fded: mov    %r13,0x10(%rsp)
  0x0000000002e4fdf2: mov    %r14,0x8(%rsp)
  0x0000000002e4fdf7: mov    %r15,(%rsp)
  0x0000000002e4fdfb: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e4fe05: movabs $0x2e4fda5,%rdx    ;   {internal_word}
  0x0000000002e4fe0f: mov    %rsp,%r8
  0x0000000002e4fe12: and    $0xfffffffffffffff0,%rsp
  0x0000000002e4fe16: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e4fe1b: hlt    
[Deopt Handler Code]
  0x0000000002e4fe1c: movabs $0x2e4fe1c,%r10    ;   {section_word}
  0x0000000002e4fe26: push   %r10
  0x0000000002e4fe28: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e4fe2d: hlt    
  0x0000000002e4fe2e: hlt    
  0x0000000002e4fe2f: hlt    
<nmethod compile_id='12' compiler='C1' level='1' entry='0x0000000002e4fd20' size='712' address='0x0000000002e4fbd0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4803' iicount='4803' stamp='0.347'/>
<make_not_entrant thread='12632' compile_id='3' compiler='C1' level='3' stamp='0.347'/>
<writer thread='21972'/>
<task_queued compile_id='15' method='java/lang/String length ()I' bytes='6' count='27776' iicount='27776' stamp='0.348' comment='tiered' hot_count='27776'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e4eed0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b975138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002e4f040: mov    0x8(%rdx),%r10d
  0x0000000002e4f044: shl    $0x3,%r10
  0x0000000002e4f048: cmp    %rax,%r10
  0x0000000002e4f04b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e4f051: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e4f05c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e4f060: mov    %eax,-0x6000(%rsp)
  0x0000000002e4f067: push   %rbp
  0x0000000002e4f068: sub    $0x30,%rsp
  0x0000000002e4f06c: movabs $0x1baf3b58,%rax
  0x0000000002e4f076: mov    0x8(%rax),%esi
  0x0000000002e4f079: add    $0x8,%esi
  0x0000000002e4f07c: mov    %esi,0x8(%rax)
  0x0000000002e4f07f: movabs $0x1b975130,%rax   ;   {metadata({method} {0x000000001b975138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e4f089: and    $0x3ff8,%esi
  0x0000000002e4f08f: cmp    $0x0,%esi
  0x0000000002e4f092: je     0x0000000002e4f179  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x0000000002e4f098: mov    0xc(%rdx),%eax
  0x0000000002e4f09b: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x0000000002e4f09f: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x0000000002e4f190
  0x0000000002e4f0a2: cmp    $0x0,%r9d
  0x0000000002e4f0a6: jge    0x0000000002e4f0b7  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000002e4f0ac: mov    $0x0,%r9d
  0x0000000002e4f0b2: jmpq   0x0000000002e4f0c0  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x0000000002e4f0b7: cmp    %esi,%r9d
  0x0000000002e4f0ba: jge    0x0000000002e4f168  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x0000000002e4f0c0: cmp    $0x10000,%r8d
  0x0000000002e4f0c7: jge    0x0000000002e4f153
  0x0000000002e4f0cd: jmpq   0x0000000002e4f128  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x0000000002e4f0d2: nopw   0x0(%rax,%rax,1)
  0x0000000002e4f0d8: movslq %r9d,%rdx
  0x0000000002e4f0db: cmp    0xc(%rax),%r9d
  0x0000000002e4f0df: jae    0x0000000002e4f195
  0x0000000002e4f0e5: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002e4f0ea: cmp    %r8d,%edx
  0x0000000002e4f0ed: je     0x0000000002e4f133  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002e4f0f3: inc    %r9d
  0x0000000002e4f0f6: movabs $0x1baf3b58,%rdx
  0x0000000002e4f100: mov    0xc(%rdx),%edi
  0x0000000002e4f103: add    $0x8,%edi
  0x0000000002e4f106: mov    %edi,0xc(%rdx)
  0x0000000002e4f109: movabs $0x1b975130,%rdx   ;   {metadata({method} {0x000000001b975138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e4f113: and    $0x1fff8,%edi
  0x0000000002e4f119: cmp    $0x0,%edi
  0x0000000002e4f11c: je     0x0000000002e4f19e  ; OopMap{rax=Oop off=226}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x0000000002e4f122: test   %eax,-0x285f028(%rip)        # 0x00000000005f0100
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {poll}
  0x0000000002e4f128: cmp    %esi,%r9d
  0x0000000002e4f12b: jge    0x0000000002e4f142
  0x0000000002e4f131: jmp    0x0000000002e4f0d8  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002e4f133: mov    %r9,%rax
  0x0000000002e4f136: add    $0x30,%rsp
  0x0000000002e4f13a: pop    %rbp
  0x0000000002e4f13b: test   %eax,-0x285f041(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e4f141: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x0000000002e4f142: mov    $0xffffffff,%eax
  0x0000000002e4f147: add    $0x30,%rsp
  0x0000000002e4f14b: pop    %rbp
  0x0000000002e4f14c: test   %eax,-0x285f052(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e4f152: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x0000000002e4f153: nop
  0x0000000002e4f154: nop
  0x0000000002e4f155: nop
  0x0000000002e4f156: nop
  0x0000000002e4f157: callq  0x0000000002d861a0  ; OopMap{off=284}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x0000000002e4f15c: add    $0x30,%rsp
  0x0000000002e4f160: pop    %rbp
  0x0000000002e4f161: test   %eax,-0x285f067(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e4f167: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x0000000002e4f168: mov    $0xffffffff,%eax
  0x0000000002e4f16d: add    $0x30,%rsp
  0x0000000002e4f171: pop    %rbp
  0x0000000002e4f172: test   %eax,-0x285f078(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e4f178: retq   
  0x0000000002e4f179: mov    %rax,0x8(%rsp)
  0x0000000002e4f17e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e4f186: callq  0x0000000002e41c20  ; OopMap{rdx=Oop off=331}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x0000000002e4f18b: jmpq   0x0000000002e4f098
  0x0000000002e4f190: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop rax=Oop off=341}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x0000000002e4f195: mov    %r9,(%rsp)
  0x0000000002e4f199: callq  0x0000000002db1280  ; OopMap{rax=Oop off=350}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000000002e4f19e: mov    %rdx,0x8(%rsp)
  0x0000000002e4f1a3: movq   $0x3a,(%rsp)
  0x0000000002e4f1ab: callq  0x0000000002e41c20  ; OopMap{rax=Oop off=368}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x0000000002e4f1b0: jmpq   0x0000000002e4f122
  0x0000000002e4f1b5: nop
  0x0000000002e4f1b6: nop
  0x0000000002e4f1b7: mov    0x2a8(%r15),%rax
  0x0000000002e4f1be: movabs $0x0,%r10
  0x0000000002e4f1c8: mov    %r10,0x2a8(%r15)
  0x0000000002e4f1cf: movabs $0x0,%r10
  0x0000000002e4f1d9: mov    %r10,0x2b0(%r15)
  0x0000000002e4f1e0: add    $0x30,%rsp
  0x0000000002e4f1e4: pop    %rbp
  0x0000000002e4f1e5: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e4f1ea: hlt    
  0x0000000002e4f1eb: hlt    
  0x0000000002e4f1ec: hlt    
  0x0000000002e4f1ed: hlt    
  0x0000000002e4f1ee: hlt    
  0x0000000002e4f1ef: hlt    
  0x0000000002e4f1f0: hlt    
  0x0000000002e4f1f1: hlt    
  0x0000000002e4f1f2: hlt    
  0x0000000002e4f1f3: hlt    
  0x0000000002e4f1f4: hlt    
  0x0000000002e4f1f5: hlt    
  0x0000000002e4f1f6: hlt    
  0x0000000002e4f1f7: hlt    
  0x0000000002e4f1f8: hlt    
  0x0000000002e4f1f9: hlt    
  0x0000000002e4f1fa: hlt    
  0x0000000002e4f1fb: hlt    
  0x0000000002e4f1fc: hlt    
  0x0000000002e4f1fd: hlt    
  0x0000000002e4f1fe: hlt    
  0x0000000002e4f1ff: hlt    
[Stub Code]
  0x0000000002e4f200: nop                       ;   {no_reloc}
  0x0000000002e4f201: nop
  0x0000000002e4f202: nop
  0x0000000002e4f203: nop
  0x0000000002e4f204: nop
  0x0000000002e4f205: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e4f20f: jmpq   0x0000000002e4f20f  ;   {runtime_call}
[Exception Handler]
  0x0000000002e4f214: callq  0x0000000002e3f3e0  ;   {runtime_call}
  0x0000000002e4f219: mov    %rsp,-0x28(%rsp)
  0x0000000002e4f21e: sub    $0x80,%rsp
  0x0000000002e4f225: mov    %rax,0x78(%rsp)
  0x0000000002e4f22a: mov    %rcx,0x70(%rsp)
  0x0000000002e4f22f: mov    %rdx,0x68(%rsp)
  0x0000000002e4f234: mov    %rbx,0x60(%rsp)
  0x0000000002e4f239: mov    %rbp,0x50(%rsp)
  0x0000000002e4f23e: mov    %rsi,0x48(%rsp)
  0x0000000002e4f243: mov    %rdi,0x40(%rsp)
  0x0000000002e4f248: mov    %r8,0x38(%rsp)
  0x0000000002e4f24d: mov    %r9,0x30(%rsp)
  0x0000000002e4f252: mov    %r10,0x28(%rsp)
  0x0000000002e4f257: mov    %r11,0x20(%rsp)
  0x0000000002e4f25c: mov    %r12,0x18(%rsp)
  0x0000000002e4f261: mov    %r13,0x10(%rsp)
  0x0000000002e4f266: mov    %r14,0x8(%rsp)
  0x0000000002e4f26b: mov    %r15,(%rsp)
  0x0000000002e4f26f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e4f279: movabs $0x2e4f219,%rdx    ;   {internal_word}
  0x0000000002e4f283: mov    %rsp,%r8
  0x0000000002e4f286: and    $0xfffffffffffffff0,%rsp
  0x0000000002e4f28a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e4f28f: hlt    
[Deopt Handler Code]
  0x0000000002e4f290: movabs $0x2e4f290,%r10    ;   {section_word}
  0x0000000002e4f29a: push   %r10
  0x0000000002e4f29c: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e4f2a1: hlt    
  0x0000000002e4f2a2: hlt    
  0x0000000002e4f2a3: hlt    
  0x0000000002e4f2a4: hlt    
  0x0000000002e4f2a5: hlt    
  0x0000000002e4f2a6: hlt    
  0x0000000002e4f2a7: hlt    
<nmethod compile_id='10' compiler='C1' level='2' entry='0x0000000002e4f040' size='1528' address='0x0000000002e4eed0' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='992' scopes_pcs_offset='1152' dependencies_offset='1504' nul_chk_table_offset='1512' method='java/lang/String indexOf (II)I' bytes='70' count='836' backedge_count='32256' iicount='836' stamp='0.357'/>
Decoding compiled method 0x0000000002e4e490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b975050} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002e4e600: mov    0x8(%rdx),%r10d
  0x0000000002e4e604: shl    $0x3,%r10
  0x0000000002e4e608: cmp    %rax,%r10
  0x0000000002e4e60b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e4e611: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e4e61c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e4e620: mov    %eax,-0x6000(%rsp)
  0x0000000002e4e627: push   %rbp
  0x0000000002e4e628: sub    $0x30,%rsp
  0x0000000002e4e62c: movabs $0x1bc1fb20,%r9    ;   {metadata(method data for {method} {0x000000001b975050} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e4e636: mov    0xdc(%r9),%esi
  0x0000000002e4e63d: add    $0x8,%esi
  0x0000000002e4e640: mov    %esi,0xdc(%r9)
  0x0000000002e4e647: movabs $0x1b975048,%r9    ;   {metadata({method} {0x000000001b975050} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e4e651: and    $0x1ff8,%esi
  0x0000000002e4e657: cmp    $0x0,%esi
  0x0000000002e4e65a: je     0x0000000002e4e708  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x0000000002e4e660: mov    %rdx,%r9
  0x0000000002e4e663: movabs $0x1bc1fb20,%rsi   ;   {metadata(method data for {method} {0x000000001b975050} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e4e66d: mov    0x8(%r9),%r9d
  0x0000000002e4e671: shl    $0x3,%r9
  0x0000000002e4e675: cmp    0x110(%rsi),%r9
  0x0000000002e4e67c: jne    0x0000000002e4e68b
  0x0000000002e4e67e: addq   $0x1,0x118(%rsi)
  0x0000000002e4e686: jmpq   0x0000000002e4e6f1
  0x0000000002e4e68b: cmp    0x120(%rsi),%r9
  0x0000000002e4e692: jne    0x0000000002e4e6a1
  0x0000000002e4e694: addq   $0x1,0x128(%rsi)
  0x0000000002e4e69c: jmpq   0x0000000002e4e6f1
  0x0000000002e4e6a1: cmpq   $0x0,0x110(%rsi)
  0x0000000002e4e6ac: jne    0x0000000002e4e6c5
  0x0000000002e4e6ae: mov    %r9,0x110(%rsi)
  0x0000000002e4e6b5: movq   $0x1,0x118(%rsi)
  0x0000000002e4e6c0: jmpq   0x0000000002e4e6f1
  0x0000000002e4e6c5: cmpq   $0x0,0x120(%rsi)
  0x0000000002e4e6d0: jne    0x0000000002e4e6e9
  0x0000000002e4e6d2: mov    %r9,0x120(%rsi)
  0x0000000002e4e6d9: movq   $0x1,0x128(%rsi)
  0x0000000002e4e6e4: jmpq   0x0000000002e4e6f1
  0x0000000002e4e6e9: addq   $0x1,0x108(%rsi)
  0x0000000002e4e6f1: mov    $0x0,%r9d          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x0000000002e4e6f7: callq  0x0000000002d861a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x0000000002e4e6fc: add    $0x30,%rsp
  0x0000000002e4e700: pop    %rbp
  0x0000000002e4e701: test   %eax,-0x285e607(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e4e707: retq   
  0x0000000002e4e708: mov    %r9,0x8(%rsp)
  0x0000000002e4e70d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e4e715: callq  0x0000000002e41c20  ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x0000000002e4e71a: jmpq   0x0000000002e4e660
  0x0000000002e4e71f: nop
  0x0000000002e4e720: nop
  0x0000000002e4e721: mov    0x2a8(%r15),%rax
  0x0000000002e4e728: movabs $0x0,%r10
  0x0000000002e4e732: mov    %r10,0x2a8(%r15)
  0x0000000002e4e739: movabs $0x0,%r10
  0x0000000002e4e743: mov    %r10,0x2b0(%r15)
  0x0000000002e4e74a: add    $0x30,%rsp
  0x0000000002e4e74e: pop    %rbp
  0x0000000002e4e74f: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e4e754: hlt    
  0x0000000002e4e755: hlt    
  0x0000000002e4e756: hlt    
  0x0000000002e4e757: hlt    
  0x0000000002e4e758: hlt    
  0x0000000002e4e759: hlt    
  0x0000000002e4e75a: hlt    
  0x0000000002e4e75b: hlt    
  0x0000000002e4e75c: hlt    
  0x0000000002e4e75d: hlt    
  0x0000000002e4e75e: hlt    
  0x0000000002e4e75f: hlt    
[Stub Code]
  0x0000000002e4e760: nop                       ;   {no_reloc}
  0x0000000002e4e761: nop
  0x0000000002e4e762: nop
  0x0000000002e4e763: nop
  0x0000000002e4e764: nop
  0x0000000002e4e765: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e4e76f: jmpq   0x0000000002e4e76f  ;   {runtime_call}
[Exception Handler]
  0x0000000002e4e774: callq  0x0000000002e3f3e0  ;   {runtime_call}
  0x0000000002e4e779: mov    %rsp,-0x28(%rsp)
  0x0000000002e4e77e: sub    $0x80,%rsp
  0x0000000002e4e785: mov    %rax,0x78(%rsp)
  0x0000000002e4e78a: mov    %rcx,0x70(%rsp)
  0x0000000002e4e78f: mov    %rdx,0x68(%rsp)
  0x0000000002e4e794: mov    %rbx,0x60(%rsp)
  0x0000000002e4e799: mov    %rbp,0x50(%rsp)
  0x0000000002e4e79e: mov    %rsi,0x48(%rsp)
  0x0000000002e4e7a3: mov    %rdi,0x40(%rsp)
  0x0000000002e4e7a8: mov    %r8,0x38(%rsp)
  0x0000000002e4e7ad: mov    %r9,0x30(%rsp)
  0x0000000002e4e7b2: mov    %r10,0x28(%rsp)
  0x0000000002e4e7b7: mov    %r11,0x20(%rsp)
  0x0000000002e4e7bc: mov    %r12,0x18(%rsp)
  0x0000000002e4e7c1: mov    %r13,0x10(%rsp)
  0x0000000002e4e7c6: mov    %r14,0x8(%rsp)
  0x0000000002e4e7cb: mov    %r15,(%rsp)
  0x0000000002e4e7cf: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e4e7d9: movabs $0x2e4e779,%rdx    ;   {internal_word}
  0x0000000002e4e7e3: mov    %rsp,%r8
  0x0000000002e4e7e6: and    $0xfffffffffffffff0,%rsp
  0x0000000002e4e7ea: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e4e7ef: hlt    
[Deopt Handler Code]
  0x0000000002e4e7f0: movabs $0x2e4e7f0,%r10    ;   {section_word}
  0x0000000002e4e7fa: push   %r10
  0x0000000002e4e7fc: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e4e801: hlt    
  0x0000000002e4e802: hlt    
  0x0000000002e4e803: hlt    
  0x0000000002e4e804: hlt    
  0x0000000002e4e805: hlt    
  0x0000000002e4e806: hlt    
  0x0000000002e4e807: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x0000000002e4e600' size='1040' address='0x0000000002e4e490' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='741' iicount='741' stamp='0.363'/>
<writer thread='23708'/>
Decoding compiled method 0x0000000002e4e210:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b973c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000002e4e340: mov    0x8(%rdx),%r10d
  0x0000000002e4e344: shl    $0x3,%r10
  0x0000000002e4e348: cmp    %r10,%rax
  0x0000000002e4e34b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e4e351: data16 xchg %ax,%ax
  0x0000000002e4e354: nopl   0x0(%rax,%rax,1)
  0x0000000002e4e35c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e4e360: mov    %eax,-0x6000(%rsp)
  0x0000000002e4e367: push   %rbp
  0x0000000002e4e368: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x0000000002e4e36c: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x0000000002e4e370: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x0000000002e4e381
  0x0000000002e4e375: add    $0x10,%rsp
  0x0000000002e4e379: pop    %rbp
  0x0000000002e4e37a: test   %eax,-0x285e380(%rip)        # 0x00000000005f0000
                                                ;   {poll_return}
  0x0000000002e4e380: retq   
  0x0000000002e4e381: mov    $0xfffffff6,%edx
  0x0000000002e4e386: nop
  0x0000000002e4e387: callq  0x0000000002d857a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x0000000002e4e38c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x0000000002e4e38d: hlt    
  0x0000000002e4e38e: hlt    
  0x0000000002e4e38f: hlt    
  0x0000000002e4e390: hlt    
  0x0000000002e4e391: hlt    
  0x0000000002e4e392: hlt    
  0x0000000002e4e393: hlt    
  0x0000000002e4e394: hlt    
  0x0000000002e4e395: hlt    
  0x0000000002e4e396: hlt    
  0x0000000002e4e397: hlt    
  0x0000000002e4e398: hlt    
  0x0000000002e4e399: hlt    
  0x0000000002e4e39a: hlt    
  0x0000000002e4e39b: hlt    
  0x0000000002e4e39c: hlt    
  0x0000000002e4e39d: hlt    
  0x0000000002e4e39e: hlt    
  0x0000000002e4e39f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e4e3a0: jmpq   0x0000000002daeea0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002e4e3a5: callq  0x0000000002e4e3aa
  0x0000000002e4e3aa: subq   $0x5,(%rsp)
  0x0000000002e4e3af: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e4e3b4: hlt    
  0x0000000002e4e3b5: hlt    
  0x0000000002e4e3b6: hlt    
  0x0000000002e4e3b7: hlt    
<nmethod compile_id='15' compiler='C2' level='4' entry='0x0000000002e4e340' size='584' address='0x0000000002e4e210' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='27810' iicount='27810' stamp='0.365'/>
<writer thread='21988'/>
<task_queued compile_id='16' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='9984' iicount='9984' stamp='0.366' comment='tiered' hot_count='9984'/>
<task_queued compile_id='17' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='3712' iicount='3712' level='3' stamp='0.366' comment='tiered' hot_count='3712'/>
<task_queued compile_id='18' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='3712' iicount='3712' level='3' stamp='0.366' comment='tiered' hot_count='3712'/>
<task_queued compile_id='19' method='java/lang/Character toUpperCase (C)C' bytes='6' count='384' iicount='384' level='3' stamp='0.366' comment='tiered' hot_count='384'/>
<task_queued compile_id='20' method='java/lang/Character toUpperCase (I)I' bytes='9' count='384' iicount='384' level='3' stamp='0.366' comment='tiered' hot_count='384'/>
<task_queued compile_id='21' method='java/util/TreeMap leftOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='1792' iicount='1792' level='3' stamp='0.366' comment='tiered' hot_count='1792'/>
<task_queued compile_id='22' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='512' iicount='512' level='3' stamp='0.366' comment='tiered' hot_count='512'/>
<task_queued compile_id='23' method='java/util/TreeMap setColor (Ljava/util/TreeMap$Entry;Z)V' bytes='10' count='2432' iicount='2432' level='3' stamp='0.366' comment='tiered' hot_count='2432'/>
<writer thread='26572'/>
Decoding compiled method 0x0000000002e4dfd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001ba9cc98} &apos;parentOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000002e4e100: mov    %eax,-0x6000(%rsp)
  0x0000000002e4e107: push   %rbp
  0x0000000002e4e108: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.TreeMap::parentOf@-1 (line 2200)

  0x0000000002e4e10c: mov    0x20(%rdx),%r10d   ; implicit exception: dispatches to 0x0000000002e4e123
  0x0000000002e4e110: mov    %r10,%rax
  0x0000000002e4e113: shl    $0x3,%rax          ;*getfield parent
                                                ; - java.util.TreeMap::parentOf@9 (line 2200)

  0x0000000002e4e117: add    $0x20,%rsp
  0x0000000002e4e11b: pop    %rbp
  0x0000000002e4e11c: test   %eax,-0x285e122(%rip)        # 0x00000000005f0000
                                                ;   {poll_return}
  0x0000000002e4e122: retq   
  0x0000000002e4e123: mov    %rdx,(%rsp)
  0x0000000002e4e127: mov    $0xffffff65,%edx
  0x0000000002e4e12c: data16 xchg %ax,%ax
  0x0000000002e4e12f: callq  0x0000000002d857a0  ; OopMap{[0]=Oop off=52}
                                                ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2200)
                                                ;   {runtime_call}
  0x0000000002e4e134: int3                      ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2200)

  0x0000000002e4e135: hlt    
  0x0000000002e4e136: hlt    
  0x0000000002e4e137: hlt    
  0x0000000002e4e138: hlt    
  0x0000000002e4e139: hlt    
  0x0000000002e4e13a: hlt    
  0x0000000002e4e13b: hlt    
  0x0000000002e4e13c: hlt    
  0x0000000002e4e13d: hlt    
  0x0000000002e4e13e: hlt    
  0x0000000002e4e13f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e4e140: jmpq   0x0000000002daeea0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002e4e145: callq  0x0000000002e4e14a
  0x0000000002e4e14a: subq   $0x5,(%rsp)
  0x0000000002e4e14f: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e4e154: hlt    
  0x0000000002e4e155: hlt    
  0x0000000002e4e156: hlt    
  0x0000000002e4e157: hlt    
<nmethod compile_id='16' compiler='C2' level='4' entry='0x0000000002e4e100' size='552' address='0x0000000002e4dfd0' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='432' dependencies_offset='528' nul_chk_table_offset='536' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='10514' iicount='10514' stamp='0.369'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e52690:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001ba87558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000002e528a0: mov    %eax,-0x6000(%rsp)
  0x0000000002e528a7: push   %rbp
  0x0000000002e528a8: sub    $0xa0,%rsp
  0x0000000002e528af: mov    %rdx,%r11
  0x0000000002e528b2: movabs $0x1bb76198,%rbx   ;   {metadata(method data for {method} {0x000000001ba87558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002e528bc: mov    0xdc(%rbx),%edx
  0x0000000002e528c2: add    $0x8,%edx
  0x0000000002e528c5: mov    %edx,0xdc(%rbx)
  0x0000000002e528cb: movabs $0x1ba87550,%rbx   ;   {metadata({method} {0x000000001ba87558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002e528d5: and    $0x1ff8,%edx
  0x0000000002e528db: cmp    $0x0,%edx
  0x0000000002e528de: je     0x0000000002e53149  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x0000000002e528e4: mov    %r9,%r13
  0x0000000002e528e7: sub    %r8d,%r13d
  0x0000000002e528ea: cmp    $0x0,%r13d
  0x0000000002e528ee: movabs $0x1bb76198,%rbx   ;   {metadata(method data for {method} {0x000000001ba87558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002e528f8: movabs $0x108,%rdx
  0x0000000002e52902: jge    0x0000000002e52912
  0x0000000002e52908: movabs $0x118,%rdx
  0x0000000002e52912: mov    (%rbx,%rdx,1),%rsi
  0x0000000002e52916: lea    0x1(%rsi),%rsi
  0x0000000002e5291a: mov    %rsi,(%rbx,%rdx,1)
  0x0000000002e5291e: jl     0x0000000002e52ae6  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000002e52924: mov    %r13,%rbx
  0x0000000002e52927: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002e52931: movslq %ebx,%rbx
  0x0000000002e52934: mov    %rbx,%rdi
  0x0000000002e52937: cmp    $0xffffff,%rbx
  0x0000000002e5293e: ja     0x0000000002e53160
  0x0000000002e52944: movabs $0x17,%rsi
  0x0000000002e5294e: lea    (%rsi,%rbx,2),%rsi
  0x0000000002e52952: and    $0xfffffffffffffff8,%rsi
  0x0000000002e52956: mov    0x60(%r15),%rax
  0x0000000002e5295a: lea    (%rax,%rsi,1),%rsi
  0x0000000002e5295e: cmp    0x70(%r15),%rsi
  0x0000000002e52962: ja     0x0000000002e53160
  0x0000000002e52968: mov    %rsi,0x60(%r15)
  0x0000000002e5296c: sub    %rax,%rsi
  0x0000000002e5296f: movq   $0x1,(%rax)
  0x0000000002e52976: mov    %rdx,%rcx
  0x0000000002e52979: shr    $0x3,%rcx
  0x0000000002e5297d: mov    %ecx,0x8(%rax)
  0x0000000002e52980: mov    %ebx,0xc(%rax)
  0x0000000002e52983: sub    $0x10,%rsi
  0x0000000002e52987: je     0x0000000002e5299e
  0x0000000002e5298d: xor    %rbx,%rbx
  0x0000000002e52990: shr    $0x3,%rsi
  0x0000000002e52994: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002e52999: dec    %rsi
  0x0000000002e5299c: jne    0x0000000002e52994  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000002e5299e: mov    0xc(%r11),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x0000000002e5316a
  0x0000000002e529a2: sub    %r8d,%edx
  0x0000000002e529a5: movabs $0x1bb76198,%r9    ;   {metadata(method data for {method} {0x000000001ba87558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002e529af: addq   $0x1,0x208(%r9)
  0x0000000002e529b7: movabs $0x1bb5bd30,%r9    ;   {metadata(method data for {method} {0x000000001ba628d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002e529c1: mov    0xdc(%r9),%edi
  0x0000000002e529c8: add    $0x8,%edi
  0x0000000002e529cb: mov    %edi,0xdc(%r9)
  0x0000000002e529d2: movabs $0x1ba628d0,%r9    ;   {metadata({method} {0x000000001ba628d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002e529dc: and    $0x7ffff8,%edi
  0x0000000002e529e2: cmp    $0x0,%edi
  0x0000000002e529e5: je     0x0000000002e5316f
  0x0000000002e529eb: cmp    %r13d,%edx
  0x0000000002e529ee: movabs $0x1bb5bd30,%r9    ;   {metadata(method data for {method} {0x000000001ba628d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002e529f8: movabs $0x108,%rdi
  0x0000000002e52a02: jg     0x0000000002e52a12
  0x0000000002e52a08: movabs $0x118,%rdi
  0x0000000002e52a12: mov    (%r9,%rdi,1),%rsi
  0x0000000002e52a16: lea    0x1(%rsi),%rsi
  0x0000000002e52a1a: mov    %rsi,(%r9,%rdi,1)
  0x0000000002e52a1e: jg     0x0000000002e52a3d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002e52a24: movabs $0x1bb5bd30,%r9    ;   {metadata(method data for {method} {0x000000001ba628d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002e52a2e: incl   0x128(%r9)
  0x0000000002e52a35: mov    %rdx,%rsi
  0x0000000002e52a38: jmpq   0x0000000002e52a40  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002e52a3d: mov    %r13,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002e52a40: movabs $0x1bb76198,%rdx   ;   {metadata(method data for {method} {0x000000001ba87558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002e52a4a: addq   $0x1,0x218(%rdx)
  0x0000000002e52a52: mov    %r11,%rdx
  0x0000000002e52a55: mov    %rax,%r9
  0x0000000002e52a58: mov    $0x0,%edi
  0x0000000002e52a5d: mov    %rax,0x70(%rsp)
  0x0000000002e52a62: test   %r8d,%r8d
  0x0000000002e52a65: jl     0x0000000002e53186
  0x0000000002e52a6b: lea    (%r8,%rsi,1),%rcx
  0x0000000002e52a6f: cmp    0xc(%rdx),%ecx
  0x0000000002e52a72: ja     0x0000000002e53186
  0x0000000002e52a78: lea    (%rdi,%rsi,1),%rcx
  0x0000000002e52a7c: cmp    0xc(%r9),%ecx
  0x0000000002e52a80: ja     0x0000000002e53186
  0x0000000002e52a86: test   %esi,%esi
  0x0000000002e52a88: jl     0x0000000002e53186
  0x0000000002e52a8e: je     0x0000000002e52ad2
  0x0000000002e52a94: movslq %r8d,%r8
  0x0000000002e52a97: movslq %edi,%rdi
  0x0000000002e52a9a: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002e52a9f: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002e52aa4: mov    %rsi,%r8
  0x0000000002e52aa7: sub    $0x20,%rsp
  0x0000000002e52aab: test   $0xf,%esp
  0x0000000002e52ab1: je     0x0000000002e52ac9
  0x0000000002e52ab7: sub    $0x8,%rsp
  0x0000000002e52abb: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002e52ac0: add    $0x8,%rsp
  0x0000000002e52ac4: jmpq   0x0000000002e52ace
  0x0000000002e52ac9: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002e52ace: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000002e52ad2: mov    0x70(%rsp),%rax
  0x0000000002e52ad7: add    $0xa0,%rsp
  0x0000000002e52ade: pop    %rbp
  0x0000000002e52adf: test   %eax,-0x28629e5(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e52ae5: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x0000000002e52ae6: mov    %r9d,0x80(%rsp)
  0x0000000002e52aee: xchg   %ax,%ax
  0x0000000002e52af0: jmpq   0x0000000002e531a0  ;   {no_reloc}
  0x0000000002e52af5: add    %al,(%rax)
  0x0000000002e52af7: add    %al,(%rax)
  0x0000000002e52af9: add    %cl,-0x75(%rcx)
  0x0000000002e52afc: rex.RXB (bad) 
  0x0000000002e52afe: lea    0x20(%rax),%rdi
  0x0000000002e52b02: cmp    0x70(%r15),%rdi
  0x0000000002e52b06: ja     0x0000000002e531aa
  0x0000000002e52b0c: mov    %rdi,0x60(%r15)
  0x0000000002e52b10: mov    0xa8(%rdx),%rcx
  0x0000000002e52b17: mov    %rcx,(%rax)
  0x0000000002e52b1a: mov    %rdx,%rcx
  0x0000000002e52b1d: shr    $0x3,%rcx
  0x0000000002e52b21: mov    %ecx,0x8(%rax)
  0x0000000002e52b24: xor    %rcx,%rcx
  0x0000000002e52b27: mov    %ecx,0xc(%rax)
  0x0000000002e52b2a: xor    %rcx,%rcx
  0x0000000002e52b2d: mov    %rcx,0x10(%rax)
  0x0000000002e52b31: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x0000000002e52b35: data16 xchg %ax,%ax
  0x0000000002e52b38: jmpq   0x0000000002e531c6  ;   {no_reloc}
  0x0000000002e52b3d: add    %al,(%rax)
  0x0000000002e52b3f: add    %al,(%rax)
  0x0000000002e52b41: add    %cl,-0x77(%rax)
  0x0000000002e52b44: test   %ah,(%rax,%rcx,4)
  0x0000000002e52b47: add    %al,(%rax)
  0x0000000002e52b49: add    %cl,-0x75(%rcx)
  0x0000000002e52b4c: rex.RXB (bad) 
  0x0000000002e52b4e: lea    0x18(%rax),%rdi
  0x0000000002e52b52: cmp    0x70(%r15),%rdi
  0x0000000002e52b56: ja     0x0000000002e531d0
  0x0000000002e52b5c: mov    %rdi,0x60(%r15)
  0x0000000002e52b60: mov    0xa8(%rdx),%rcx
  0x0000000002e52b67: mov    %rcx,(%rax)
  0x0000000002e52b6a: mov    %rdx,%rcx
  0x0000000002e52b6d: shr    $0x3,%rcx
  0x0000000002e52b71: mov    %ecx,0x8(%rax)
  0x0000000002e52b74: xor    %rcx,%rcx
  0x0000000002e52b77: mov    %ecx,0xc(%rax)
  0x0000000002e52b7a: xor    %rcx,%rcx
  0x0000000002e52b7d: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x0000000002e52b81: mov    %rax,%rbx
  0x0000000002e52b84: movabs $0x1bb76198,%rdx   ;   {metadata(method data for {method} {0x000000001ba87558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002e52b8e: addq   $0x1,0x128(%rdx)
  0x0000000002e52b96: movabs $0x1bbe3de8,%rbx   ;   {metadata(method data for {method} {0x000000001b9e7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e52ba0: mov    0xdc(%rbx),%edx
  0x0000000002e52ba6: add    $0x8,%edx
  0x0000000002e52ba9: mov    %edx,0xdc(%rbx)
  0x0000000002e52baf: movabs $0x1b9e7420,%rbx   ;   {metadata({method} {0x000000001b9e7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e52bb9: and    $0x7ffff8,%edx
  0x0000000002e52bbf: cmp    $0x0,%edx
  0x0000000002e52bc2: je     0x0000000002e531dd
  0x0000000002e52bc8: mov    %rax,%rbx
  0x0000000002e52bcb: movabs $0x1bbe3de8,%rdx   ;   {metadata(method data for {method} {0x000000001b9e7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e52bd5: addq   $0x1,0x108(%rdx)
  0x0000000002e52bdd: movabs $0x1bbe3f18,%rbx   ;   {metadata(method data for {method} {0x000000001b9e3810} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e52be7: mov    0xdc(%rbx),%edx
  0x0000000002e52bed: add    $0x8,%edx
  0x0000000002e52bf0: mov    %edx,0xdc(%rbx)
  0x0000000002e52bf6: movabs $0x1b9e3808,%rbx   ;   {metadata({method} {0x000000001b9e3810} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e52c00: and    $0x7ffff8,%edx
  0x0000000002e52c06: cmp    $0x0,%edx
  0x0000000002e52c09: je     0x0000000002e531f4
  0x0000000002e52c0f: mov    %rax,%rbx
  0x0000000002e52c12: movabs $0x1bbe3f18,%rdx   ;   {metadata(method data for {method} {0x000000001b9e3810} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e52c1c: addq   $0x1,0x108(%rdx)
  0x0000000002e52c24: movabs $0x1baa1918,%rbx   ;   {metadata(method data for {method} {0x000000001b970488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002e52c2e: mov    0xdc(%rbx),%edx
  0x0000000002e52c34: add    $0x8,%edx
  0x0000000002e52c37: mov    %edx,0xdc(%rbx)
  0x0000000002e52c3d: movabs $0x1b970480,%rbx   ;   {metadata({method} {0x000000001b970488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002e52c47: and    $0x7ffff8,%edx
  0x0000000002e52c4d: cmp    $0x0,%edx
  0x0000000002e52c50: je     0x0000000002e5320b
  0x0000000002e52c56: mov    $0x10,%ebx
  0x0000000002e52c5b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002e52c65: mov    %rax,%r13
  0x0000000002e52c68: movslq %ebx,%rbx
  0x0000000002e52c6b: mov    %rbx,%rdi
  0x0000000002e52c6e: cmp    $0xffffff,%rbx
  0x0000000002e52c75: ja     0x0000000002e53222
  0x0000000002e52c7b: movabs $0x17,%rsi
  0x0000000002e52c85: lea    (%rsi,%rbx,2),%rsi
  0x0000000002e52c89: and    $0xfffffffffffffff8,%rsi
  0x0000000002e52c8d: mov    0x60(%r15),%rax
  0x0000000002e52c91: lea    (%rax,%rsi,1),%rsi
  0x0000000002e52c95: cmp    0x70(%r15),%rsi
  0x0000000002e52c99: ja     0x0000000002e53222
  0x0000000002e52c9f: mov    %rsi,0x60(%r15)
  0x0000000002e52ca3: sub    %rax,%rsi
  0x0000000002e52ca6: movq   $0x1,(%rax)
  0x0000000002e52cad: mov    %rdx,%rcx
  0x0000000002e52cb0: shr    $0x3,%rcx
  0x0000000002e52cb4: mov    %ecx,0x8(%rax)
  0x0000000002e52cb7: mov    %ebx,0xc(%rax)
  0x0000000002e52cba: sub    $0x10,%rsi
  0x0000000002e52cbe: je     0x0000000002e52cd5
  0x0000000002e52cc4: xor    %rbx,%rbx
  0x0000000002e52cc7: shr    $0x3,%rsi
  0x0000000002e52ccb: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002e52cd0: dec    %rsi
  0x0000000002e52cd3: jne    0x0000000002e52ccb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002e52cd5: mov    %rax,%r10
  0x0000000002e52cd8: shr    $0x3,%r10
  0x0000000002e52cdc: mov    %r10d,0x10(%r13)
  0x0000000002e52ce0: mov    %r13,%rax
  0x0000000002e52ce3: shr    $0x9,%rax
  0x0000000002e52ce7: movabs $0xeaf2000,%rdx
  0x0000000002e52cf1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002e52cf5: mov    %r13,%rax
  0x0000000002e52cf8: movabs $0x1bb76198,%rdx   ;   {metadata(method data for {method} {0x000000001ba87558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002e52d02: mov    0x8(%rax),%eax
  0x0000000002e52d05: shl    $0x3,%rax
  0x0000000002e52d09: cmp    0x140(%rdx),%rax
  0x0000000002e52d10: jne    0x0000000002e52d1f
  0x0000000002e52d12: addq   $0x1,0x148(%rdx)
  0x0000000002e52d1a: jmpq   0x0000000002e52d85
  0x0000000002e52d1f: cmp    0x150(%rdx),%rax
  0x0000000002e52d26: jne    0x0000000002e52d35
  0x0000000002e52d28: addq   $0x1,0x158(%rdx)
  0x0000000002e52d30: jmpq   0x0000000002e52d85
  0x0000000002e52d35: cmpq   $0x0,0x140(%rdx)
  0x0000000002e52d40: jne    0x0000000002e52d59
  0x0000000002e52d42: mov    %rax,0x140(%rdx)
  0x0000000002e52d49: movq   $0x1,0x148(%rdx)
  0x0000000002e52d54: jmpq   0x0000000002e52d85
  0x0000000002e52d59: cmpq   $0x0,0x150(%rdx)
  0x0000000002e52d64: jne    0x0000000002e52d7d
  0x0000000002e52d66: mov    %rax,0x150(%rdx)
  0x0000000002e52d6d: movq   $0x1,0x158(%rdx)
  0x0000000002e52d78: jmpq   0x0000000002e52d85
  0x0000000002e52d7d: addq   $0x1,0x138(%rdx)
  0x0000000002e52d85: movabs $0x1bc342c0,%rdx   ;   {metadata(method data for {method} {0x000000001b9e7c00} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e52d8f: mov    0xdc(%rdx),%esi
  0x0000000002e52d95: add    $0x8,%esi
  0x0000000002e52d98: mov    %esi,0xdc(%rdx)
  0x0000000002e52d9e: movabs $0x1b9e7bf8,%rdx   ;   {metadata({method} {0x000000001b9e7c00} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e52da8: and    $0x7ffff8,%esi
  0x0000000002e52dae: cmp    $0x0,%esi
  0x0000000002e52db1: je     0x0000000002e5322c
  0x0000000002e52db7: mov    %r13,%rax
  0x0000000002e52dba: movabs $0x1bc342c0,%rdx   ;   {metadata(method data for {method} {0x000000001b9e7c00} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e52dc4: addq   $0x1,0x108(%rdx)
  0x0000000002e52dcc: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x0000000002e52dcf: mov    %r13,0x78(%rsp)
  0x0000000002e52dd4: nop
  0x0000000002e52dd5: nop
  0x0000000002e52dd6: nop
  0x0000000002e52dd7: callq  0x0000000002d861a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002e52ddc: mov    0x78(%rsp),%rax
  0x0000000002e52de1: movabs $0x1bb76198,%r8    ;   {metadata(method data for {method} {0x000000001ba87558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002e52deb: mov    0x8(%rax),%eax
  0x0000000002e52dee: shl    $0x3,%rax
  0x0000000002e52df2: cmp    0x170(%r8),%rax
  0x0000000002e52df9: jne    0x0000000002e52e08
  0x0000000002e52dfb: addq   $0x1,0x178(%r8)
  0x0000000002e52e03: jmpq   0x0000000002e52e6e
  0x0000000002e52e08: cmp    0x180(%r8),%rax
  0x0000000002e52e0f: jne    0x0000000002e52e1e
  0x0000000002e52e11: addq   $0x1,0x188(%r8)
  0x0000000002e52e19: jmpq   0x0000000002e52e6e
  0x0000000002e52e1e: cmpq   $0x0,0x170(%r8)
  0x0000000002e52e29: jne    0x0000000002e52e42
  0x0000000002e52e2b: mov    %rax,0x170(%r8)
  0x0000000002e52e32: movq   $0x1,0x178(%r8)
  0x0000000002e52e3d: jmpq   0x0000000002e52e6e
  0x0000000002e52e42: cmpq   $0x0,0x180(%r8)
  0x0000000002e52e4d: jne    0x0000000002e52e66
  0x0000000002e52e4f: mov    %rax,0x180(%r8)
  0x0000000002e52e56: movq   $0x1,0x188(%r8)
  0x0000000002e52e61: jmpq   0x0000000002e52e6e
  0x0000000002e52e66: addq   $0x1,0x168(%r8)
  0x0000000002e52e6e: movabs $0x1bba0a00,%r8    ;   {metadata(method data for {method} {0x000000001b9e7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e52e78: mov    0xdc(%r8),%edx
  0x0000000002e52e7f: add    $0x8,%edx
  0x0000000002e52e82: mov    %edx,0xdc(%r8)
  0x0000000002e52e89: movabs $0x1b9e7738,%r8    ;   {metadata({method} {0x000000001b9e7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e52e93: and    $0x7ffff8,%edx
  0x0000000002e52e99: cmp    $0x0,%edx
  0x0000000002e52e9c: je     0x0000000002e53243
  0x0000000002e52ea2: mov    0x78(%rsp),%rax
  0x0000000002e52ea7: movabs $0x1bba0a00,%r8    ;   {metadata(method data for {method} {0x000000001b9e7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e52eb1: addq   $0x1,0x108(%r8)
  0x0000000002e52eb9: movabs $0x76b7e0e18,%r8   ;   {oop(&quot; &gt; &quot;)}
  0x0000000002e52ec3: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x0000000002e52ec8: nop
  0x0000000002e52ec9: nop
  0x0000000002e52eca: nop
  0x0000000002e52ecb: nop
  0x0000000002e52ecc: nop
  0x0000000002e52ecd: nop
  0x0000000002e52ece: nop
  0x0000000002e52ecf: callq  0x0000000002d861a0  ; OopMap{[120]=Oop [136]=Oop off=1588}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002e52ed4: mov    0x78(%rsp),%rax
  0x0000000002e52ed9: movabs $0x1bb76198,%r8    ;   {metadata(method data for {method} {0x000000001ba87558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002e52ee3: mov    0x8(%rax),%eax
  0x0000000002e52ee6: shl    $0x3,%rax
  0x0000000002e52eea: cmp    0x1a0(%r8),%rax
  0x0000000002e52ef1: jne    0x0000000002e52f00
  0x0000000002e52ef3: addq   $0x1,0x1a8(%r8)
  0x0000000002e52efb: jmpq   0x0000000002e52f66
  0x0000000002e52f00: cmp    0x1b0(%r8),%rax
  0x0000000002e52f07: jne    0x0000000002e52f16
  0x0000000002e52f09: addq   $0x1,0x1b8(%r8)
  0x0000000002e52f11: jmpq   0x0000000002e52f66
  0x0000000002e52f16: cmpq   $0x0,0x1a0(%r8)
  0x0000000002e52f21: jne    0x0000000002e52f3a
  0x0000000002e52f23: mov    %rax,0x1a0(%r8)
  0x0000000002e52f2a: movq   $0x1,0x1a8(%r8)
  0x0000000002e52f35: jmpq   0x0000000002e52f66
  0x0000000002e52f3a: cmpq   $0x0,0x1b0(%r8)
  0x0000000002e52f45: jne    0x0000000002e52f5e
  0x0000000002e52f47: mov    %rax,0x1b0(%r8)
  0x0000000002e52f4e: movq   $0x1,0x1b8(%r8)
  0x0000000002e52f59: jmpq   0x0000000002e52f66
  0x0000000002e52f5e: addq   $0x1,0x198(%r8)
  0x0000000002e52f66: movabs $0x1bc342c0,%r8    ;   {metadata(method data for {method} {0x000000001b9e7c00} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e52f70: mov    0xdc(%r8),%edx
  0x0000000002e52f77: add    $0x8,%edx
  0x0000000002e52f7a: mov    %edx,0xdc(%r8)
  0x0000000002e52f81: movabs $0x1b9e7bf8,%r8    ;   {metadata({method} {0x000000001b9e7c00} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e52f8b: and    $0x7ffff8,%edx
  0x0000000002e52f91: cmp    $0x0,%edx
  0x0000000002e52f94: je     0x0000000002e5325a
  0x0000000002e52f9a: mov    0x78(%rsp),%rax
  0x0000000002e52f9f: movabs $0x1bc342c0,%r8    ;   {metadata(method data for {method} {0x000000001b9e7c00} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e52fa9: addq   $0x1,0x108(%r8)
  0x0000000002e52fb1: mov    0x80(%rsp),%r8d
  0x0000000002e52fb9: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x0000000002e52fbe: nop
  0x0000000002e52fbf: callq  0x0000000002d861a0  ; OopMap{[120]=Oop [136]=Oop off=1828}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002e52fc4: mov    0x78(%rsp),%rax
  0x0000000002e52fc9: movabs $0x1bb76198,%rdx   ;   {metadata(method data for {method} {0x000000001ba87558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002e52fd3: mov    0x8(%rax),%eax
  0x0000000002e52fd6: shl    $0x3,%rax
  0x0000000002e52fda: cmp    0x1d0(%rdx),%rax
  0x0000000002e52fe1: jne    0x0000000002e52ff0
  0x0000000002e52fe3: addq   $0x1,0x1d8(%rdx)
  0x0000000002e52feb: jmpq   0x0000000002e53056
  0x0000000002e52ff0: cmp    0x1e0(%rdx),%rax
  0x0000000002e52ff7: jne    0x0000000002e53006
  0x0000000002e52ff9: addq   $0x1,0x1e8(%rdx)
  0x0000000002e53001: jmpq   0x0000000002e53056
  0x0000000002e53006: cmpq   $0x0,0x1d0(%rdx)
  0x0000000002e53011: jne    0x0000000002e5302a
  0x0000000002e53013: mov    %rax,0x1d0(%rdx)
  0x0000000002e5301a: movq   $0x1,0x1d8(%rdx)
  0x0000000002e53025: jmpq   0x0000000002e53056
  0x0000000002e5302a: cmpq   $0x0,0x1e0(%rdx)
  0x0000000002e53035: jne    0x0000000002e5304e
  0x0000000002e53037: mov    %rax,0x1e0(%rdx)
  0x0000000002e5303e: movq   $0x1,0x1e8(%rdx)
  0x0000000002e53049: jmpq   0x0000000002e53056
  0x0000000002e5304e: addq   $0x1,0x1c8(%rdx)
  0x0000000002e53056: movabs $0x1bc35930,%rdx   ;   {metadata(method data for {method} {0x000000001b9e8af0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e53060: mov    0xdc(%rdx),%esi
  0x0000000002e53066: add    $0x8,%esi
  0x0000000002e53069: mov    %esi,0xdc(%rdx)
  0x0000000002e5306f: movabs $0x1b9e8ae8,%rdx   ;   {metadata({method} {0x000000001b9e8af0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e53079: and    $0x7ffff8,%esi
  0x0000000002e5307f: cmp    $0x0,%esi
  0x0000000002e53082: je     0x0000000002e53271
  0x0000000002e53088: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002e53092: mov    0x60(%r15),%rax
  0x0000000002e53096: lea    0x18(%rax),%rdi
  0x0000000002e5309a: cmp    0x70(%r15),%rdi
  0x0000000002e5309e: ja     0x0000000002e53288
  0x0000000002e530a4: mov    %rdi,0x60(%r15)
  0x0000000002e530a8: mov    0xa8(%rdx),%rcx
  0x0000000002e530af: mov    %rcx,(%rax)
  0x0000000002e530b2: mov    %rdx,%rcx
  0x0000000002e530b5: shr    $0x3,%rcx
  0x0000000002e530b9: mov    %ecx,0x8(%rax)
  0x0000000002e530bc: xor    %rcx,%rcx
  0x0000000002e530bf: mov    %ecx,0xc(%rax)
  0x0000000002e530c2: xor    %rcx,%rcx
  0x0000000002e530c5: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002e530c9: mov    0x78(%rsp),%r8
  0x0000000002e530ce: mov    0x10(%r8),%r9d
  0x0000000002e530d2: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002e530d6: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002e530da: mov    %rax,%r8
  0x0000000002e530dd: movabs $0x1bc35930,%rdx   ;   {metadata(method data for {method} {0x000000001b9e8af0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e530e7: addq   $0x1,0x108(%rdx)
  0x0000000002e530ef: mov    %r9,%r8
  0x0000000002e530f2: mov    $0x0,%r9d
  0x0000000002e530f8: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002e530fb: mov    %rax,0x90(%rsp)
  0x0000000002e53103: nop
  0x0000000002e53104: nop
  0x0000000002e53105: nop
  0x0000000002e53106: nop
  0x0000000002e53107: callq  0x0000000002d861a0  ; OopMap{[136]=Oop [144]=Oop off=2156}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002e5310c: mov    0x88(%rsp),%rax
  0x0000000002e53114: movabs $0x1bb76198,%r8    ;   {metadata(method data for {method} {0x000000001ba87558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002e5311e: addq   $0x1,0x1f8(%r8)
  0x0000000002e53126: mov    0x90(%rsp),%r8
  0x0000000002e5312e: mov    0x88(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x0000000002e53136: nop
  0x0000000002e53137: callq  0x0000000002d861a0  ; OopMap{[136]=Oop off=2204}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002e5313c: mov    0x88(%rsp),%rax
  0x0000000002e53144: jmpq   0x0000000002e532c0
  0x0000000002e53149: mov    %rbx,0x8(%rsp)
  0x0000000002e5314e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e53156: callq  0x0000000002e41c20  ; OopMap{r11=Oop off=2235}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x0000000002e5315b: jmpq   0x0000000002e528e4
  0x0000000002e53160: callq  0x0000000002daf940  ; OopMap{r11=Oop off=2245}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x0000000002e53165: jmpq   0x0000000002e5299e
  0x0000000002e5316a: callq  0x0000000002db0bc0  ; OopMap{r11=Oop rax=Oop off=2255}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x0000000002e5316f: mov    %r9,0x8(%rsp)
  0x0000000002e53174: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e5317c: callq  0x0000000002e41c20  ; OopMap{r11=Oop rax=Oop off=2273}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x0000000002e53181: jmpq   0x0000000002e529eb
  0x0000000002e53186: nop
  0x0000000002e53187: callq  0x0000000002d86620  ; OopMap{[112]=Oop off=2284}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x0000000002e5318c: jmpq   0x0000000002e52ad2
  0x0000000002e53191: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002e5319b: mov    $0xa050f00,%eax
  0x0000000002e531a0: callq  0x0000000002e40b60  ; OopMap{off=2309}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002e531a5: jmpq   0x0000000002e52af0
  0x0000000002e531aa: mov    %rdx,%rdx
  0x0000000002e531ad: callq  0x0000000002db0280  ; OopMap{off=2322}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002e531b2: jmpq   0x0000000002e52b35
  0x0000000002e531b7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002e531c1: mov    $0xa050f00,%eax
  0x0000000002e531c6: callq  0x0000000002e40b60  ; OopMap{rax=Oop off=2347}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002e531cb: jmpq   0x0000000002e52b38
  0x0000000002e531d0: mov    %rdx,%rdx
  0x0000000002e531d3: callq  0x0000000002db0280  ; OopMap{[136]=Oop off=2360}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002e531d8: jmpq   0x0000000002e52b81
  0x0000000002e531dd: mov    %rbx,0x8(%rsp)
  0x0000000002e531e2: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e531ea: callq  0x0000000002e41c20  ; OopMap{[136]=Oop rax=Oop off=2383}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002e531ef: jmpq   0x0000000002e52bc8
  0x0000000002e531f4: mov    %rbx,0x8(%rsp)
  0x0000000002e531f9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e53201: callq  0x0000000002e41c20  ; OopMap{[136]=Oop rax=Oop off=2406}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002e53206: jmpq   0x0000000002e52c0f
  0x0000000002e5320b: mov    %rbx,0x8(%rsp)
  0x0000000002e53210: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e53218: callq  0x0000000002e41c20  ; OopMap{[136]=Oop rax=Oop off=2429}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002e5321d: jmpq   0x0000000002e52c56
  0x0000000002e53222: callq  0x0000000002daf940  ; OopMap{[136]=Oop r13=Oop off=2439}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002e53227: jmpq   0x0000000002e52cd5
  0x0000000002e5322c: mov    %rdx,0x8(%rsp)
  0x0000000002e53231: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e53239: callq  0x0000000002e41c20  ; OopMap{[136]=Oop r13=Oop off=2462}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x0000000002e5323e: jmpq   0x0000000002e52db7
  0x0000000002e53243: mov    %r8,0x8(%rsp)
  0x0000000002e53248: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e53250: callq  0x0000000002e41c20  ; OopMap{[120]=Oop [136]=Oop off=2485}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x0000000002e53255: jmpq   0x0000000002e52ea2
  0x0000000002e5325a: mov    %r8,0x8(%rsp)
  0x0000000002e5325f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e53267: callq  0x0000000002e41c20  ; OopMap{[120]=Oop [136]=Oop off=2508}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x0000000002e5326c: jmpq   0x0000000002e52f9a
  0x0000000002e53271: mov    %rdx,0x8(%rsp)
  0x0000000002e53276: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e5327e: callq  0x0000000002e41c20  ; OopMap{[120]=Oop [136]=Oop off=2531}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002e53283: jmpq   0x0000000002e53088
  0x0000000002e53288: mov    %rdx,%rdx
  0x0000000002e5328b: callq  0x0000000002db0280  ; OopMap{[120]=Oop [136]=Oop off=2544}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002e53290: jmpq   0x0000000002e530c9
  0x0000000002e53295: nop
  0x0000000002e53296: nop
  0x0000000002e53297: mov    0x2a8(%r15),%rax
  0x0000000002e5329e: movabs $0x0,%r10
  0x0000000002e532a8: mov    %r10,0x2a8(%r15)
  0x0000000002e532af: movabs $0x0,%r10
  0x0000000002e532b9: mov    %r10,0x2b0(%r15)
  0x0000000002e532c0: add    $0xa0,%rsp
  0x0000000002e532c7: pop    %rbp
  0x0000000002e532c8: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e532cd: hlt    
  0x0000000002e532ce: hlt    
  0x0000000002e532cf: hlt    
  0x0000000002e532d0: hlt    
  0x0000000002e532d1: hlt    
  0x0000000002e532d2: hlt    
  0x0000000002e532d3: hlt    
  0x0000000002e532d4: hlt    
  0x0000000002e532d5: hlt    
  0x0000000002e532d6: hlt    
  0x0000000002e532d7: hlt    
  0x0000000002e532d8: hlt    
  0x0000000002e532d9: hlt    
  0x0000000002e532da: hlt    
  0x0000000002e532db: hlt    
  0x0000000002e532dc: hlt    
  0x0000000002e532dd: hlt    
  0x0000000002e532de: hlt    
  0x0000000002e532df: hlt    
[Stub Code]
  0x0000000002e532e0: nop                       ;   {no_reloc}
  0x0000000002e532e1: nop
  0x0000000002e532e2: nop
  0x0000000002e532e3: nop
  0x0000000002e532e4: nop
  0x0000000002e532e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e532ef: jmpq   0x0000000002e532ef  ;   {runtime_call}
  0x0000000002e532f4: nop
  0x0000000002e532f5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e532ff: jmpq   0x0000000002e532ff  ;   {runtime_call}
  0x0000000002e53304: nop
  0x0000000002e53305: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5330f: jmpq   0x0000000002e5330f  ;   {runtime_call}
  0x0000000002e53314: nop
  0x0000000002e53315: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5331f: jmpq   0x0000000002e5331f  ;   {runtime_call}
  0x0000000002e53324: nop
  0x0000000002e53325: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5332f: jmpq   0x0000000002e5332f  ;   {runtime_call}
  0x0000000002e53334: nop
  0x0000000002e53335: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5333f: jmpq   0x0000000002e5333f  ;   {runtime_call}
[Exception Handler]
  0x0000000002e53344: callq  0x0000000002e3f3e0  ;   {runtime_call}
  0x0000000002e53349: mov    %rsp,-0x28(%rsp)
  0x0000000002e5334e: sub    $0x80,%rsp
  0x0000000002e53355: mov    %rax,0x78(%rsp)
  0x0000000002e5335a: mov    %rcx,0x70(%rsp)
  0x0000000002e5335f: mov    %rdx,0x68(%rsp)
  0x0000000002e53364: mov    %rbx,0x60(%rsp)
  0x0000000002e53369: mov    %rbp,0x50(%rsp)
  0x0000000002e5336e: mov    %rsi,0x48(%rsp)
  0x0000000002e53373: mov    %rdi,0x40(%rsp)
  0x0000000002e53378: mov    %r8,0x38(%rsp)
  0x0000000002e5337d: mov    %r9,0x30(%rsp)
  0x0000000002e53382: mov    %r10,0x28(%rsp)
  0x0000000002e53387: mov    %r11,0x20(%rsp)
  0x0000000002e5338c: mov    %r12,0x18(%rsp)
  0x0000000002e53391: mov    %r13,0x10(%rsp)
  0x0000000002e53396: mov    %r14,0x8(%rsp)
  0x0000000002e5339b: mov    %r15,(%rsp)
  0x0000000002e5339f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e533a9: movabs $0x2e53349,%rdx    ;   {internal_word}
  0x0000000002e533b3: mov    %rsp,%r8
  0x0000000002e533b6: and    $0xfffffffffffffff0,%rsp
  0x0000000002e533ba: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e533bf: hlt    
[Deopt Handler Code]
  0x0000000002e533c0: movabs $0x2e533c0,%r10    ;   {section_word}
  0x0000000002e533ca: push   %r10
  0x0000000002e533cc: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e533d1: hlt    
  0x0000000002e533d2: hlt    
  0x0000000002e533d3: hlt    
  0x0000000002e533d4: hlt    
  0x0000000002e533d5: hlt    
  0x0000000002e533d6: hlt    
  0x0000000002e533d7: hlt    
<nmethod compile_id='13' compiler='C1' level='3' entry='0x0000000002e528a0' size='4856' address='0x0000000002e52690' relocation_offset='288' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='1026' iicount='1026' stamp='0.404'/>
Decoding compiled method 0x0000000002e51bd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bb41708} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002e51d80: mov    %eax,-0x6000(%rsp)
  0x0000000002e51d87: push   %rbp
  0x0000000002e51d88: sub    $0x30,%rsp
  0x0000000002e51d8c: movabs $0x1bb432d8,%rax   ;   {metadata(method data for {method} {0x000000001bb41708} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002e51d96: mov    0xdc(%rax),%esi
  0x0000000002e51d9c: add    $0x8,%esi
  0x0000000002e51d9f: mov    %esi,0xdc(%rax)
  0x0000000002e51da5: movabs $0x1bb41700,%rax   ;   {metadata({method} {0x000000001bb41708} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002e51daf: and    $0x1ff8,%esi
  0x0000000002e51db5: cmp    $0x0,%esi
  0x0000000002e51db8: je     0x0000000002e51f3c  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x0000000002e51dbe: mov    %rdx,%rax
  0x0000000002e51dc1: shr    $0x8,%eax
  0x0000000002e51dc4: cmp    $0x0,%eax
  0x0000000002e51dc7: movabs $0x1bb432d8,%rax   ;   {metadata(method data for {method} {0x000000001bb41708} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002e51dd1: movabs $0x108,%rsi
  0x0000000002e51ddb: jne    0x0000000002e51deb
  0x0000000002e51de1: movabs $0x118,%rsi
  0x0000000002e51deb: mov    (%rax,%rsi,1),%rdi
  0x0000000002e51def: lea    0x1(%rdi),%rdi
  0x0000000002e51df3: mov    %rdi,(%rax,%rsi,1)
  0x0000000002e51df7: je     0x0000000002e51f26  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x0000000002e51dfd: shr    $0x10,%edx
  0x0000000002e51e00: cmp    $0x0,%edx
  0x0000000002e51e03: je     0x0000000002e51efe
  0x0000000002e51e09: cmp    $0x1,%edx
  0x0000000002e51e0c: je     0x0000000002e51ed6
  0x0000000002e51e12: cmp    $0x2,%edx
  0x0000000002e51e15: je     0x0000000002e51eae
  0x0000000002e51e1b: cmp    $0xe,%edx
  0x0000000002e51e1e: je     0x0000000002e51e86
  0x0000000002e51e24: cmp    $0xf,%edx
  0x0000000002e51e27: je     0x0000000002e51e36
  0x0000000002e51e2d: cmp    $0x10,%edx
  0x0000000002e51e30: jne    0x0000000002e51e5e  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x0000000002e51e36: xchg   %ax,%ax
  0x0000000002e51e38: jmpq   0x0000000002e51fb0  ;   {no_reloc}
  0x0000000002e51e3d: add    %al,(%rax)
  0x0000000002e51e3f: add    %al,(%rax)
  0x0000000002e51e41: add    %ah,0xf(%rsi)
  0x0000000002e51e44: (bad)  
  0x0000000002e51e45: add    %r8b,(%rax)
  0x0000000002e51e48: jmpq   0x0000000002e51fca  ; implicit exception: dispatches to 0x0000000002e51fba
  0x0000000002e51e4d: nop
  0x0000000002e51e4e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x0000000002e51e52: add    $0x30,%rsp
  0x0000000002e51e56: pop    %rbp
  0x0000000002e51e57: test   %eax,-0x2861d5d(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e51e5d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x0000000002e51e5e: xchg   %ax,%ax
  0x0000000002e51e60: jmpq   0x0000000002e52031  ;   {no_reloc}
  0x0000000002e51e65: add    %al,(%rax)
  0x0000000002e51e67: add    %al,(%rax)
  0x0000000002e51e69: add    %ah,0xf(%rsi)
  0x0000000002e51e6c: (bad)  
  0x0000000002e51e6d: add    %r8b,(%rax)
  0x0000000002e51e70: jmpq   0x0000000002e5204b  ; implicit exception: dispatches to 0x0000000002e5203b
  0x0000000002e51e75: nop
  0x0000000002e51e76: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x0000000002e51e7a: add    $0x30,%rsp
  0x0000000002e51e7e: pop    %rbp
  0x0000000002e51e7f: test   %eax,-0x2861d85(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e51e85: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x0000000002e51e86: xchg   %ax,%ax
  0x0000000002e51e88: jmpq   0x0000000002e520b2  ;   {no_reloc}
  0x0000000002e51e8d: add    %al,(%rax)
  0x0000000002e51e8f: add    %al,(%rax)
  0x0000000002e51e91: add    %ah,0xf(%rsi)
  0x0000000002e51e94: (bad)  
  0x0000000002e51e95: add    %r8b,(%rax)
  0x0000000002e51e98: jmpq   0x0000000002e520cc  ; implicit exception: dispatches to 0x0000000002e520bc
  0x0000000002e51e9d: nop
  0x0000000002e51e9e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x0000000002e51ea2: add    $0x30,%rsp
  0x0000000002e51ea6: pop    %rbp
  0x0000000002e51ea7: test   %eax,-0x2861dad(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e51ead: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x0000000002e51eae: xchg   %ax,%ax
  0x0000000002e51eb0: jmpq   0x0000000002e52133  ;   {no_reloc}
  0x0000000002e51eb5: add    %al,(%rax)
  0x0000000002e51eb7: add    %al,(%rax)
  0x0000000002e51eb9: add    %ah,0xf(%rsi)
  0x0000000002e51ebc: (bad)  
  0x0000000002e51ebd: add    %r8b,(%rax)
  0x0000000002e51ec0: jmpq   0x0000000002e5214d  ; implicit exception: dispatches to 0x0000000002e5213d
  0x0000000002e51ec5: nop
  0x0000000002e51ec6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x0000000002e51eca: add    $0x30,%rsp
  0x0000000002e51ece: pop    %rbp
  0x0000000002e51ecf: test   %eax,-0x2861dd5(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e51ed5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x0000000002e51ed6: xchg   %ax,%ax
  0x0000000002e51ed8: jmpq   0x0000000002e521b4  ;   {no_reloc}
  0x0000000002e51edd: add    %al,(%rax)
  0x0000000002e51edf: add    %al,(%rax)
  0x0000000002e51ee1: add    %ah,0xf(%rsi)
  0x0000000002e51ee4: (bad)  
  0x0000000002e51ee5: add    %r8b,(%rax)
  0x0000000002e51ee8: jmpq   0x0000000002e521ce  ; implicit exception: dispatches to 0x0000000002e521be
  0x0000000002e51eed: nop
  0x0000000002e51eee: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x0000000002e51ef2: add    $0x30,%rsp
  0x0000000002e51ef6: pop    %rbp
  0x0000000002e51ef7: test   %eax,-0x2861dfd(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e51efd: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x0000000002e51efe: xchg   %ax,%ax
  0x0000000002e51f00: jmpq   0x0000000002e52235  ;   {no_reloc}
  0x0000000002e51f05: add    %al,(%rax)
  0x0000000002e51f07: add    %al,(%rax)
  0x0000000002e51f09: add    %ah,0xf(%rsi)
  0x0000000002e51f0c: (bad)  
  0x0000000002e51f0d: add    %r8b,(%rax)
  0x0000000002e51f10: jmpq   0x0000000002e5224f  ; implicit exception: dispatches to 0x0000000002e5223f
  0x0000000002e51f15: nop
  0x0000000002e51f16: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x0000000002e51f1a: add    $0x30,%rsp
  0x0000000002e51f1e: pop    %rbp
  0x0000000002e51f1f: test   %eax,-0x2861e25(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e51f25: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x0000000002e51f26: movabs $0x76b48c4d8,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002e51f30: add    $0x30,%rsp
  0x0000000002e51f34: pop    %rbp
  0x0000000002e51f35: test   %eax,-0x2861e3b(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e51f3b: retq   
  0x0000000002e51f3c: mov    %rax,0x8(%rsp)
  0x0000000002e51f41: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e51f49: callq  0x0000000002e41c20  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x0000000002e51f4e: jmpq   0x0000000002e51dbe
  0x0000000002e51f53: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002e51f5d: push   %rax
  0x0000000002e51f5e: push   %rbx
  0x0000000002e51f5f: mov    0x48(%rax),%rbx
  0x0000000002e51f63: push   %rdi
  0x0000000002e51f64: push   %rsi
  0x0000000002e51f65: push   %rdx
  0x0000000002e51f66: push   %rcx
  0x0000000002e51f67: push   %r8
  0x0000000002e51f69: push   %r9
  0x0000000002e51f6b: push   %r10
  0x0000000002e51f6d: mov    %rsp,%r10
  0x0000000002e51f70: and    $0xfffffffffffffff0,%rsp
  0x0000000002e51f74: push   %r10
  0x0000000002e51f76: push   %r11
  0x0000000002e51f78: mov    $0x7,%ecx
  0x0000000002e51f7d: movabs $0x7ffbdd104c90,%r10  ;   {runtime_call}
  0x0000000002e51f87: callq  *%r10
  0x0000000002e51f8a: pop    %r11
  0x0000000002e51f8c: pop    %rsp
  0x0000000002e51f8d: pop    %r10
  0x0000000002e51f8f: pop    %r9
  0x0000000002e51f91: pop    %r8
  0x0000000002e51f93: pop    %rcx
  0x0000000002e51f94: pop    %rdx
  0x0000000002e51f95: pop    %rsi
  0x0000000002e51f96: pop    %rdi
  0x0000000002e51f97: cmp    0x118(%rbx),%rax
  0x0000000002e51f9e: pop    %rbx
  0x0000000002e51f9f: pop    %rax
  0x0000000002e51fa0: jne    0x0000000002e51fb0
  0x0000000002e51fa6: jmpq   0x0000000002e51e42
  0x0000000002e51fab: mov    $0xa535d00,%eax
  0x0000000002e51fb0: callq  0x0000000002e40fa0  ; OopMap{off=565}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002e51fb5: jmpq   0x0000000002e51e38
  0x0000000002e51fba: callq  0x0000000002db0bc0  ; OopMap{rax=Oop off=575}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002e51fbf: mov    0x0(%rax),%eax
  0x0000000002e51fc5: mov    $0x6050b00,%eax
  0x0000000002e51fca: callq  0x0000000002e40720  ; OopMap{rax=Oop off=591}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002e51fcf: jmpq   0x0000000002e51e48
  0x0000000002e51fd4: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002e51fde: push   %rax
  0x0000000002e51fdf: push   %rbx
  0x0000000002e51fe0: mov    0x48(%rax),%rbx
  0x0000000002e51fe4: push   %rdi
  0x0000000002e51fe5: push   %rsi
  0x0000000002e51fe6: push   %rdx
  0x0000000002e51fe7: push   %rcx
  0x0000000002e51fe8: push   %r8
  0x0000000002e51fea: push   %r9
  0x0000000002e51fec: push   %r10
  0x0000000002e51fee: mov    %rsp,%r10
  0x0000000002e51ff1: and    $0xfffffffffffffff0,%rsp
  0x0000000002e51ff5: push   %r10
  0x0000000002e51ff7: push   %r11
  0x0000000002e51ff9: mov    $0x7,%ecx
  0x0000000002e51ffe: movabs $0x7ffbdd104c90,%r10  ;   {runtime_call}
  0x0000000002e52008: callq  *%r10
  0x0000000002e5200b: pop    %r11
  0x0000000002e5200d: pop    %rsp
  0x0000000002e5200e: pop    %r10
  0x0000000002e52010: pop    %r9
  0x0000000002e52012: pop    %r8
  0x0000000002e52014: pop    %rcx
  0x0000000002e52015: pop    %rdx
  0x0000000002e52016: pop    %rsi
  0x0000000002e52017: pop    %rdi
  0x0000000002e52018: cmp    0x118(%rbx),%rax
  0x0000000002e5201f: pop    %rbx
  0x0000000002e52020: pop    %rax
  0x0000000002e52021: jne    0x0000000002e52031
  0x0000000002e52027: jmpq   0x0000000002e51e6a
  0x0000000002e5202c: mov    $0xa535d00,%eax
  0x0000000002e52031: callq  0x0000000002e40fa0  ; OopMap{off=694}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002e52036: jmpq   0x0000000002e51e60
  0x0000000002e5203b: callq  0x0000000002db0bc0  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002e52040: mov    0x0(%rax),%eax
  0x0000000002e52046: mov    $0x6050b00,%eax
  0x0000000002e5204b: callq  0x0000000002e40720  ; OopMap{rax=Oop off=720}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002e52050: jmpq   0x0000000002e51e70
  0x0000000002e52055: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002e5205f: push   %rax
  0x0000000002e52060: push   %rbx
  0x0000000002e52061: mov    0x48(%rax),%rbx
  0x0000000002e52065: push   %rdi
  0x0000000002e52066: push   %rsi
  0x0000000002e52067: push   %rdx
  0x0000000002e52068: push   %rcx
  0x0000000002e52069: push   %r8
  0x0000000002e5206b: push   %r9
  0x0000000002e5206d: push   %r10
  0x0000000002e5206f: mov    %rsp,%r10
  0x0000000002e52072: and    $0xfffffffffffffff0,%rsp
  0x0000000002e52076: push   %r10
  0x0000000002e52078: push   %r11
  0x0000000002e5207a: mov    $0x7,%ecx
  0x0000000002e5207f: movabs $0x7ffbdd104c90,%r10  ;   {runtime_call}
  0x0000000002e52089: callq  *%r10
  0x0000000002e5208c: pop    %r11
  0x0000000002e5208e: pop    %rsp
  0x0000000002e5208f: pop    %r10
  0x0000000002e52091: pop    %r9
  0x0000000002e52093: pop    %r8
  0x0000000002e52095: pop    %rcx
  0x0000000002e52096: pop    %rdx
  0x0000000002e52097: pop    %rsi
  0x0000000002e52098: pop    %rdi
  0x0000000002e52099: cmp    0x118(%rbx),%rax
  0x0000000002e520a0: pop    %rbx
  0x0000000002e520a1: pop    %rax
  0x0000000002e520a2: jne    0x0000000002e520b2
  0x0000000002e520a8: jmpq   0x0000000002e51e92
  0x0000000002e520ad: mov    $0xa535d00,%eax
  0x0000000002e520b2: callq  0x0000000002e40fa0  ; OopMap{off=823}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002e520b7: jmpq   0x0000000002e51e88
  0x0000000002e520bc: callq  0x0000000002db0bc0  ; OopMap{rax=Oop off=833}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002e520c1: mov    0x0(%rax),%eax
  0x0000000002e520c7: mov    $0x6050b00,%eax
  0x0000000002e520cc: callq  0x0000000002e40720  ; OopMap{rax=Oop off=849}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002e520d1: jmpq   0x0000000002e51e98
  0x0000000002e520d6: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002e520e0: push   %rax
  0x0000000002e520e1: push   %rbx
  0x0000000002e520e2: mov    0x48(%rax),%rbx
  0x0000000002e520e6: push   %rdi
  0x0000000002e520e7: push   %rsi
  0x0000000002e520e8: push   %rdx
  0x0000000002e520e9: push   %rcx
  0x0000000002e520ea: push   %r8
  0x0000000002e520ec: push   %r9
  0x0000000002e520ee: push   %r10
  0x0000000002e520f0: mov    %rsp,%r10
  0x0000000002e520f3: and    $0xfffffffffffffff0,%rsp
  0x0000000002e520f7: push   %r10
  0x0000000002e520f9: push   %r11
  0x0000000002e520fb: mov    $0x7,%ecx
  0x0000000002e52100: movabs $0x7ffbdd104c90,%r10  ;   {runtime_call}
  0x0000000002e5210a: callq  *%r10
  0x0000000002e5210d: pop    %r11
  0x0000000002e5210f: pop    %rsp
  0x0000000002e52110: pop    %r10
  0x0000000002e52112: pop    %r9
  0x0000000002e52114: pop    %r8
  0x0000000002e52116: pop    %rcx
  0x0000000002e52117: pop    %rdx
  0x0000000002e52118: pop    %rsi
  0x0000000002e52119: pop    %rdi
  0x0000000002e5211a: cmp    0x118(%rbx),%rax
  0x0000000002e52121: pop    %rbx
  0x0000000002e52122: pop    %rax
  0x0000000002e52123: jne    0x0000000002e52133
  0x0000000002e52129: jmpq   0x0000000002e51eba
  0x0000000002e5212e: mov    $0xa535d00,%eax
  0x0000000002e52133: callq  0x0000000002e40fa0  ; OopMap{off=952}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002e52138: jmpq   0x0000000002e51eb0
  0x0000000002e5213d: callq  0x0000000002db0bc0  ; OopMap{rax=Oop off=962}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002e52142: mov    0x0(%rax),%eax
  0x0000000002e52148: mov    $0x6050b00,%eax
  0x0000000002e5214d: callq  0x0000000002e40720  ; OopMap{rax=Oop off=978}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002e52152: jmpq   0x0000000002e51ec0
  0x0000000002e52157: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002e52161: push   %rax
  0x0000000002e52162: push   %rbx
  0x0000000002e52163: mov    0x48(%rax),%rbx
  0x0000000002e52167: push   %rdi
  0x0000000002e52168: push   %rsi
  0x0000000002e52169: push   %rdx
  0x0000000002e5216a: push   %rcx
  0x0000000002e5216b: push   %r8
  0x0000000002e5216d: push   %r9
  0x0000000002e5216f: push   %r10
  0x0000000002e52171: mov    %rsp,%r10
  0x0000000002e52174: and    $0xfffffffffffffff0,%rsp
  0x0000000002e52178: push   %r10
  0x0000000002e5217a: push   %r11
  0x0000000002e5217c: mov    $0x7,%ecx
  0x0000000002e52181: movabs $0x7ffbdd104c90,%r10  ;   {runtime_call}
  0x0000000002e5218b: callq  *%r10
  0x0000000002e5218e: pop    %r11
  0x0000000002e52190: pop    %rsp
  0x0000000002e52191: pop    %r10
  0x0000000002e52193: pop    %r9
  0x0000000002e52195: pop    %r8
  0x0000000002e52197: pop    %rcx
  0x0000000002e52198: pop    %rdx
  0x0000000002e52199: pop    %rsi
  0x0000000002e5219a: pop    %rdi
  0x0000000002e5219b: cmp    0x118(%rbx),%rax
  0x0000000002e521a2: pop    %rbx
  0x0000000002e521a3: pop    %rax
  0x0000000002e521a4: jne    0x0000000002e521b4
  0x0000000002e521aa: jmpq   0x0000000002e51ee2
  0x0000000002e521af: mov    $0xa535d00,%eax
  0x0000000002e521b4: callq  0x0000000002e40fa0  ; OopMap{off=1081}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002e521b9: jmpq   0x0000000002e51ed8
  0x0000000002e521be: callq  0x0000000002db0bc0  ; OopMap{rax=Oop off=1091}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002e521c3: mov    0x0(%rax),%eax
  0x0000000002e521c9: mov    $0x6050b00,%eax
  0x0000000002e521ce: callq  0x0000000002e40720  ; OopMap{rax=Oop off=1107}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002e521d3: jmpq   0x0000000002e51ee8
  0x0000000002e521d8: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002e521e2: push   %rax
  0x0000000002e521e3: push   %rbx
  0x0000000002e521e4: mov    0x48(%rax),%rbx
  0x0000000002e521e8: push   %rdi
  0x0000000002e521e9: push   %rsi
  0x0000000002e521ea: push   %rdx
  0x0000000002e521eb: push   %rcx
  0x0000000002e521ec: push   %r8
  0x0000000002e521ee: push   %r9
  0x0000000002e521f0: push   %r10
  0x0000000002e521f2: mov    %rsp,%r10
  0x0000000002e521f5: and    $0xfffffffffffffff0,%rsp
  0x0000000002e521f9: push   %r10
  0x0000000002e521fb: push   %r11
  0x0000000002e521fd: mov    $0x7,%ecx
  0x0000000002e52202: movabs $0x7ffbdd104c90,%r10  ;   {runtime_call}
  0x0000000002e5220c: callq  *%r10
  0x0000000002e5220f: pop    %r11
  0x0000000002e52211: pop    %rsp
  0x0000000002e52212: pop    %r10
  0x0000000002e52214: pop    %r9
  0x0000000002e52216: pop    %r8
  0x0000000002e52218: pop    %rcx
  0x0000000002e52219: pop    %rdx
  0x0000000002e5221a: pop    %rsi
  0x0000000002e5221b: pop    %rdi
  0x0000000002e5221c: cmp    0x118(%rbx),%rax
  0x0000000002e52223: pop    %rbx
  0x0000000002e52224: pop    %rax
  0x0000000002e52225: jne    0x0000000002e52235
  0x0000000002e5222b: jmpq   0x0000000002e51f0a
  0x0000000002e52230: mov    $0xa535d00,%eax
  0x0000000002e52235: callq  0x0000000002e40fa0  ; OopMap{off=1210}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002e5223a: jmpq   0x0000000002e51f00
  0x0000000002e5223f: callq  0x0000000002db0bc0  ; OopMap{rax=Oop off=1220}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002e52244: mov    0x0(%rax),%eax
  0x0000000002e5224a: mov    $0x6050b00,%eax
  0x0000000002e5224f: callq  0x0000000002e40720  ; OopMap{rax=Oop off=1236}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002e52254: jmpq   0x0000000002e51f10
  0x0000000002e52259: nop
  0x0000000002e5225a: nop
  0x0000000002e5225b: mov    0x2a8(%r15),%rax
  0x0000000002e52262: movabs $0x0,%r10
  0x0000000002e5226c: mov    %r10,0x2a8(%r15)
  0x0000000002e52273: movabs $0x0,%r10
  0x0000000002e5227d: mov    %r10,0x2b0(%r15)
  0x0000000002e52284: add    $0x30,%rsp
  0x0000000002e52288: pop    %rbp
  0x0000000002e52289: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e5228e: hlt    
  0x0000000002e5228f: hlt    
  0x0000000002e52290: hlt    
  0x0000000002e52291: hlt    
  0x0000000002e52292: hlt    
  0x0000000002e52293: hlt    
  0x0000000002e52294: hlt    
  0x0000000002e52295: hlt    
  0x0000000002e52296: hlt    
  0x0000000002e52297: hlt    
  0x0000000002e52298: hlt    
  0x0000000002e52299: hlt    
  0x0000000002e5229a: hlt    
  0x0000000002e5229b: hlt    
  0x0000000002e5229c: hlt    
  0x0000000002e5229d: hlt    
  0x0000000002e5229e: hlt    
  0x0000000002e5229f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e522a0: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e522a5: mov    %rsp,-0x28(%rsp)
  0x0000000002e522aa: sub    $0x80,%rsp
  0x0000000002e522b1: mov    %rax,0x78(%rsp)
  0x0000000002e522b6: mov    %rcx,0x70(%rsp)
  0x0000000002e522bb: mov    %rdx,0x68(%rsp)
  0x0000000002e522c0: mov    %rbx,0x60(%rsp)
  0x0000000002e522c5: mov    %rbp,0x50(%rsp)
  0x0000000002e522ca: mov    %rsi,0x48(%rsp)
  0x0000000002e522cf: mov    %rdi,0x40(%rsp)
  0x0000000002e522d4: mov    %r8,0x38(%rsp)
  0x0000000002e522d9: mov    %r9,0x30(%rsp)
  0x0000000002e522de: mov    %r10,0x28(%rsp)
  0x0000000002e522e3: mov    %r11,0x20(%rsp)
  0x0000000002e522e8: mov    %r12,0x18(%rsp)
  0x0000000002e522ed: mov    %r13,0x10(%rsp)
  0x0000000002e522f2: mov    %r14,0x8(%rsp)
  0x0000000002e522f7: mov    %r15,(%rsp)
  0x0000000002e522fb: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e52305: movabs $0x2e522a5,%rdx    ;   {internal_word}
  0x0000000002e5230f: mov    %rsp,%r8
  0x0000000002e52312: and    $0xfffffffffffffff0,%rsp
  0x0000000002e52316: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5231b: hlt    
[Deopt Handler Code]
  0x0000000002e5231c: movabs $0x2e5231c,%r10    ;   {section_word}
  0x0000000002e52326: push   %r10
  0x0000000002e52328: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e5232d: hlt    
  0x0000000002e5232e: hlt    
  0x0000000002e5232f: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x0000000002e51d80' size='2680' address='0x0000000002e51bd0' relocation_offset='288' insts_offset='432' stub_offset='1744' scopes_data_offset='1896' scopes_pcs_offset='2040' dependencies_offset='2616' nul_chk_table_offset='2624' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='4341' iicount='4341' stamp='0.427'/>
Decoding compiled method 0x0000000002e51590:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb41dc8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002e516e0: mov    0x8(%rdx),%r10d
  0x0000000002e516e4: shl    $0x3,%r10
  0x0000000002e516e8: cmp    %rax,%r10
  0x0000000002e516eb: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e516f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e516fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e51700: mov    %eax,-0x6000(%rsp)
  0x0000000002e51707: push   %rbp
  0x0000000002e51708: sub    $0x30,%rsp
  0x0000000002e5170c: movabs $0x1bb43708,%rax   ;   {metadata(method data for {method} {0x000000001bb41dc8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002e51716: mov    0xdc(%rax),%esi
  0x0000000002e5171c: add    $0x8,%esi
  0x0000000002e5171f: mov    %esi,0xdc(%rax)
  0x0000000002e51725: movabs $0x1bb41dc0,%rax   ;   {metadata({method} {0x000000001bb41dc8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002e5172f: and    $0x1ff8,%esi
  0x0000000002e51735: cmp    $0x0,%esi
  0x0000000002e51738: je     0x0000000002e5176c  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x0000000002e5173e: and    $0xffff,%r8d
  0x0000000002e51745: movabs $0x76b48c4e8,%rax  ;   {oop([I)}
  0x0000000002e5174f: movslq %r8d,%rsi
  0x0000000002e51752: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x0000000002e51780
  0x0000000002e51756: jae    0x0000000002e5178a
  0x0000000002e5175c: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x0000000002e51760: add    $0x30,%rsp
  0x0000000002e51764: pop    %rbp
  0x0000000002e51765: test   %eax,-0x286166b(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e5176b: retq   
  0x0000000002e5176c: mov    %rax,0x8(%rsp)
  0x0000000002e51771: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e51779: callq  0x0000000002e41c20  ; OopMap{rdx=Oop off=158}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x0000000002e5177e: jmp    0x0000000002e5173e
  0x0000000002e51780: callq  0x0000000002db0bc0  ; OopMap{rax=Oop off=165}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002e51785: callq  0x0000000002db0bc0  ; OopMap{rax=Oop off=170}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002e5178a: mov    %r8,(%rsp)
  0x0000000002e5178e: callq  0x0000000002db1280  ; OopMap{rax=Oop off=179}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002e51793: nop
  0x0000000002e51794: nop
  0x0000000002e51795: mov    0x2a8(%r15),%rax
  0x0000000002e5179c: movabs $0x0,%r10
  0x0000000002e517a6: mov    %r10,0x2a8(%r15)
  0x0000000002e517ad: movabs $0x0,%r10
  0x0000000002e517b7: mov    %r10,0x2b0(%r15)
  0x0000000002e517be: add    $0x30,%rsp
  0x0000000002e517c2: pop    %rbp
  0x0000000002e517c3: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e517c8: hlt    
  0x0000000002e517c9: hlt    
  0x0000000002e517ca: hlt    
  0x0000000002e517cb: hlt    
  0x0000000002e517cc: hlt    
  0x0000000002e517cd: hlt    
  0x0000000002e517ce: hlt    
  0x0000000002e517cf: hlt    
  0x0000000002e517d0: hlt    
  0x0000000002e517d1: hlt    
  0x0000000002e517d2: hlt    
  0x0000000002e517d3: hlt    
  0x0000000002e517d4: hlt    
  0x0000000002e517d5: hlt    
  0x0000000002e517d6: hlt    
  0x0000000002e517d7: hlt    
  0x0000000002e517d8: hlt    
  0x0000000002e517d9: hlt    
  0x0000000002e517da: hlt    
  0x0000000002e517db: hlt    
  0x0000000002e517dc: hlt    
  0x0000000002e517dd: hlt    
  0x0000000002e517de: hlt    
  0x0000000002e517df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e517e0: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e517e5: mov    %rsp,-0x28(%rsp)
  0x0000000002e517ea: sub    $0x80,%rsp
  0x0000000002e517f1: mov    %rax,0x78(%rsp)
  0x0000000002e517f6: mov    %rcx,0x70(%rsp)
  0x0000000002e517fb: mov    %rdx,0x68(%rsp)
  0x0000000002e51800: mov    %rbx,0x60(%rsp)
  0x0000000002e51805: mov    %rbp,0x50(%rsp)
  0x0000000002e5180a: mov    %rsi,0x48(%rsp)
  0x0000000002e5180f: mov    %rdi,0x40(%rsp)
  0x0000000002e51814: mov    %r8,0x38(%rsp)
  0x0000000002e51819: mov    %r9,0x30(%rsp)
  0x0000000002e5181e: mov    %r10,0x28(%rsp)
  0x0000000002e51823: mov    %r11,0x20(%rsp)
  0x0000000002e51828: mov    %r12,0x18(%rsp)
  0x0000000002e5182d: mov    %r13,0x10(%rsp)
  0x0000000002e51832: mov    %r14,0x8(%rsp)
  0x0000000002e51837: mov    %r15,(%rsp)
  0x0000000002e5183b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e51845: movabs $0x2e517e5,%rdx    ;   {internal_word}
  0x0000000002e5184f: mov    %rsp,%r8
  0x0000000002e51852: and    $0xfffffffffffffff0,%rsp
  0x0000000002e51856: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5185b: hlt    
[Deopt Handler Code]
  0x0000000002e5185c: movabs $0x2e5185c,%r10    ;   {section_word}
  0x0000000002e51866: push   %r10
  0x0000000002e51868: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e5186d: hlt    
  0x0000000002e5186e: hlt    
  0x0000000002e5186f: hlt    
<nmethod compile_id='18' compiler='C1' level='3' entry='0x0000000002e516e0' size='952' address='0x0000000002e51590' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='792' dependencies_offset='920' nul_chk_table_offset='928' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4341' iicount='4341' stamp='0.433'/>
Decoding compiled method 0x0000000002e511d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001ba9cd38} &apos;setColor&apos; &apos;(Ljava/util/TreeMap$Entry;Z)V&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  # parm1:    r8        = boolean
  #           [sp+0x40]  (sp of caller)
  0x0000000002e51320: mov    %eax,-0x6000(%rsp)
  0x0000000002e51327: push   %rbp
  0x0000000002e51328: sub    $0x30,%rsp
  0x0000000002e5132c: movabs $0x1baa1678,%rsi   ;   {metadata(method data for {method} {0x000000001ba9cd38} &apos;setColor&apos; &apos;(Ljava/util/TreeMap$Entry;Z)V&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002e51336: mov    0xdc(%rsi),%edi
  0x0000000002e5133c: add    $0x8,%edi
  0x0000000002e5133f: mov    %edi,0xdc(%rsi)
  0x0000000002e51345: movabs $0x1ba9cd30,%rsi   ;   {metadata({method} {0x000000001ba9cd38} &apos;setColor&apos; &apos;(Ljava/util/TreeMap$Entry;Z)V&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002e5134f: and    $0x1ff8,%edi
  0x0000000002e51355: cmp    $0x0,%edi
  0x0000000002e51358: je     0x0000000002e513ac  ;*aload_0
                                                ; - java.util.TreeMap::setColor@0 (line 2204)

  0x0000000002e5135e: cmp    $0x0,%rdx
  0x0000000002e51362: movabs $0x1baa1678,%rsi   ;   {metadata(method data for {method} {0x000000001ba9cd38} &apos;setColor&apos; &apos;(Ljava/util/TreeMap$Entry;Z)V&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002e5136c: movabs $0x108,%rdi
  0x0000000002e51376: je     0x0000000002e51386
  0x0000000002e5137c: movabs $0x118,%rdi
  0x0000000002e51386: mov    (%rsi,%rdi,1),%rbx
  0x0000000002e5138a: lea    0x1(%rbx),%rbx
  0x0000000002e5138e: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002e51392: je     0x0000000002e513a0  ;*ifnull
                                                ; - java.util.TreeMap::setColor@1 (line 2204)

  0x0000000002e51398: and    $0x1,%r8d
  0x0000000002e5139c: mov    %r8b,0xc(%rdx)     ;*putfield color
                                                ; - java.util.TreeMap::setColor@6 (line 2205)
                                                ; implicit exception: dispatches to 0x0000000002e513c0
  0x0000000002e513a0: add    $0x30,%rsp
  0x0000000002e513a4: pop    %rbp
  0x0000000002e513a5: test   %eax,-0x28612ab(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e513ab: retq   
  0x0000000002e513ac: mov    %rsi,0x8(%rsp)
  0x0000000002e513b1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e513b9: callq  0x0000000002e41c20  ; OopMap{rdx=Oop off=158}
                                                ;*synchronization entry
                                                ; - java.util.TreeMap::setColor@-1 (line 2204)
                                                ;   {runtime_call}
  0x0000000002e513be: jmp    0x0000000002e5135e
  0x0000000002e513c0: callq  0x0000000002db0bc0  ; OopMap{off=165}
                                                ;*putfield color
                                                ; - java.util.TreeMap::setColor@6 (line 2205)
                                                ;   {runtime_call}
  0x0000000002e513c5: nop
  0x0000000002e513c6: nop
  0x0000000002e513c7: mov    0x2a8(%r15),%rax
  0x0000000002e513ce: movabs $0x0,%r10
  0x0000000002e513d8: mov    %r10,0x2a8(%r15)
  0x0000000002e513df: movabs $0x0,%r10
  0x0000000002e513e9: mov    %r10,0x2b0(%r15)
  0x0000000002e513f0: add    $0x30,%rsp
  0x0000000002e513f4: pop    %rbp
  0x0000000002e513f5: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e513fa: hlt    
  0x0000000002e513fb: hlt    
  0x0000000002e513fc: hlt    
  0x0000000002e513fd: hlt    
  0x0000000002e513fe: hlt    
  0x0000000002e513ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e51400: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e51405: mov    %rsp,-0x28(%rsp)
  0x0000000002e5140a: sub    $0x80,%rsp
  0x0000000002e51411: mov    %rax,0x78(%rsp)
  0x0000000002e51416: mov    %rcx,0x70(%rsp)
  0x0000000002e5141b: mov    %rdx,0x68(%rsp)
  0x0000000002e51420: mov    %rbx,0x60(%rsp)
  0x0000000002e51425: mov    %rbp,0x50(%rsp)
  0x0000000002e5142a: mov    %rsi,0x48(%rsp)
  0x0000000002e5142f: mov    %rdi,0x40(%rsp)
  0x0000000002e51434: mov    %r8,0x38(%rsp)
  0x0000000002e51439: mov    %r9,0x30(%rsp)
  0x0000000002e5143e: mov    %r10,0x28(%rsp)
  0x0000000002e51443: mov    %r11,0x20(%rsp)
  0x0000000002e51448: mov    %r12,0x18(%rsp)
  0x0000000002e5144d: mov    %r13,0x10(%rsp)
  0x0000000002e51452: mov    %r14,0x8(%rsp)
  0x0000000002e51457: mov    %r15,(%rsp)
  0x0000000002e5145b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e51465: movabs $0x2e51405,%rdx    ;   {internal_word}
  0x0000000002e5146f: mov    %rsp,%r8
  0x0000000002e51472: and    $0xfffffffffffffff0,%rsp
  0x0000000002e51476: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5147b: hlt    
[Deopt Handler Code]
  0x0000000002e5147c: movabs $0x2e5147c,%r10    ;   {section_word}
  0x0000000002e51486: push   %r10
  0x0000000002e51488: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e5148d: hlt    
  0x0000000002e5148e: hlt    
  0x0000000002e5148f: hlt    
<nmethod compile_id='23' compiler='C1' level='3' entry='0x0000000002e51320' size='896' address='0x0000000002e511d0' relocation_offset='288' insts_offset='336' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='760' dependencies_offset='872' nul_chk_table_offset='880' method='java/util/TreeMap setColor (Ljava/util/TreeMap$Entry;Z)V' bytes='10' count='2450' iicount='2450' stamp='0.438'/>
Decoding compiled method 0x0000000002e50d50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001ba9cdd8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002e50ea0: mov    %eax,-0x6000(%rsp)
  0x0000000002e50ea7: push   %rbp
  0x0000000002e50ea8: sub    $0x30,%rsp
  0x0000000002e50eac: movabs $0x1baa17c0,%rax   ;   {metadata(method data for {method} {0x000000001ba9cdd8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002e50eb6: mov    0xdc(%rax),%esi
  0x0000000002e50ebc: add    $0x8,%esi
  0x0000000002e50ebf: mov    %esi,0xdc(%rax)
  0x0000000002e50ec5: movabs $0x1ba9cdd0,%rax   ;   {metadata({method} {0x000000001ba9cdd8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002e50ecf: and    $0x1ff8,%esi
  0x0000000002e50ed5: cmp    $0x0,%esi
  0x0000000002e50ed8: je     0x0000000002e50f51  ;*aload_0
                                                ; - java.util.TreeMap::leftOf@0 (line 2209)

  0x0000000002e50ede: cmp    $0x0,%rdx
  0x0000000002e50ee2: movabs $0x1baa17c0,%rax   ;   {metadata(method data for {method} {0x000000001ba9cdd8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002e50eec: movabs $0x108,%rsi
  0x0000000002e50ef6: jne    0x0000000002e50f06
  0x0000000002e50efc: movabs $0x118,%rsi
  0x0000000002e50f06: mov    (%rax,%rsi,1),%rdi
  0x0000000002e50f0a: lea    0x1(%rdi),%rdi
  0x0000000002e50f0e: mov    %rdi,(%rax,%rsi,1)
  0x0000000002e50f12: jne    0x0000000002e50f3e  ;*ifnonnull
                                                ; - java.util.TreeMap::leftOf@1 (line 2209)

  0x0000000002e50f18: movabs $0x1baa17c0,%rax   ;   {metadata(method data for {method} {0x000000001ba9cdd8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002e50f22: incl   0x128(%rax)
  0x0000000002e50f28: movabs $0x0,%rax          ;*goto
                                                ; - java.util.TreeMap::leftOf@5 (line 2209)
                                                ;   {oop(NULL)}
  0x0000000002e50f32: add    $0x30,%rsp
  0x0000000002e50f36: pop    %rbp
  0x0000000002e50f37: test   %eax,-0x2860e3d(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e50f3d: retq   
  0x0000000002e50f3e: mov    0x18(%rdx),%eax    ; implicit exception: dispatches to 0x0000000002e50f68
  0x0000000002e50f41: shl    $0x3,%rax          ;*getfield left
                                                ; - java.util.TreeMap::leftOf@9 (line 2209)

  0x0000000002e50f45: add    $0x30,%rsp
  0x0000000002e50f49: pop    %rbp
  0x0000000002e50f4a: test   %eax,-0x2860e50(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e50f50: retq   
  0x0000000002e50f51: mov    %rax,0x8(%rsp)
  0x0000000002e50f56: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e50f5e: callq  0x0000000002e41c20  ; OopMap{rdx=Oop off=195}
                                                ;*synchronization entry
                                                ; - java.util.TreeMap::leftOf@-1 (line 2209)
                                                ;   {runtime_call}
  0x0000000002e50f63: jmpq   0x0000000002e50ede
  0x0000000002e50f68: callq  0x0000000002db0bc0  ; OopMap{off=205}
                                                ;*getfield left
                                                ; - java.util.TreeMap::leftOf@9 (line 2209)
                                                ;   {runtime_call}
  0x0000000002e50f6d: nop
  0x0000000002e50f6e: nop
  0x0000000002e50f6f: mov    0x2a8(%r15),%rax
  0x0000000002e50f76: movabs $0x0,%r10
  0x0000000002e50f80: mov    %r10,0x2a8(%r15)
  0x0000000002e50f87: movabs $0x0,%r10
  0x0000000002e50f91: mov    %r10,0x2b0(%r15)
  0x0000000002e50f98: add    $0x30,%rsp
  0x0000000002e50f9c: pop    %rbp
  0x0000000002e50f9d: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e50fa2: hlt    
  0x0000000002e50fa3: hlt    
  0x0000000002e50fa4: hlt    
  0x0000000002e50fa5: hlt    
  0x0000000002e50fa6: hlt    
  0x0000000002e50fa7: hlt    
  0x0000000002e50fa8: hlt    
  0x0000000002e50fa9: hlt    
  0x0000000002e50faa: hlt    
  0x0000000002e50fab: hlt    
  0x0000000002e50fac: hlt    
  0x0000000002e50fad: hlt    
  0x0000000002e50fae: hlt    
  0x0000000002e50faf: hlt    
  0x0000000002e50fb0: hlt    
  0x0000000002e50fb1: hlt    
  0x0000000002e50fb2: hlt    
  0x0000000002e50fb3: hlt    
  0x0000000002e50fb4: hlt    
  0x0000000002e50fb5: hlt    
  0x0000000002e50fb6: hlt    
  0x0000000002e50fb7: hlt    
  0x0000000002e50fb8: hlt    
  0x0000000002e50fb9: hlt    
  0x0000000002e50fba: hlt    
  0x0000000002e50fbb: hlt    
  0x0000000002e50fbc: hlt    
  0x0000000002e50fbd: hlt    
  0x0000000002e50fbe: hlt    
  0x0000000002e50fbf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e50fc0: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e50fc5: mov    %rsp,-0x28(%rsp)
  0x0000000002e50fca: sub    $0x80,%rsp
  0x0000000002e50fd1: mov    %rax,0x78(%rsp)
  0x0000000002e50fd6: mov    %rcx,0x70(%rsp)
  0x0000000002e50fdb: mov    %rdx,0x68(%rsp)
  0x0000000002e50fe0: mov    %rbx,0x60(%rsp)
  0x0000000002e50fe5: mov    %rbp,0x50(%rsp)
  0x0000000002e50fea: mov    %rsi,0x48(%rsp)
  0x0000000002e50fef: mov    %rdi,0x40(%rsp)
  0x0000000002e50ff4: mov    %r8,0x38(%rsp)
  0x0000000002e50ff9: mov    %r9,0x30(%rsp)
  0x0000000002e50ffe: mov    %r10,0x28(%rsp)
  0x0000000002e51003: mov    %r11,0x20(%rsp)
  0x0000000002e51008: mov    %r12,0x18(%rsp)
  0x0000000002e5100d: mov    %r13,0x10(%rsp)
  0x0000000002e51012: mov    %r14,0x8(%rsp)
  0x0000000002e51017: mov    %r15,(%rsp)
  0x0000000002e5101b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e51025: movabs $0x2e50fc5,%rdx    ;   {internal_word}
  0x0000000002e5102f: mov    %rsp,%r8
  0x0000000002e51032: and    $0xfffffffffffffff0,%rsp
  0x0000000002e51036: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5103b: hlt    
[Deopt Handler Code]
  0x0000000002e5103c: movabs $0x2e5103c,%r10    ;   {section_word}
  0x0000000002e51046: push   %r10
  0x0000000002e51048: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e5104d: hlt    
  0x0000000002e5104e: hlt    
  0x0000000002e5104f: hlt    
<nmethod compile_id='21' compiler='C1' level='3' entry='0x0000000002e50ea0' size='976' address='0x0000000002e50d50' relocation_offset='288' insts_offset='336' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='824' dependencies_offset='952' nul_chk_table_offset='960' method='java/util/TreeMap leftOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='1813' iicount='1813' stamp='0.444'/>
Decoding compiled method 0x0000000002e539d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001ba0a1b0} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = char
  #           [sp+0x50]  (sp of caller)
  0x0000000002e53b40: mov    %eax,-0x6000(%rsp)
  0x0000000002e53b47: push   %rbp
  0x0000000002e53b48: sub    $0x40,%rsp
  0x0000000002e53b4c: movabs $0x1bc375d0,%rsi   ;   {metadata(method data for {method} {0x000000001ba0a1b0} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002e53b56: mov    0xdc(%rsi),%edi
  0x0000000002e53b5c: add    $0x8,%edi
  0x0000000002e53b5f: mov    %edi,0xdc(%rsi)
  0x0000000002e53b65: movabs $0x1ba0a1a8,%rsi   ;   {metadata({method} {0x000000001ba0a1b0} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002e53b6f: and    $0x1ff8,%edi
  0x0000000002e53b75: cmp    $0x0,%edi
  0x0000000002e53b78: je     0x0000000002e53cac  ;*iload_0
                                                ; - java.lang.Character::toUpperCase@0 (line 6369)

  0x0000000002e53b7e: movabs $0x1bc375d0,%rsi   ;   {metadata(method data for {method} {0x000000001ba0a1b0} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002e53b88: addq   $0x1,0x108(%rsi)
  0x0000000002e53b90: movabs $0x1bc37728,%rsi   ;   {metadata(method data for {method} {0x000000001ba0a248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002e53b9a: mov    0xdc(%rsi),%edi
  0x0000000002e53ba0: add    $0x8,%edi
  0x0000000002e53ba3: mov    %edi,0xdc(%rsi)
  0x0000000002e53ba9: movabs $0x1ba0a240,%rsi   ;   {metadata({method} {0x000000001ba0a248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002e53bb3: and    $0x7ffff8,%edi
  0x0000000002e53bb9: cmp    $0x0,%edi
  0x0000000002e53bbc: je     0x0000000002e53cc3
  0x0000000002e53bc2: movabs $0x1bc37728,%rsi   ;   {metadata(method data for {method} {0x000000001ba0a248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002e53bcc: addq   $0x1,0x108(%rsi)
  0x0000000002e53bd4: mov    %rdx,%rsi
  0x0000000002e53bd7: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x0000000002e53bda: mov    %esi,0x28(%rsp)
  0x0000000002e53bde: nop
  0x0000000002e53bdf: callq  0x0000000002d86620  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {static_call}
  0x0000000002e53be4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002e53cda
  0x0000000002e53be7: mov    %rax,%r8
  0x0000000002e53bea: movabs $0x1bc37728,%rdx   ;   {metadata(method data for {method} {0x000000001ba0a248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002e53bf4: mov    0x8(%r8),%r8d
  0x0000000002e53bf8: shl    $0x3,%r8
  0x0000000002e53bfc: cmp    0x120(%rdx),%r8
  0x0000000002e53c03: jne    0x0000000002e53c12
  0x0000000002e53c05: addq   $0x1,0x128(%rdx)
  0x0000000002e53c0d: jmpq   0x0000000002e53c78
  0x0000000002e53c12: cmp    0x130(%rdx),%r8
  0x0000000002e53c19: jne    0x0000000002e53c28
  0x0000000002e53c1b: addq   $0x1,0x138(%rdx)
  0x0000000002e53c23: jmpq   0x0000000002e53c78
  0x0000000002e53c28: cmpq   $0x0,0x120(%rdx)
  0x0000000002e53c33: jne    0x0000000002e53c4c
  0x0000000002e53c35: mov    %r8,0x120(%rdx)
  0x0000000002e53c3c: movq   $0x1,0x128(%rdx)
  0x0000000002e53c47: jmpq   0x0000000002e53c78
  0x0000000002e53c4c: cmpq   $0x0,0x130(%rdx)
  0x0000000002e53c57: jne    0x0000000002e53c70
  0x0000000002e53c59: mov    %r8,0x130(%rdx)
  0x0000000002e53c60: movq   $0x1,0x138(%rdx)
  0x0000000002e53c6b: jmpq   0x0000000002e53c78
  0x0000000002e53c70: addq   $0x1,0x118(%rdx)
  0x0000000002e53c78: mov    0x28(%rsp),%r8d
  0x0000000002e53c7d: mov    %rax,%rdx          ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x0000000002e53c80: nop
  0x0000000002e53c81: nop
  0x0000000002e53c82: nop
  0x0000000002e53c83: nop
  0x0000000002e53c84: nop
  0x0000000002e53c85: movabs $0xffffffffffffffff,%rax
  0x0000000002e53c8f: callq  0x0000000002d863e0  ; OopMap{off=340}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {virtual_call}
  0x0000000002e53c94: and    $0xffff,%eax
  0x0000000002e53c9a: and    $0xffff,%eax
  0x0000000002e53ca0: add    $0x40,%rsp
  0x0000000002e53ca4: pop    %rbp
  0x0000000002e53ca5: test   %eax,-0x2863bab(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e53cab: retq   
  0x0000000002e53cac: mov    %rsi,0x8(%rsp)
  0x0000000002e53cb1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e53cb9: callq  0x0000000002e41c20  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002e53cbe: jmpq   0x0000000002e53b7e
  0x0000000002e53cc3: mov    %rsi,0x8(%rsp)
  0x0000000002e53cc8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e53cd0: callq  0x0000000002e41c20  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002e53cd5: jmpq   0x0000000002e53bc2
  0x0000000002e53cda: callq  0x0000000002db0bc0  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002e53cdf: nop
  0x0000000002e53ce0: nop
  0x0000000002e53ce1: mov    0x2a8(%r15),%rax
  0x0000000002e53ce8: movabs $0x0,%r10
  0x0000000002e53cf2: mov    %r10,0x2a8(%r15)
  0x0000000002e53cf9: movabs $0x0,%r10
  0x0000000002e53d03: mov    %r10,0x2b0(%r15)
  0x0000000002e53d0a: add    $0x40,%rsp
  0x0000000002e53d0e: pop    %rbp
  0x0000000002e53d0f: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e53d14: hlt    
  0x0000000002e53d15: hlt    
  0x0000000002e53d16: hlt    
  0x0000000002e53d17: hlt    
  0x0000000002e53d18: hlt    
  0x0000000002e53d19: hlt    
  0x0000000002e53d1a: hlt    
  0x0000000002e53d1b: hlt    
  0x0000000002e53d1c: hlt    
  0x0000000002e53d1d: hlt    
  0x0000000002e53d1e: hlt    
  0x0000000002e53d1f: hlt    
[Stub Code]
  0x0000000002e53d20: nop                       ;   {no_reloc}
  0x0000000002e53d21: nop
  0x0000000002e53d22: nop
  0x0000000002e53d23: nop
  0x0000000002e53d24: nop
  0x0000000002e53d25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e53d2f: jmpq   0x0000000002e53d2f  ;   {runtime_call}
  0x0000000002e53d34: nop
  0x0000000002e53d35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e53d3f: jmpq   0x0000000002e53d3f  ;   {runtime_call}
[Exception Handler]
  0x0000000002e53d44: callq  0x0000000002e3f3e0  ;   {runtime_call}
  0x0000000002e53d49: mov    %rsp,-0x28(%rsp)
  0x0000000002e53d4e: sub    $0x80,%rsp
  0x0000000002e53d55: mov    %rax,0x78(%rsp)
  0x0000000002e53d5a: mov    %rcx,0x70(%rsp)
  0x0000000002e53d5f: mov    %rdx,0x68(%rsp)
  0x0000000002e53d64: mov    %rbx,0x60(%rsp)
  0x0000000002e53d69: mov    %rbp,0x50(%rsp)
  0x0000000002e53d6e: mov    %rsi,0x48(%rsp)
  0x0000000002e53d73: mov    %rdi,0x40(%rsp)
  0x0000000002e53d78: mov    %r8,0x38(%rsp)
  0x0000000002e53d7d: mov    %r9,0x30(%rsp)
  0x0000000002e53d82: mov    %r10,0x28(%rsp)
  0x0000000002e53d87: mov    %r11,0x20(%rsp)
  0x0000000002e53d8c: mov    %r12,0x18(%rsp)
  0x0000000002e53d91: mov    %r13,0x10(%rsp)
  0x0000000002e53d96: mov    %r14,0x8(%rsp)
  0x0000000002e53d9b: mov    %r15,(%rsp)
  0x0000000002e53d9f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e53da9: movabs $0x2e53d49,%rdx    ;   {internal_word}
  0x0000000002e53db3: mov    %rsp,%r8
  0x0000000002e53db6: and    $0xfffffffffffffff0,%rsp
  0x0000000002e53dba: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e53dbf: hlt    
[Deopt Handler Code]
  0x0000000002e53dc0: movabs $0x2e53dc0,%r10    ;   {section_word}
  0x0000000002e53dca: push   %r10
  0x0000000002e53dcc: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e53dd1: hlt    
  0x0000000002e53dd2: hlt    
  0x0000000002e53dd3: hlt    
  0x0000000002e53dd4: hlt    
  0x0000000002e53dd5: hlt    
  0x0000000002e53dd6: hlt    
  0x0000000002e53dd7: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x0000000002e53b40' size='1304' address='0x0000000002e539d0' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1048' scopes_pcs_offset='1120' dependencies_offset='1280' nul_chk_table_offset='1288' method='java/lang/Character toUpperCase (C)C' bytes='6' count='688' iicount='688' stamp='0.453'/>
<writer thread='21988'/>
<task_queued compile_id='24' method='java/util/TreeMap rightOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='640' iicount='640' level='3' stamp='0.453' comment='tiered' hot_count='640'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e54110:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001ba0a248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002e54280: mov    %eax,-0x6000(%rsp)
  0x0000000002e54287: push   %rbp
  0x0000000002e54288: sub    $0x30,%rsp
  0x0000000002e5428c: movabs $0x1bc37728,%rsi   ;   {metadata(method data for {method} {0x000000001ba0a248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002e54296: mov    0xdc(%rsi),%edi
  0x0000000002e5429c: add    $0x8,%edi
  0x0000000002e5429f: mov    %edi,0xdc(%rsi)
  0x0000000002e542a5: movabs $0x1ba0a240,%rsi   ;   {metadata({method} {0x000000001ba0a248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002e542af: and    $0x1ff8,%edi
  0x0000000002e542b5: cmp    $0x0,%edi
  0x0000000002e542b8: je     0x0000000002e543a0  ;*iload_0
                                                ; - java.lang.Character::toUpperCase@0 (line 6398)

  0x0000000002e542be: movabs $0x1bc37728,%rsi   ;   {metadata(method data for {method} {0x000000001ba0a248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002e542c8: addq   $0x1,0x108(%rsi)
  0x0000000002e542d0: mov    %rdx,%rsi
  0x0000000002e542d3: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)

  0x0000000002e542d6: mov    %esi,0x20(%rsp)
  0x0000000002e542da: nop
  0x0000000002e542db: nop
  0x0000000002e542dc: nop
  0x0000000002e542dd: nop
  0x0000000002e542de: nop
  0x0000000002e542df: callq  0x0000000002d86620  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ;   {static_call}
  0x0000000002e542e4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002e543b7
  0x0000000002e542e7: mov    %rax,%r8
  0x0000000002e542ea: movabs $0x1bc37728,%rdx   ;   {metadata(method data for {method} {0x000000001ba0a248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002e542f4: mov    0x8(%r8),%r8d
  0x0000000002e542f8: shl    $0x3,%r8
  0x0000000002e542fc: cmp    0x120(%rdx),%r8
  0x0000000002e54303: jne    0x0000000002e54312
  0x0000000002e54305: addq   $0x1,0x128(%rdx)
  0x0000000002e5430d: jmpq   0x0000000002e54378
  0x0000000002e54312: cmp    0x130(%rdx),%r8
  0x0000000002e54319: jne    0x0000000002e54328
  0x0000000002e5431b: addq   $0x1,0x138(%rdx)
  0x0000000002e54323: jmpq   0x0000000002e54378
  0x0000000002e54328: cmpq   $0x0,0x120(%rdx)
  0x0000000002e54333: jne    0x0000000002e5434c
  0x0000000002e54335: mov    %r8,0x120(%rdx)
  0x0000000002e5433c: movq   $0x1,0x128(%rdx)
  0x0000000002e54347: jmpq   0x0000000002e54378
  0x0000000002e5434c: cmpq   $0x0,0x130(%rdx)
  0x0000000002e54357: jne    0x0000000002e54370
  0x0000000002e54359: mov    %r8,0x130(%rdx)
  0x0000000002e54360: movq   $0x1,0x138(%rdx)
  0x0000000002e5436b: jmpq   0x0000000002e54378
  0x0000000002e54370: addq   $0x1,0x118(%rdx)
  0x0000000002e54378: mov    0x20(%rsp),%r8d
  0x0000000002e5437d: mov    %rax,%rdx          ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)

  0x0000000002e54380: nop
  0x0000000002e54381: nop
  0x0000000002e54382: nop
  0x0000000002e54383: nop
  0x0000000002e54384: nop
  0x0000000002e54385: movabs $0xffffffffffffffff,%rax
  0x0000000002e5438f: callq  0x0000000002d863e0  ; OopMap{off=276}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ;   {virtual_call}
  0x0000000002e54394: add    $0x30,%rsp
  0x0000000002e54398: pop    %rbp
  0x0000000002e54399: test   %eax,-0x286429f(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e5439f: retq   
  0x0000000002e543a0: mov    %rsi,0x8(%rsp)
  0x0000000002e543a5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e543ad: callq  0x0000000002e41c20  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6398)
                                                ;   {runtime_call}
  0x0000000002e543b2: jmpq   0x0000000002e542be
  0x0000000002e543b7: callq  0x0000000002db0bc0  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ;   {runtime_call}
  0x0000000002e543bc: nop
  0x0000000002e543bd: nop
  0x0000000002e543be: mov    0x2a8(%r15),%rax
  0x0000000002e543c5: movabs $0x0,%r10
  0x0000000002e543cf: mov    %r10,0x2a8(%r15)
  0x0000000002e543d6: movabs $0x0,%r10
  0x0000000002e543e0: mov    %r10,0x2b0(%r15)
  0x0000000002e543e7: add    $0x30,%rsp
  0x0000000002e543eb: pop    %rbp
  0x0000000002e543ec: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e543f1: hlt    
  0x0000000002e543f2: hlt    
  0x0000000002e543f3: hlt    
  0x0000000002e543f4: hlt    
  0x0000000002e543f5: hlt    
  0x0000000002e543f6: hlt    
  0x0000000002e543f7: hlt    
  0x0000000002e543f8: hlt    
  0x0000000002e543f9: hlt    
  0x0000000002e543fa: hlt    
  0x0000000002e543fb: hlt    
  0x0000000002e543fc: hlt    
  0x0000000002e543fd: hlt    
  0x0000000002e543fe: hlt    
  0x0000000002e543ff: hlt    
[Stub Code]
  0x0000000002e54400: nop                       ;   {no_reloc}
  0x0000000002e54401: nop
  0x0000000002e54402: nop
  0x0000000002e54403: nop
  0x0000000002e54404: nop
  0x0000000002e54405: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5440f: jmpq   0x0000000002e5440f  ;   {runtime_call}
  0x0000000002e54414: nop
  0x0000000002e54415: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5441f: jmpq   0x0000000002e5441f  ;   {runtime_call}
[Exception Handler]
  0x0000000002e54424: callq  0x0000000002e3f3e0  ;   {runtime_call}
  0x0000000002e54429: mov    %rsp,-0x28(%rsp)
  0x0000000002e5442e: sub    $0x80,%rsp
  0x0000000002e54435: mov    %rax,0x78(%rsp)
  0x0000000002e5443a: mov    %rcx,0x70(%rsp)
  0x0000000002e5443f: mov    %rdx,0x68(%rsp)
  0x0000000002e54444: mov    %rbx,0x60(%rsp)
  0x0000000002e54449: mov    %rbp,0x50(%rsp)
  0x0000000002e5444e: mov    %rsi,0x48(%rsp)
  0x0000000002e54453: mov    %rdi,0x40(%rsp)
  0x0000000002e54458: mov    %r8,0x38(%rsp)
  0x0000000002e5445d: mov    %r9,0x30(%rsp)
  0x0000000002e54462: mov    %r10,0x28(%rsp)
  0x0000000002e54467: mov    %r11,0x20(%rsp)
  0x0000000002e5446c: mov    %r12,0x18(%rsp)
  0x0000000002e54471: mov    %r13,0x10(%rsp)
  0x0000000002e54476: mov    %r14,0x8(%rsp)
  0x0000000002e5447b: mov    %r15,(%rsp)
  0x0000000002e5447f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e54489: movabs $0x2e54429,%rdx    ;   {internal_word}
  0x0000000002e54493: mov    %rsp,%r8
  0x0000000002e54496: and    $0xfffffffffffffff0,%rsp
  0x0000000002e5449a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5449f: hlt    
[Deopt Handler Code]
  0x0000000002e544a0: movabs $0x2e544a0,%r10    ;   {section_word}
  0x0000000002e544aa: push   %r10
  0x0000000002e544ac: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e544b1: hlt    
  0x0000000002e544b2: hlt    
  0x0000000002e544b3: hlt    
  0x0000000002e544b4: hlt    
  0x0000000002e544b5: hlt    
  0x0000000002e544b6: hlt    
  0x0000000002e544b7: hlt    
<nmethod compile_id='20' compiler='C1' level='3' entry='0x0000000002e54280' size='1160' address='0x0000000002e54110' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toUpperCase (I)I' bytes='9' count='746' iicount='746' stamp='0.459'/>
Decoding compiled method 0x0000000002e545d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb42668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002e54740: mov    0x8(%rdx),%r10d
  0x0000000002e54744: shl    $0x3,%r10
  0x0000000002e54748: cmp    %rax,%r10
  0x0000000002e5474b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e54751: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e5475c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e54760: mov    %eax,-0x6000(%rsp)
  0x0000000002e54767: push   %rbp
  0x0000000002e54768: sub    $0x40,%rsp
  0x0000000002e5476c: movabs $0x1bc378e0,%rax   ;   {metadata(method data for {method} {0x000000001bb42668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002e54776: mov    0xdc(%rax),%esi
  0x0000000002e5477c: add    $0x8,%esi
  0x0000000002e5477f: mov    %esi,0xdc(%rax)
  0x0000000002e54785: movabs $0x1bb42660,%rax   ;   {metadata({method} {0x000000001bb42668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002e5478f: and    $0x1ff8,%esi
  0x0000000002e54795: cmp    $0x0,%esi
  0x0000000002e54798: je     0x0000000002e548fc  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@0 (line 145)

  0x0000000002e5479e: movabs $0x1bc378e0,%rax   ;   {metadata(method data for {method} {0x000000001bb42668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002e547a8: addq   $0x1,0x118(%rax)
  0x0000000002e547b0: movabs $0x1bb43708,%rax   ;   {metadata(method data for {method} {0x000000001bb41dc8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002e547ba: mov    0xdc(%rax),%esi
  0x0000000002e547c0: add    $0x8,%esi
  0x0000000002e547c3: mov    %esi,0xdc(%rax)
  0x0000000002e547c9: movabs $0x1bb41dc0,%rax   ;   {metadata({method} {0x000000001bb41dc8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002e547d3: and    $0x7ffff8,%esi
  0x0000000002e547d9: cmp    $0x0,%esi
  0x0000000002e547dc: je     0x0000000002e54913
  0x0000000002e547e2: mov    %r8,%rax
  0x0000000002e547e5: and    $0xffff,%eax
  0x0000000002e547eb: movabs $0x76b48c4e8,%rsi  ;   {oop([I)}
  0x0000000002e547f5: movslq %eax,%rdi
  0x0000000002e547f8: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x0000000002e5492a
  0x0000000002e547fb: jae    0x0000000002e54934
  0x0000000002e54801: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)

  0x0000000002e54805: mov    %rax,%rsi
  0x0000000002e54808: and    $0x10000,%esi
  0x0000000002e5480e: cmp    $0x0,%esi
  0x0000000002e54811: movabs $0x1bc378e0,%rsi   ;   {metadata(method data for {method} {0x000000001bb42668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002e5481b: movabs $0x138,%rdi
  0x0000000002e54825: je     0x0000000002e54835
  0x0000000002e5482b: movabs $0x148,%rdi
  0x0000000002e54835: mov    (%rsi,%rdi,1),%rbx
  0x0000000002e54839: lea    0x1(%rbx),%rbx
  0x0000000002e5483d: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002e54841: je     0x0000000002e548ed  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@12 (line 148)

  0x0000000002e54847: mov    %rax,%rsi
  0x0000000002e5484a: and    $0x7fc0000,%esi
  0x0000000002e54850: cmp    $0x7fc0000,%esi
  0x0000000002e54856: movabs $0x1bc378e0,%rsi   ;   {metadata(method data for {method} {0x000000001bb42668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002e54860: movabs $0x158,%rdi
  0x0000000002e5486a: je     0x0000000002e5487a
  0x0000000002e54870: movabs $0x168,%rdi
  0x0000000002e5487a: mov    (%rsi,%rdi,1),%rbx
  0x0000000002e5487e: lea    0x1(%rbx),%rbx
  0x0000000002e54882: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002e54886: jne    0x0000000002e548d4  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@21 (line 149)

  0x0000000002e5488c: cmp    $0xb5,%r8d
  0x0000000002e54893: movabs $0x1bc378e0,%rax   ;   {metadata(method data for {method} {0x000000001bb42668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002e5489d: movabs $0x190,%rsi
  0x0000000002e548a7: jne    0x0000000002e548b7
  0x0000000002e548ad: movabs $0x1a0,%rsi
  0x0000000002e548b7: mov    (%rax,%rsi,1),%rdi
  0x0000000002e548bb: lea    0x1(%rdi),%rdi
  0x0000000002e548bf: mov    %rdi,(%rax,%rsi,1)
  0x0000000002e548c3: jne    0x0000000002e548ed  ;*if_icmpne
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@44 (line 152)

  0x0000000002e548c9: mov    $0x39c,%r8d
  0x0000000002e548cf: jmpq   0x0000000002e548ed  ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@51 (line 156)

  0x0000000002e548d4: shl    $0x5,%eax
  0x0000000002e548d7: sar    $0x17,%eax
  0x0000000002e548da: sub    %eax,%r8d
  0x0000000002e548dd: movabs $0x1bc378e0,%rax   ;   {metadata(method data for {method} {0x000000001bb42668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002e548e7: incl   0x178(%rax)        ;*goto
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@37 (line 152)

  0x0000000002e548ed: mov    %r8,%rax
  0x0000000002e548f0: add    $0x40,%rsp
  0x0000000002e548f4: pop    %rbp
  0x0000000002e548f5: test   %eax,-0x28647fb(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e548fb: retq   
  0x0000000002e548fc: mov    %rax,0x8(%rsp)
  0x0000000002e54901: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e54909: callq  0x0000000002e41c20  ; OopMap{rdx=Oop off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@-1 (line 145)
                                                ;   {runtime_call}
  0x0000000002e5490e: jmpq   0x0000000002e5479e
  0x0000000002e54913: mov    %rax,0x8(%rsp)
  0x0000000002e54918: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e54920: callq  0x0000000002e41c20  ; OopMap{off=485}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002e54925: jmpq   0x0000000002e547e2
  0x0000000002e5492a: callq  0x0000000002db0bc0  ; OopMap{rsi=Oop off=495}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002e5492f: callq  0x0000000002db0bc0  ; OopMap{rsi=Oop off=500}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002e54934: mov    %rax,(%rsp)
  0x0000000002e54938: callq  0x0000000002db1280  ; OopMap{rsi=Oop off=509}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002e5493d: nop
  0x0000000002e5493e: nop
  0x0000000002e5493f: mov    0x2a8(%r15),%rax
  0x0000000002e54946: movabs $0x0,%r10
  0x0000000002e54950: mov    %r10,0x2a8(%r15)
  0x0000000002e54957: movabs $0x0,%r10
  0x0000000002e54961: mov    %r10,0x2b0(%r15)
  0x0000000002e54968: add    $0x40,%rsp
  0x0000000002e5496c: pop    %rbp
  0x0000000002e5496d: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e54972: hlt    
  0x0000000002e54973: hlt    
  0x0000000002e54974: hlt    
  0x0000000002e54975: hlt    
  0x0000000002e54976: hlt    
  0x0000000002e54977: hlt    
  0x0000000002e54978: hlt    
  0x0000000002e54979: hlt    
  0x0000000002e5497a: hlt    
  0x0000000002e5497b: hlt    
  0x0000000002e5497c: hlt    
  0x0000000002e5497d: hlt    
  0x0000000002e5497e: hlt    
  0x0000000002e5497f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e54980: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e54985: mov    %rsp,-0x28(%rsp)
  0x0000000002e5498a: sub    $0x80,%rsp
  0x0000000002e54991: mov    %rax,0x78(%rsp)
  0x0000000002e54996: mov    %rcx,0x70(%rsp)
  0x0000000002e5499b: mov    %rdx,0x68(%rsp)
  0x0000000002e549a0: mov    %rbx,0x60(%rsp)
  0x0000000002e549a5: mov    %rbp,0x50(%rsp)
  0x0000000002e549aa: mov    %rsi,0x48(%rsp)
  0x0000000002e549af: mov    %rdi,0x40(%rsp)
  0x0000000002e549b4: mov    %r8,0x38(%rsp)
  0x0000000002e549b9: mov    %r9,0x30(%rsp)
  0x0000000002e549be: mov    %r10,0x28(%rsp)
  0x0000000002e549c3: mov    %r11,0x20(%rsp)
  0x0000000002e549c8: mov    %r12,0x18(%rsp)
  0x0000000002e549cd: mov    %r13,0x10(%rsp)
  0x0000000002e549d2: mov    %r14,0x8(%rsp)
  0x0000000002e549d7: mov    %r15,(%rsp)
  0x0000000002e549db: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e549e5: movabs $0x2e54985,%rdx    ;   {internal_word}
  0x0000000002e549ef: mov    %rsp,%r8
  0x0000000002e549f2: and    $0xfffffffffffffff0,%rsp
  0x0000000002e549f6: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e549fb: hlt    
[Deopt Handler Code]
  0x0000000002e549fc: movabs $0x2e549fc,%r10    ;   {section_word}
  0x0000000002e54a06: push   %r10
  0x0000000002e54a08: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e54a0d: hlt    
  0x0000000002e54a0e: hlt    
  0x0000000002e54a0f: hlt    
<nmethod compile_id='22' compiler='C1' level='3' entry='0x0000000002e54740' size='1488' address='0x0000000002e545d0' relocation_offset='288' insts_offset='368' stub_offset='944' scopes_data_offset='1112' scopes_pcs_offset='1232' dependencies_offset='1456' nul_chk_table_offset='1464' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='746' iicount='746' stamp='0.467'/>
<writer thread='21988'/>
<task_queued compile_id='25' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='256' backedge_count='10' iicount='256' level='3' stamp='0.467' comment='tiered' hot_count='256'/>
<task_queued compile_id='26' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='160' backedge_count='3072' iicount='160' level='3' stamp='0.468' comment='tiered' hot_count='160'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e54bd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000002e54da0: mov    0x8(%rdx),%r10d
  0x0000000002e54da4: shl    $0x3,%r10
  0x0000000002e54da8: cmp    %rax,%r10
  0x0000000002e54dab: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e54db1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e54dbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e54dc0: mov    %eax,-0x6000(%rsp)
  0x0000000002e54dc7: push   %rbp
  0x0000000002e54dc8: sub    $0x50,%rsp
  0x0000000002e54dcc: mov    %r8d,0x28(%rsp)
  0x0000000002e54dd1: mov    %r9,0x30(%rsp)
  0x0000000002e54dd6: movabs $0x1bc3d1a0,%rsi   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e54de0: mov    0xdc(%rsi),%edi
  0x0000000002e54de6: add    $0x8,%edi
  0x0000000002e54de9: mov    %edi,0xdc(%rsi)
  0x0000000002e54def: movabs $0x1ba56a80,%rsi   ;   {metadata({method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e54df9: and    $0x1ff8,%edi
  0x0000000002e54dff: cmp    $0x0,%edi
  0x0000000002e54e02: je     0x0000000002e555e7  ;*aload_0
                                                ; - java.util.HashMap::getNode@0 (line 568)

  0x0000000002e54e08: mov    0x24(%rdx),%edx
  0x0000000002e54e0b: shl    $0x3,%rdx          ;*getfield table
                                                ; - java.util.HashMap::getNode@1 (line 568)

  0x0000000002e54e0f: cmp    $0x0,%rdx
  0x0000000002e54e13: movabs $0x1bc3d1a0,%rsi   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e54e1d: movabs $0x108,%rdi
  0x0000000002e54e27: je     0x0000000002e54e37
  0x0000000002e54e2d: movabs $0x118,%rdi
  0x0000000002e54e37: mov    (%rsi,%rdi,1),%rbx
  0x0000000002e54e3b: lea    0x1(%rbx),%rbx
  0x0000000002e54e3f: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002e54e43: je     0x0000000002e55430  ;*ifnull
                                                ; - java.util.HashMap::getNode@6 (line 568)

  0x0000000002e54e49: mov    0xc(%rdx),%esi     ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 568)
                                                ; implicit exception: dispatches to 0x0000000002e555fe
  0x0000000002e54e4c: cmp    $0x0,%esi
  0x0000000002e54e4f: movabs $0x1bc3d1a0,%rdi   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e54e59: movabs $0x128,%rbx
  0x0000000002e54e63: jle    0x0000000002e54e73
  0x0000000002e54e69: movabs $0x138,%rbx
  0x0000000002e54e73: mov    (%rdi,%rbx,1),%rax
  0x0000000002e54e77: lea    0x1(%rax),%rax
  0x0000000002e54e7b: mov    %rax,(%rdi,%rbx,1)
  0x0000000002e54e7f: jle    0x0000000002e55430  ;*ifle
                                                ; - java.util.HashMap::getNode@14 (line 568)

  0x0000000002e54e85: dec    %esi
  0x0000000002e54e87: and    %r8,%rsi
  0x0000000002e54e8a: movslq %esi,%rdi
  0x0000000002e54e8d: cmp    0xc(%rdx),%esi
  0x0000000002e54e90: jae    0x0000000002e55603
  0x0000000002e54e96: mov    0x10(%rdx,%rdi,4),%esi
  0x0000000002e54e9a: shl    $0x3,%rsi          ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 568)

  0x0000000002e54e9e: cmp    $0x0,%rsi
  0x0000000002e54ea2: movabs $0x1bc3d1a0,%rdx   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e54eac: movabs $0x148,%rdi
  0x0000000002e54eb6: je     0x0000000002e54ec6
  0x0000000002e54ebc: movabs $0x158,%rdi
  0x0000000002e54ec6: mov    (%rdx,%rdi,1),%rbx
  0x0000000002e54eca: lea    0x1(%rbx),%rbx
  0x0000000002e54ece: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002e54ed2: je     0x0000000002e55430  ;*ifnull
                                                ; - java.util.HashMap::getNode@28 (line 568)

  0x0000000002e54ed8: mov    0xc(%rsi),%edx     ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 570)
                                                ; implicit exception: dispatches to 0x0000000002e5560c
  0x0000000002e54edb: cmp    %r8d,%edx
  0x0000000002e54ede: movabs $0x1bc3d1a0,%rdx   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e54ee8: movabs $0x168,%rdi
  0x0000000002e54ef2: jne    0x0000000002e54f02
  0x0000000002e54ef8: movabs $0x178,%rdi
  0x0000000002e54f02: mov    (%rdx,%rdi,1),%rbx
  0x0000000002e54f06: lea    0x1(%rbx),%rbx
  0x0000000002e54f0a: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002e54f0e: jne    0x0000000002e5507a  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@37 (line 570)

  0x0000000002e54f14: mov    0x10(%rsi),%edx
  0x0000000002e54f17: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.HashMap::getNode@42 (line 570)

  0x0000000002e54f1b: cmp    %r9,%rdx
  0x0000000002e54f1e: movabs $0x1bc3d1a0,%rdi   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e54f28: movabs $0x188,%rbx
  0x0000000002e54f32: je     0x0000000002e54f42
  0x0000000002e54f38: movabs $0x198,%rbx
  0x0000000002e54f42: mov    (%rdi,%rbx,1),%rax
  0x0000000002e54f46: lea    0x1(%rax),%rax
  0x0000000002e54f4a: mov    %rax,(%rdi,%rbx,1)
  0x0000000002e54f4e: je     0x0000000002e555d8  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@49 (line 570)

  0x0000000002e54f54: cmp    $0x0,%r9
  0x0000000002e54f58: movabs $0x1bc3d1a0,%rdi   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e54f62: movabs $0x1a8,%rbx
  0x0000000002e54f6c: je     0x0000000002e54f7c
  0x0000000002e54f72: movabs $0x1b8,%rbx
  0x0000000002e54f7c: mov    (%rdi,%rbx,1),%rax
  0x0000000002e54f80: lea    0x1(%rax),%rax
  0x0000000002e54f84: mov    %rax,(%rdi,%rbx,1)
  0x0000000002e54f88: je     0x0000000002e5507a  ;*ifnull
                                                ; - java.util.HashMap::getNode@53 (line 570)

  0x0000000002e54f8e: mov    %rsi,0x20(%rsp)
  0x0000000002e54f93: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000000002e55611
  0x0000000002e54f96: mov    %r9,%rdi
  0x0000000002e54f99: movabs $0x1bc3d1a0,%rbx   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e54fa3: mov    0x8(%rdi),%edi
  0x0000000002e54fa6: shl    $0x3,%rdi
  0x0000000002e54faa: cmp    0x1d0(%rbx),%rdi
  0x0000000002e54fb1: jne    0x0000000002e54fc0
  0x0000000002e54fb3: addq   $0x1,0x1d8(%rbx)
  0x0000000002e54fbb: jmpq   0x0000000002e55026
  0x0000000002e54fc0: cmp    0x1e0(%rbx),%rdi
  0x0000000002e54fc7: jne    0x0000000002e54fd6
  0x0000000002e54fc9: addq   $0x1,0x1e8(%rbx)
  0x0000000002e54fd1: jmpq   0x0000000002e55026
  0x0000000002e54fd6: cmpq   $0x0,0x1d0(%rbx)
  0x0000000002e54fe1: jne    0x0000000002e54ffa
  0x0000000002e54fe3: mov    %rdi,0x1d0(%rbx)
  0x0000000002e54fea: movq   $0x1,0x1d8(%rbx)
  0x0000000002e54ff5: jmpq   0x0000000002e55026
  0x0000000002e54ffa: cmpq   $0x0,0x1e0(%rbx)
  0x0000000002e55005: jne    0x0000000002e5501e
  0x0000000002e55007: mov    %rdi,0x1e0(%rbx)
  0x0000000002e5500e: movq   $0x1,0x1e8(%rbx)
  0x0000000002e55019: jmpq   0x0000000002e55026
  0x0000000002e5501e: addq   $0x1,0x1c8(%rbx)
  0x0000000002e55026: mov    %rdx,%r8
  0x0000000002e55029: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 571)

  0x0000000002e5502c: nop
  0x0000000002e5502d: movabs $0xffffffffffffffff,%rax
  0x0000000002e55037: callq  0x0000000002d863e0  ; OopMap{[32]=Oop [48]=Oop off=668}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 571)
                                                ;   {virtual_call}
  0x0000000002e5503c: cmp    $0x0,%eax
  0x0000000002e5503f: movabs $0x1bc3d1a0,%r8    ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e55049: movabs $0x1f8,%rdx
  0x0000000002e55053: je     0x0000000002e55063
  0x0000000002e55059: movabs $0x208,%rdx
  0x0000000002e55063: mov    (%r8,%rdx,1),%rsi
  0x0000000002e55067: lea    0x1(%rsi),%rsi
  0x0000000002e5506b: mov    %rsi,(%r8,%rdx,1)
  0x0000000002e5506f: mov    0x20(%rsp),%rsi
  0x0000000002e55074: jne    0x0000000002e555d8  ;*ifeq
                                                ; - java.util.HashMap::getNode@62 (line 571)

  0x0000000002e5507a: mov    0x18(%rsi),%r8d
  0x0000000002e5507e: shl    $0x3,%r8           ;*getfield next
                                                ; - java.util.HashMap::getNode@70 (line 573)

  0x0000000002e55082: cmp    $0x0,%r8
  0x0000000002e55086: movabs $0x1bc3d1a0,%rdx   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e55090: movabs $0x218,%rdi
  0x0000000002e5509a: je     0x0000000002e550aa
  0x0000000002e550a0: movabs $0x228,%rdi
  0x0000000002e550aa: mov    (%rdx,%rdi,1),%rbx
  0x0000000002e550ae: lea    0x1(%rbx),%rbx
  0x0000000002e550b2: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002e550b6: je     0x0000000002e55430  ;*ifnull
                                                ; - java.util.HashMap::getNode@76 (line 573)

  0x0000000002e550bc: cmp    $0x0,%rsi
  0x0000000002e550c0: jne    0x0000000002e550db
  0x0000000002e550c2: movabs $0x1bc3d1a0,%rbx   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e550cc: orl    $0x100,0x230(%rbx)
  0x0000000002e550d6: jmpq   0x0000000002e5519b
  0x0000000002e550db: movabs $0x7c0035328,%rax  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x0000000002e550e5: mov    0x8(%rsi),%edi
  0x0000000002e550e8: shl    $0x3,%rdi
  0x0000000002e550ec: cmp    %rdi,%rax
  0x0000000002e550ef: jne    0x0000000002e5517f
  0x0000000002e550f5: movabs $0x1bc3d1a0,%rbx   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e550ff: mov    0x8(%rsi),%eax
  0x0000000002e55102: shl    $0x3,%rax
  0x0000000002e55106: cmp    0x240(%rbx),%rax
  0x0000000002e5510d: jne    0x0000000002e5511c
  0x0000000002e5510f: addq   $0x1,0x248(%rbx)
  0x0000000002e55117: jmpq   0x0000000002e551a0
  0x0000000002e5511c: cmp    0x250(%rbx),%rax
  0x0000000002e55123: jne    0x0000000002e55132
  0x0000000002e55125: addq   $0x1,0x258(%rbx)
  0x0000000002e5512d: jmpq   0x0000000002e551a0
  0x0000000002e55132: cmpq   $0x0,0x240(%rbx)
  0x0000000002e5513d: jne    0x0000000002e55156
  0x0000000002e5513f: mov    %rax,0x240(%rbx)
  0x0000000002e55146: movq   $0x1,0x248(%rbx)
  0x0000000002e55151: jmpq   0x0000000002e551a0
  0x0000000002e55156: cmpq   $0x0,0x250(%rbx)
  0x0000000002e55161: jne    0x0000000002e5517a
  0x0000000002e55163: mov    %rax,0x250(%rbx)
  0x0000000002e5516a: movq   $0x1,0x258(%rbx)
  0x0000000002e55175: jmpq   0x0000000002e551a0
  0x0000000002e5517a: jmpq   0x0000000002e551a0
  0x0000000002e5517f: movabs $0x1bc3d1a0,%rbx   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e55189: subq   $0x1,0x238(%rbx)
  0x0000000002e55191: jmpq   0x0000000002e5519b
  0x0000000002e55196: jmpq   0x0000000002e551a0
  0x0000000002e5519b: xor    %rdx,%rdx
  0x0000000002e5519e: jmp    0x0000000002e551aa
  0x0000000002e551a0: movabs $0x1,%rdx          ;*instanceof
                                                ; - java.util.HashMap::getNode@81 (line 574)

  0x0000000002e551aa: cmp    $0x0,%edx
  0x0000000002e551ad: movabs $0x1bc3d1a0,%rdx   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e551b7: movabs $0x268,%rdi
  0x0000000002e551c1: je     0x0000000002e551d1
  0x0000000002e551c7: movabs $0x278,%rdi
  0x0000000002e551d1: mov    (%rdx,%rdi,1),%rbx
  0x0000000002e551d5: lea    0x1(%rbx),%rbx
  0x0000000002e551d9: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002e551dd: jne    0x0000000002e55446  ;*ifeq
                                                ; - java.util.HashMap::getNode@84 (line 574)

  0x0000000002e551e3: nopl   0x0(%rax,%rax,1)
  0x0000000002e551e8: mov    0x30(%rsp),%r9
  0x0000000002e551ed: mov    0x28(%rsp),%esi
  0x0000000002e551f1: mov    0xc(%r8),%edx      ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 577)
                                                ; implicit exception: dispatches to 0x0000000002e55616
  0x0000000002e551f5: cmp    %esi,%edx
  0x0000000002e551f7: movabs $0x1bc3d1a0,%rdx   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e55201: movabs $0x2e8,%rdi
  0x0000000002e5520b: jne    0x0000000002e5521b
  0x0000000002e55211: movabs $0x2f8,%rdi
  0x0000000002e5521b: mov    (%rdx,%rdi,1),%rbx
  0x0000000002e5521f: lea    0x1(%rbx),%rbx
  0x0000000002e55223: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002e55227: jne    0x0000000002e5539a  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@104 (line 577)

  0x0000000002e5522d: mov    0x10(%r8),%edx
  0x0000000002e55231: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.HashMap::getNode@109 (line 577)

  0x0000000002e55235: cmp    %r9,%rdx
  0x0000000002e55238: movabs $0x1bc3d1a0,%rdi   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e55242: movabs $0x308,%rbx
  0x0000000002e5524c: je     0x0000000002e5525c
  0x0000000002e55252: movabs $0x318,%rbx
  0x0000000002e5525c: mov    (%rdi,%rbx,1),%rax
  0x0000000002e55260: lea    0x1(%rax),%rax
  0x0000000002e55264: mov    %rax,(%rdi,%rbx,1)
  0x0000000002e55268: je     0x0000000002e55421  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@116 (line 577)

  0x0000000002e5526e: cmp    $0x0,%r9
  0x0000000002e55272: movabs $0x1bc3d1a0,%rdi   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e5527c: movabs $0x328,%rbx
  0x0000000002e55286: je     0x0000000002e55296
  0x0000000002e5528c: movabs $0x338,%rbx
  0x0000000002e55296: mov    (%rdi,%rbx,1),%rax
  0x0000000002e5529a: lea    0x1(%rax),%rax
  0x0000000002e5529e: mov    %rax,(%rdi,%rbx,1)
  0x0000000002e552a2: je     0x0000000002e5539a  ;*ifnull
                                                ; - java.util.HashMap::getNode@120 (line 577)

  0x0000000002e552a8: mov    %r8,0x38(%rsp)
  0x0000000002e552ad: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000000002e5561b
  0x0000000002e552b0: mov    %r9,%rdi
  0x0000000002e552b3: movabs $0x1bc3d1a0,%rbx   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e552bd: mov    0x8(%rdi),%edi
  0x0000000002e552c0: shl    $0x3,%rdi
  0x0000000002e552c4: cmp    0x350(%rbx),%rdi
  0x0000000002e552cb: jne    0x0000000002e552da
  0x0000000002e552cd: addq   $0x1,0x358(%rbx)
  0x0000000002e552d5: jmpq   0x0000000002e55340
  0x0000000002e552da: cmp    0x360(%rbx),%rdi
  0x0000000002e552e1: jne    0x0000000002e552f0
  0x0000000002e552e3: addq   $0x1,0x368(%rbx)
  0x0000000002e552eb: jmpq   0x0000000002e55340
  0x0000000002e552f0: cmpq   $0x0,0x350(%rbx)
  0x0000000002e552fb: jne    0x0000000002e55314
  0x0000000002e552fd: mov    %rdi,0x350(%rbx)
  0x0000000002e55304: movq   $0x1,0x358(%rbx)
  0x0000000002e5530f: jmpq   0x0000000002e55340
  0x0000000002e55314: cmpq   $0x0,0x360(%rbx)
  0x0000000002e5531f: jne    0x0000000002e55338
  0x0000000002e55321: mov    %rdi,0x360(%rbx)
  0x0000000002e55328: movq   $0x1,0x368(%rbx)
  0x0000000002e55333: jmpq   0x0000000002e55340
  0x0000000002e55338: addq   $0x1,0x348(%rbx)
  0x0000000002e55340: mov    %rdx,%r8
  0x0000000002e55343: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 578)

  0x0000000002e55346: nop
  0x0000000002e55347: nop
  0x0000000002e55348: nop
  0x0000000002e55349: nop
  0x0000000002e5534a: nop
  0x0000000002e5534b: nop
  0x0000000002e5534c: nop
  0x0000000002e5534d: movabs $0xffffffffffffffff,%rax
  0x0000000002e55357: callq  0x0000000002d863e0  ; OopMap{[48]=Oop [56]=Oop off=1468}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 578)
                                                ;   {virtual_call}
  0x0000000002e5535c: cmp    $0x0,%eax
  0x0000000002e5535f: movabs $0x1bc3d1a0,%rax   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e55369: movabs $0x378,%r8
  0x0000000002e55373: je     0x0000000002e55383
  0x0000000002e55379: movabs $0x388,%r8
  0x0000000002e55383: mov    (%rax,%r8,1),%r9
  0x0000000002e55387: lea    0x1(%r9),%r9
  0x0000000002e5538b: mov    %r9,(%rax,%r8,1)
  0x0000000002e5538f: mov    0x38(%rsp),%r8
  0x0000000002e55394: jne    0x0000000002e55421  ;*ifeq
                                                ; - java.util.HashMap::getNode@129 (line 578)

  0x0000000002e5539a: mov    0x18(%r8),%eax
  0x0000000002e5539e: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.HashMap::getNode@137 (line 580)

  0x0000000002e553a2: movabs $0x1bc3d1a0,%r8    ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e553ac: mov    0xe0(%r8),%r9d
  0x0000000002e553b3: add    $0x8,%r9d
  0x0000000002e553b7: mov    %r9d,0xe0(%r8)
  0x0000000002e553be: movabs $0x1ba56a80,%r8    ;   {metadata({method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e553c8: and    $0xfff8,%r9d
  0x0000000002e553cf: cmp    $0x0,%r9d
  0x0000000002e553d3: je     0x0000000002e55620  ; OopMap{[48]=Oop rax=Oop off=1593}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 580)

  0x0000000002e553d9: test   %eax,-0x28652df(%rip)        # 0x00000000005f0100
                                                ;   {poll}
  0x0000000002e553df: cmp    $0x0,%rax
  0x0000000002e553e3: movabs $0x1bc3d1a0,%r8    ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e553ed: movabs $0x398,%r9
  0x0000000002e553f7: jne    0x0000000002e55407
  0x0000000002e553fd: movabs $0x3a8,%r9
  0x0000000002e55407: mov    (%r8,%r9,1),%rdx
  0x0000000002e5540b: lea    0x1(%rdx),%rdx
  0x0000000002e5540f: mov    %rdx,(%r8,%r9,1)
  0x0000000002e55413: je     0x0000000002e55430  ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 580)

  0x0000000002e55419: mov    %rax,%r8
  0x0000000002e5541c: jmpq   0x0000000002e551e8  ;*aload
                                                ; - java.util.HashMap::getNode@98 (line 577)

  0x0000000002e55421: mov    %r8,%rax
  0x0000000002e55424: add    $0x50,%rsp
  0x0000000002e55428: pop    %rbp
  0x0000000002e55429: test   %eax,-0x286532f(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e5542f: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@134 (line 579)

  0x0000000002e55430: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002e5543a: add    $0x50,%rsp
  0x0000000002e5543e: pop    %rbp
  0x0000000002e5543f: test   %eax,-0x2865345(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e55445: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@147 (line 583)

  0x0000000002e55446: mov    0x30(%rsp),%r9
  0x0000000002e5544b: mov    0x28(%rsp),%r8d
  0x0000000002e55450: cmp    $0x0,%rsi
  0x0000000002e55454: jne    0x0000000002e5546f
  0x0000000002e55456: movabs $0x1bc3d1a0,%rdi   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e55460: orl    $0x100,0x280(%rdi)
  0x0000000002e5546a: jmpq   0x0000000002e5552f
  0x0000000002e5546f: movabs $0x7c0035328,%rbx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x0000000002e55479: mov    0x8(%rsi),%edx
  0x0000000002e5547c: shl    $0x3,%rdx
  0x0000000002e55480: cmp    %rdx,%rbx
  0x0000000002e55483: jne    0x0000000002e55513
  0x0000000002e55489: movabs $0x1bc3d1a0,%rdi   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e55493: mov    0x8(%rsi),%ebx
  0x0000000002e55496: shl    $0x3,%rbx
  0x0000000002e5549a: cmp    0x290(%rdi),%rbx
  0x0000000002e554a1: jne    0x0000000002e554b0
  0x0000000002e554a3: addq   $0x1,0x298(%rdi)
  0x0000000002e554ab: jmpq   0x0000000002e5552f
  0x0000000002e554b0: cmp    0x2a0(%rdi),%rbx
  0x0000000002e554b7: jne    0x0000000002e554c6
  0x0000000002e554b9: addq   $0x1,0x2a8(%rdi)
  0x0000000002e554c1: jmpq   0x0000000002e5552f
  0x0000000002e554c6: cmpq   $0x0,0x290(%rdi)
  0x0000000002e554d1: jne    0x0000000002e554ea
  0x0000000002e554d3: mov    %rbx,0x290(%rdi)
  0x0000000002e554da: movq   $0x1,0x298(%rdi)
  0x0000000002e554e5: jmpq   0x0000000002e5552f
  0x0000000002e554ea: cmpq   $0x0,0x2a0(%rdi)
  0x0000000002e554f5: jne    0x0000000002e5550e
  0x0000000002e554f7: mov    %rbx,0x2a0(%rdi)
  0x0000000002e554fe: movq   $0x1,0x2a8(%rdi)
  0x0000000002e55509: jmpq   0x0000000002e5552f
  0x0000000002e5550e: jmpq   0x0000000002e5552f
  0x0000000002e55513: movabs $0x1bc3d1a0,%rdi   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e5551d: subq   $0x1,0x288(%rdi)
  0x0000000002e55525: jmpq   0x0000000002e55637
  0x0000000002e5552a: jmpq   0x0000000002e5552f
  0x0000000002e5552f: mov    %rsi,%rdx          ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 575)

  0x0000000002e55532: cmp    (%rdx),%rax        ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 575)
                                                ; implicit exception: dispatches to 0x0000000002e55640
  0x0000000002e55535: mov    %rdx,%rsi
  0x0000000002e55538: movabs $0x1bc3d1a0,%rdi   ;   {metadata(method data for {method} {0x000000001ba56a88} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e55542: mov    0x8(%rsi),%esi
  0x0000000002e55545: shl    $0x3,%rsi
  0x0000000002e55549: cmp    0x2c0(%rdi),%rsi
  0x0000000002e55550: jne    0x0000000002e5555f
  0x0000000002e55552: addq   $0x1,0x2c8(%rdi)
  0x0000000002e5555a: jmpq   0x0000000002e555c5
  0x0000000002e5555f: cmp    0x2d0(%rdi),%rsi
  0x0000000002e55566: jne    0x0000000002e55575
  0x0000000002e55568: addq   $0x1,0x2d8(%rdi)
  0x0000000002e55570: jmpq   0x0000000002e555c5
  0x0000000002e55575: cmpq   $0x0,0x2c0(%rdi)
  0x0000000002e55580: jne    0x0000000002e55599
  0x0000000002e55582: mov    %rsi,0x2c0(%rdi)
  0x0000000002e55589: movq   $0x1,0x2c8(%rdi)
  0x0000000002e55594: jmpq   0x0000000002e555c5
  0x0000000002e55599: cmpq   $0x0,0x2d0(%rdi)
  0x0000000002e555a4: jne    0x0000000002e555bd
  0x0000000002e555a6: mov    %rsi,0x2d0(%rdi)
  0x0000000002e555ad: movq   $0x1,0x2d8(%rdi)
  0x0000000002e555b8: jmpq   0x0000000002e555c5
  0x0000000002e555bd: addq   $0x1,0x2b8(%rdi)
  0x0000000002e555c5: nop
  0x0000000002e555c6: nop
  0x0000000002e555c7: callq  0x0000000002d861a0  ; OopMap{off=2092}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 575)
                                                ;   {optimized virtual_call}
  0x0000000002e555cc: add    $0x50,%rsp
  0x0000000002e555d0: pop    %rbp
  0x0000000002e555d1: test   %eax,-0x28654d7(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e555d7: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@97 (line 575)

  0x0000000002e555d8: mov    %rsi,%rax
  0x0000000002e555db: add    $0x50,%rsp
  0x0000000002e555df: pop    %rbp
  0x0000000002e555e0: test   %eax,-0x28654e6(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e555e6: retq   
  0x0000000002e555e7: mov    %rsi,0x8(%rsp)
  0x0000000002e555ec: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e555f4: callq  0x0000000002e41c20  ; OopMap{rdx=Oop r9=Oop [48]=Oop off=2137}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::getNode@-1 (line 568)
                                                ;   {runtime_call}
  0x0000000002e555f9: jmpq   0x0000000002e54e08
  0x0000000002e555fe: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop r9=Oop [48]=Oop off=2147}
                                                ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 568)
                                                ;   {runtime_call}
  0x0000000002e55603: mov    %rsi,(%rsp)
  0x0000000002e55607: callq  0x0000000002db1280  ; OopMap{r9=Oop [48]=Oop rdx=Oop off=2156}
                                                ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 568)
                                                ;   {runtime_call}
  0x0000000002e5560c: callq  0x0000000002db0bc0  ; OopMap{rsi=Oop r9=Oop [48]=Oop off=2161}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 570)
                                                ;   {runtime_call}
  0x0000000002e55611: callq  0x0000000002db0bc0  ; OopMap{r9=Oop [48]=Oop [32]=Oop rdx=Oop off=2166}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 571)
                                                ;   {runtime_call}
  0x0000000002e55616: callq  0x0000000002db0bc0  ; OopMap{r8=Oop r9=Oop [48]=Oop off=2171}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 577)
                                                ;   {runtime_call}
  0x0000000002e5561b: callq  0x0000000002db0bc0  ; OopMap{r9=Oop [48]=Oop [56]=Oop rdx=Oop off=2176}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 578)
                                                ;   {runtime_call}
  0x0000000002e55620: mov    %r8,0x8(%rsp)
  0x0000000002e55625: movq   $0x8f,(%rsp)
  0x0000000002e5562d: callq  0x0000000002e41c20  ; OopMap{[48]=Oop rax=Oop off=2194}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 580)
                                                ;   {runtime_call}
  0x0000000002e55632: jmpq   0x0000000002e553d9
  0x0000000002e55637: mov    %rsi,(%rsp)
  0x0000000002e5563b: callq  0x0000000002e3f740  ; OopMap{r9=Oop [48]=Oop off=2208}
                                                ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 575)
                                                ;   {runtime_call}
  0x0000000002e55640: callq  0x0000000002db0bc0  ; OopMap{r9=Oop [48]=Oop rdx=Oop off=2213}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 575)
                                                ;   {runtime_call}
  0x0000000002e55645: nop
  0x0000000002e55646: nop
  0x0000000002e55647: mov    0x2a8(%r15),%rax
  0x0000000002e5564e: movabs $0x0,%r10
  0x0000000002e55658: mov    %r10,0x2a8(%r15)
  0x0000000002e5565f: movabs $0x0,%r10
  0x0000000002e55669: mov    %r10,0x2b0(%r15)
  0x0000000002e55670: add    $0x50,%rsp
  0x0000000002e55674: pop    %rbp
  0x0000000002e55675: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e5567a: hlt    
  0x0000000002e5567b: hlt    
  0x0000000002e5567c: hlt    
  0x0000000002e5567d: hlt    
  0x0000000002e5567e: hlt    
  0x0000000002e5567f: hlt    
[Stub Code]
  0x0000000002e55680: nop                       ;   {no_reloc}
  0x0000000002e55681: nop
  0x0000000002e55682: nop
  0x0000000002e55683: nop
  0x0000000002e55684: nop
  0x0000000002e55685: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5568f: jmpq   0x0000000002e5568f  ;   {runtime_call}
  0x0000000002e55694: nop
  0x0000000002e55695: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5569f: jmpq   0x0000000002e5569f  ;   {runtime_call}
  0x0000000002e556a4: nop
  0x0000000002e556a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e556af: jmpq   0x0000000002e556af  ;   {runtime_call}
[Exception Handler]
  0x0000000002e556b4: callq  0x0000000002e3f3e0  ;   {runtime_call}
  0x0000000002e556b9: mov    %rsp,-0x28(%rsp)
  0x0000000002e556be: sub    $0x80,%rsp
  0x0000000002e556c5: mov    %rax,0x78(%rsp)
  0x0000000002e556ca: mov    %rcx,0x70(%rsp)
  0x0000000002e556cf: mov    %rdx,0x68(%rsp)
  0x0000000002e556d4: mov    %rbx,0x60(%rsp)
  0x0000000002e556d9: mov    %rbp,0x50(%rsp)
  0x0000000002e556de: mov    %rsi,0x48(%rsp)
  0x0000000002e556e3: mov    %rdi,0x40(%rsp)
  0x0000000002e556e8: mov    %r8,0x38(%rsp)
  0x0000000002e556ed: mov    %r9,0x30(%rsp)
  0x0000000002e556f2: mov    %r10,0x28(%rsp)
  0x0000000002e556f7: mov    %r11,0x20(%rsp)
  0x0000000002e556fc: mov    %r12,0x18(%rsp)
  0x0000000002e55701: mov    %r13,0x10(%rsp)
  0x0000000002e55706: mov    %r14,0x8(%rsp)
  0x0000000002e5570b: mov    %r15,(%rsp)
  0x0000000002e5570f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e55719: movabs $0x2e556b9,%rdx    ;   {internal_word}
  0x0000000002e55723: mov    %rsp,%r8
  0x0000000002e55726: and    $0xfffffffffffffff0,%rsp
  0x0000000002e5572a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5572f: hlt    
[Deopt Handler Code]
  0x0000000002e55730: movabs $0x2e55730,%r10    ;   {section_word}
  0x0000000002e5573a: push   %r10
  0x0000000002e5573c: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e55741: hlt    
  0x0000000002e55742: hlt    
  0x0000000002e55743: hlt    
  0x0000000002e55744: hlt    
  0x0000000002e55745: hlt    
  0x0000000002e55746: hlt    
  0x0000000002e55747: hlt    
<nmethod compile_id='25' compiler='C1' level='3' entry='0x0000000002e54da0' size='4176' address='0x0000000002e54bd0' relocation_offset='288' insts_offset='464' stub_offset='2736' scopes_data_offset='2944' scopes_pcs_offset='3328' dependencies_offset='4112' nul_chk_table_offset='4120' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='256' backedge_count='10' iicount='256' stamp='0.506'/>
Decoding compiled method 0x0000000002e55c50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xa0]  (sp of caller)
  0x0000000002e55e40: mov    0x8(%rdx),%r10d
  0x0000000002e55e44: shl    $0x3,%r10
  0x0000000002e55e48: cmp    %rax,%r10
  0x0000000002e55e4b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e55e51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e55e5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e55e60: mov    %eax,-0x6000(%rsp)
  0x0000000002e55e67: push   %rbp
  0x0000000002e55e68: sub    $0x90,%rsp
  0x0000000002e55e6f: movabs $0x1bc3d6c8,%r9    ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e55e79: mov    0xdc(%r9),%edi
  0x0000000002e55e80: add    $0x8,%edi
  0x0000000002e55e83: mov    %edi,0xdc(%r9)
  0x0000000002e55e8a: movabs $0x1bae99e8,%r9    ;   {metadata({method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e55e94: and    $0x1ff8,%edi
  0x0000000002e55e9a: cmp    $0x0,%edi
  0x0000000002e55e9d: je     0x0000000002e564a6  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@0 (line 82)

  0x0000000002e55ea3: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ; implicit exception: dispatches to 0x0000000002e564bd
  0x0000000002e55ea6: mov    %r8,%r9
  0x0000000002e55ea9: movabs $0x1bc3d6c8,%rdi   ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e55eb3: mov    0x8(%r9),%r9d
  0x0000000002e55eb7: shl    $0x3,%r9
  0x0000000002e55ebb: cmp    0x110(%rdi),%r9
  0x0000000002e55ec2: jne    0x0000000002e55ed1
  0x0000000002e55ec4: addq   $0x1,0x118(%rdi)
  0x0000000002e55ecc: jmpq   0x0000000002e55f37
  0x0000000002e55ed1: cmp    0x120(%rdi),%r9
  0x0000000002e55ed8: jne    0x0000000002e55ee7
  0x0000000002e55eda: addq   $0x1,0x128(%rdi)
  0x0000000002e55ee2: jmpq   0x0000000002e55f37
  0x0000000002e55ee7: cmpq   $0x0,0x110(%rdi)
  0x0000000002e55ef2: jne    0x0000000002e55f0b
  0x0000000002e55ef4: mov    %r9,0x110(%rdi)
  0x0000000002e55efb: movq   $0x1,0x118(%rdi)
  0x0000000002e55f06: jmpq   0x0000000002e55f37
  0x0000000002e55f0b: cmpq   $0x0,0x120(%rdi)
  0x0000000002e55f16: jne    0x0000000002e55f2f
  0x0000000002e55f18: mov    %r9,0x120(%rdi)
  0x0000000002e55f1f: movq   $0x1,0x128(%rdi)
  0x0000000002e55f2a: jmpq   0x0000000002e55f37
  0x0000000002e55f2f: addq   $0x1,0x108(%rdi)
  0x0000000002e55f37: movabs $0x1baa0bd8,%r9    ;   {metadata(method data for {method} {0x000000001b973c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e55f41: mov    0xdc(%r9),%edi
  0x0000000002e55f48: add    $0x8,%edi
  0x0000000002e55f4b: mov    %edi,0xdc(%r9)
  0x0000000002e55f52: movabs $0x1b973c18,%r9    ;   {metadata({method} {0x000000001b973c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e55f5c: and    $0x7ffff8,%edi
  0x0000000002e55f62: cmp    $0x0,%edi
  0x0000000002e55f65: je     0x0000000002e564c2
  0x0000000002e55f6b: mov    0xc(%r8),%r9d
  0x0000000002e55f6f: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x0000000002e55f73: mov    0xc(%r9),%esi      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ; implicit exception: dispatches to 0x0000000002e564d9
  0x0000000002e55f77: movzwl 0xc(%rdx),%edi     ;*getfield slash
                                                ; - java.io.WinNTFileSystem::normalize@6 (line 83)

  0x0000000002e55f7b: movzwl 0xe(%rdx),%ebx     ;*getfield altSlash
                                                ; - java.io.WinNTFileSystem::normalize@11 (line 84)

  0x0000000002e55f7f: mov    $0x0,%ecx
  0x0000000002e55f84: mov    $0x0,%r9d          ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@22 (line 86)

  0x0000000002e55f8a: nopw   0x0(%rax,%rax,1)
  0x0000000002e55f90: cmp    %esi,%ecx
  0x0000000002e55f92: movabs $0x1bc3d6c8,%rax   ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e55f9c: movabs $0x138,%r11
  0x0000000002e55fa6: jge    0x0000000002e55fb6
  0x0000000002e55fac: movabs $0x148,%r11
  0x0000000002e55fb6: mov    (%rax,%r11,1),%r13
  0x0000000002e55fba: lea    0x1(%r13),%r13
  0x0000000002e55fbe: mov    %r13,(%rax,%r11,1)
  0x0000000002e55fc2: jge    0x0000000002e5630f  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x0000000002e55fc8: mov    %r8,%rax
  0x0000000002e55fcb: movabs $0x1bc3d6c8,%r11   ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e55fd5: mov    0x8(%rax),%eax
  0x0000000002e55fd8: shl    $0x3,%rax
  0x0000000002e55fdc: cmp    0x160(%r11),%rax
  0x0000000002e55fe3: jne    0x0000000002e55ff2
  0x0000000002e55fe5: addq   $0x1,0x168(%r11)
  0x0000000002e55fed: jmpq   0x0000000002e56058
  0x0000000002e55ff2: cmp    0x170(%r11),%rax
  0x0000000002e55ff9: jne    0x0000000002e56008
  0x0000000002e55ffb: addq   $0x1,0x178(%r11)
  0x0000000002e56003: jmpq   0x0000000002e56058
  0x0000000002e56008: cmpq   $0x0,0x160(%r11)
  0x0000000002e56013: jne    0x0000000002e5602c
  0x0000000002e56015: mov    %rax,0x160(%r11)
  0x0000000002e5601c: movq   $0x1,0x168(%r11)
  0x0000000002e56027: jmpq   0x0000000002e56058
  0x0000000002e5602c: cmpq   $0x0,0x170(%r11)
  0x0000000002e56037: jne    0x0000000002e56050
  0x0000000002e56039: mov    %rax,0x170(%r11)
  0x0000000002e56040: movq   $0x1,0x178(%r11)
  0x0000000002e5604b: jmpq   0x0000000002e56058
  0x0000000002e56050: addq   $0x1,0x158(%r11)
  0x0000000002e56058: movabs $0x1baa0a60,%rax   ;   {metadata(method data for {method} {0x000000001b973d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e56062: mov    0xdc(%rax),%r11d
  0x0000000002e56069: add    $0x8,%r11d
  0x0000000002e5606d: mov    %r11d,0xdc(%rax)
  0x0000000002e56074: movabs $0x1b973d68,%rax   ;   {metadata({method} {0x000000001b973d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e5607e: and    $0x7ffff8,%r11d
  0x0000000002e56085: cmp    $0x0,%r11d
  0x0000000002e56089: je     0x0000000002e564de
  0x0000000002e5608f: cmp    $0x0,%ecx
  0x0000000002e56092: movabs $0x1baa0a60,%rax   ;   {metadata(method data for {method} {0x000000001b973d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e5609c: movabs $0x108,%r11
  0x0000000002e560a6: jl     0x0000000002e560b6
  0x0000000002e560ac: movabs $0x118,%r11
  0x0000000002e560b6: mov    (%rax,%r11,1),%r13
  0x0000000002e560ba: lea    0x1(%r13),%r13
  0x0000000002e560be: mov    %r13,(%rax,%r11,1)
  0x0000000002e560c2: jl     0x0000000002e56443  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002e560c8: mov    0xc(%r8),%eax
  0x0000000002e560cc: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002e560d0: mov    0xc(%rax),%r11d    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ; implicit exception: dispatches to 0x0000000002e564f5
  0x0000000002e560d4: cmp    %r11d,%ecx
  0x0000000002e560d7: movabs $0x1baa0a60,%r11   ;   {metadata(method data for {method} {0x000000001b973d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e560e1: movabs $0x128,%r13
  0x0000000002e560eb: jl     0x0000000002e560fb
  0x0000000002e560f1: movabs $0x138,%r13
  0x0000000002e560fb: mov    (%r11,%r13,1),%r14
  0x0000000002e560ff: lea    0x1(%r14),%r14
  0x0000000002e56103: mov    %r14,(%r11,%r13,1)
  0x0000000002e56107: jge    0x0000000002e56443  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002e5610d: movslq %ecx,%r11
  0x0000000002e56110: cmp    0xc(%rax),%ecx
  0x0000000002e56113: jae    0x0000000002e564fa
  0x0000000002e56119: movzwl 0x10(%rax,%r11,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002e5611f: and    $0xffff,%eax
  0x0000000002e56125: cmp    %ebx,%eax
  0x0000000002e56127: movabs $0x1bc3d6c8,%r11   ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e56131: movabs $0x188,%r13
  0x0000000002e5613b: jne    0x0000000002e5614b
  0x0000000002e56141: movabs $0x198,%r13
  0x0000000002e5614b: mov    (%r11,%r13,1),%r14
  0x0000000002e5614f: lea    0x1(%r14),%r14
  0x0000000002e56153: mov    %r14,(%r11,%r13,1)
  0x0000000002e56157: je     0x0000000002e562d1  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@40 (line 88)

  0x0000000002e5615d: cmp    %edi,%eax
  0x0000000002e5615f: movabs $0x1bc3d6c8,%r11   ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e56169: movabs $0x1f0,%r13
  0x0000000002e56173: jne    0x0000000002e56183
  0x0000000002e56179: movabs $0x200,%r13
  0x0000000002e56183: mov    (%r11,%r13,1),%r14
  0x0000000002e56187: lea    0x1(%r14),%r14
  0x0000000002e5618b: mov    %r14,(%r11,%r13,1)
  0x0000000002e5618f: jne    0x0000000002e56207  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@68 (line 90)

  0x0000000002e56195: cmp    %edi,%r9d
  0x0000000002e56198: movabs $0x1bc3d6c8,%r9    ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e561a2: movabs $0x210,%r11
  0x0000000002e561ac: jne    0x0000000002e561bc
  0x0000000002e561b2: movabs $0x220,%r11
  0x0000000002e561bc: mov    (%r9,%r11,1),%r13
  0x0000000002e561c0: lea    0x1(%r13),%r13
  0x0000000002e561c4: mov    %r13,(%r9,%r11,1)
  0x0000000002e561c8: jne    0x0000000002e56207  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)

  0x0000000002e561ce: cmp    $0x1,%ecx
  0x0000000002e561d1: movabs $0x1bc3d6c8,%r9    ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e561db: movabs $0x230,%r11
  0x0000000002e561e5: jle    0x0000000002e561f5
  0x0000000002e561eb: movabs $0x240,%r11
  0x0000000002e561f5: mov    (%r9,%r11,1),%r13
  0x0000000002e561f9: lea    0x1(%r13),%r13
  0x0000000002e561fd: mov    %r13,(%r9,%r11,1)
  0x0000000002e56201: jg     0x0000000002e5640b  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@80 (line 90)

  0x0000000002e56207: cmp    $0x3a,%eax
  0x0000000002e5620a: movabs $0x1bc3d6c8,%r9    ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e56214: movabs $0x260,%r11
  0x0000000002e5621e: jne    0x0000000002e5622e
  0x0000000002e56224: movabs $0x270,%r11
  0x0000000002e5622e: mov    (%r9,%r11,1),%r13
  0x0000000002e56232: lea    0x1(%r13),%r13
  0x0000000002e56236: mov    %r13,(%r9,%r11,1)
  0x0000000002e5623a: jne    0x0000000002e56279  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@98 (line 92)

  0x0000000002e56240: cmp    $0x1,%ecx
  0x0000000002e56243: movabs $0x1bc3d6c8,%r9    ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e5624d: movabs $0x280,%r11
  0x0000000002e56257: jle    0x0000000002e56267
  0x0000000002e5625d: movabs $0x290,%r11
  0x0000000002e56267: mov    (%r9,%r11,1),%r13
  0x0000000002e5626b: lea    0x1(%r13),%r13
  0x0000000002e5626f: mov    %r13,(%r9,%r11,1)
  0x0000000002e56273: jg     0x0000000002e563d3  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)

  0x0000000002e56279: inc    %ecx
  0x0000000002e5627b: movabs $0x1bc3d6c8,%r9    ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e56285: mov    0xe0(%r9),%r11d
  0x0000000002e5628c: add    $0x8,%r11d
  0x0000000002e56290: mov    %r11d,0xe0(%r9)
  0x0000000002e56297: movabs $0x1bae99e8,%r9    ;   {metadata({method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e562a1: and    $0xfff8,%r11d
  0x0000000002e562a8: cmp    $0x0,%r11d
  0x0000000002e562ac: je     0x0000000002e56503  ; OopMap{rdx=Oop r8=Oop off=1138}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 86)

  0x0000000002e562b2: test   %eax,-0x28661b8(%rip)        # 0x00000000005f0100
                                                ;   {poll}
  0x0000000002e562b8: movabs $0x1bc3d6c8,%r9    ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e562c2: incl   0x2b0(%r9)
  0x0000000002e562c9: mov    %rax,%r9
  0x0000000002e562cc: jmpq   0x0000000002e55f90  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 86)

  0x0000000002e562d1: cmp    %edi,%r9d
  0x0000000002e562d4: movabs $0x1bc3d6c8,%r9    ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e562de: movabs $0x1a8,%rdi
  0x0000000002e562e8: jne    0x0000000002e562f8
  0x0000000002e562ee: movabs $0x1b8,%rdi
  0x0000000002e562f8: mov    (%r9,%rdi,1),%rbx
  0x0000000002e562fc: lea    0x1(%rbx),%rbx
  0x0000000002e56300: mov    %rbx,(%r9,%rdi,1)
  0x0000000002e56304: jne    0x0000000002e563a0
  0x0000000002e5630a: jmpq   0x0000000002e5638d  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@49 (line 89)

  0x0000000002e5630f: cmp    %edi,%r9d
  0x0000000002e56312: movabs $0x1bc3d6c8,%r9    ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e5631c: movabs $0x2c8,%rdi
  0x0000000002e56326: jne    0x0000000002e56336
  0x0000000002e5632c: movabs $0x2d8,%rdi
  0x0000000002e56336: mov    (%r9,%rdi,1),%rbx
  0x0000000002e5633a: lea    0x1(%rbx),%rbx
  0x0000000002e5633e: mov    %rbx,(%r9,%rdi,1)
  0x0000000002e56342: jne    0x0000000002e5637b  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 96)

  0x0000000002e56348: mov    %rdx,%r9
  0x0000000002e5634b: movabs $0x1bc3d6c8,%rdi   ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e56355: addq   $0x1,0x2e8(%rdi)
  0x0000000002e5635d: mov    %rsi,%rdi
  0x0000000002e56360: dec    %edi
  0x0000000002e56362: mov    %rsi,%r9           ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@137 (line 96)

  0x0000000002e56365: nop
  0x0000000002e56366: nop
  0x0000000002e56367: callq  0x0000000002d861a0  ; OopMap{off=1324}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@137 (line 96)
                                                ;   {optimized virtual_call}
  0x0000000002e5636c: add    $0x90,%rsp
  0x0000000002e56373: pop    %rbp
  0x0000000002e56374: test   %eax,-0x286627a(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e5637a: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@140 (line 96)

  0x0000000002e5637b: mov    %r8,%rax
  0x0000000002e5637e: add    $0x90,%rsp
  0x0000000002e56385: pop    %rbp
  0x0000000002e56386: test   %eax,-0x286628c(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e5638c: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@142 (line 97)

  0x0000000002e5638d: dec    %ecx
  0x0000000002e5638f: movabs $0x1bc3d6c8,%r9    ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e56399: incl   0x1c8(%r9)         ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@56 (line 89)

  0x0000000002e563a0: mov    %rdx,%r9
  0x0000000002e563a3: movabs $0x1bc3d6c8,%rdi   ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e563ad: addq   $0x1,0x1e0(%rdi)
  0x0000000002e563b5: mov    %rsi,%r9
  0x0000000002e563b8: mov    %rcx,%rdi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002e563bb: nop
  0x0000000002e563bc: nop
  0x0000000002e563bd: nop
  0x0000000002e563be: nop
  0x0000000002e563bf: callq  0x0000000002d861a0  ; OopMap{off=1412}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x0000000002e563c4: add    $0x90,%rsp
  0x0000000002e563cb: pop    %rbp
  0x0000000002e563cc: test   %eax,-0x28662d2(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e563d2: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 89)

  0x0000000002e563d3: mov    %rdx,%r9
  0x0000000002e563d6: movabs $0x1bc3d6c8,%rdi   ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e563e0: addq   $0x1,0x2a0(%rdi)
  0x0000000002e563e8: mov    %rsi,%r9
  0x0000000002e563eb: mov    $0x0,%edi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002e563f0: nop
  0x0000000002e563f1: nop
  0x0000000002e563f2: nop
  0x0000000002e563f3: nop
  0x0000000002e563f4: nop
  0x0000000002e563f5: nop
  0x0000000002e563f6: nop
  0x0000000002e563f7: callq  0x0000000002d861a0  ; OopMap{off=1468}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x0000000002e563fc: add    $0x90,%rsp
  0x0000000002e56403: pop    %rbp
  0x0000000002e56404: test   %eax,-0x286630a(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e5640a: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@114 (line 93)

  0x0000000002e5640b: mov    %rdx,%r9
  0x0000000002e5640e: movabs $0x1bc3d6c8,%rdi   ;   {metadata(method data for {method} {0x000000001bae99f0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e56418: addq   $0x1,0x250(%rdi)
  0x0000000002e56420: dec    %ecx
  0x0000000002e56422: mov    %rsi,%r9
  0x0000000002e56425: mov    %rcx,%rdi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 91)

  0x0000000002e56428: nop
  0x0000000002e56429: nop
  0x0000000002e5642a: nop
  0x0000000002e5642b: nop
  0x0000000002e5642c: nop
  0x0000000002e5642d: nop
  0x0000000002e5642e: nop
  0x0000000002e5642f: callq  0x0000000002d861a0  ; OopMap{off=1524}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 91)
                                                ;   {optimized virtual_call}
  0x0000000002e56434: add    $0x90,%rsp
  0x0000000002e5643b: pop    %rbp
  0x0000000002e5643c: test   %eax,-0x2866342(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e56442: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 91)

  0x0000000002e56443: mov    %r9d,0x74(%rsp)
  0x0000000002e56448: mov    %ebx,0x70(%rsp)
  0x0000000002e5644c: mov    %edi,0x6c(%rsp)
  0x0000000002e56450: mov    %esi,0x68(%rsp)
  0x0000000002e56454: mov    %r8,0x58(%rsp)
  0x0000000002e56459: mov    %rdx,0x60(%rsp)
  0x0000000002e5645e: xchg   %ax,%ax
  0x0000000002e56460: jmpq   0x0000000002e56529  ;   {no_reloc}
  0x0000000002e56465: add    %al,(%rax)
  0x0000000002e56467: add    %al,(%rax)
  0x0000000002e56469: add    %ch,%cl
  0x0000000002e5646b: (bad)  
  0x0000000002e5646c: add    %al,(%rax)
  0x0000000002e5646e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002e56471: rorb   -0x43(%rcx)        ;   {metadata(method data for {method} {0x000000001b973d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e56474: (bad)  
  0x0000000002e56475: or     0x1b(%rdx),%ch
  0x0000000002e5647b: add    %cl,-0x7d(%rcx)
  0x0000000002e5647e: test   %ecx,0x1(%rax)
  0x0000000002e56481: add    %al,(%rax)
  0x0000000002e56483: add    %ecx,-0x3f(%rbx,%rcx,4)
  0x0000000002e56487: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002e5648a: mov    %ecx,0x78(%rsp)
  0x0000000002e5648e: mov    %rax,0x50(%rsp)
  0x0000000002e56493: nop
  0x0000000002e56494: nop
  0x0000000002e56495: nop
  0x0000000002e56496: nop
  0x0000000002e56497: callq  0x0000000002d861a0  ; OopMap{[88]=Oop [80]=Oop [96]=Oop off=1628}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {optimized virtual_call}
  0x0000000002e5649c: mov    0x50(%rsp),%rax
  0x0000000002e564a1: jmpq   0x0000000002e5656b
  0x0000000002e564a6: mov    %r9,0x8(%rsp)
  0x0000000002e564ab: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e564b3: callq  0x0000000002e41c20  ; OopMap{rdx=Oop r8=Oop off=1656}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)
                                                ;   {runtime_call}
  0x0000000002e564b8: jmpq   0x0000000002e55ea3
  0x0000000002e564bd: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop r8=Oop off=1666}
                                                ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x0000000002e564c2: mov    %r9,0x8(%rsp)
  0x0000000002e564c7: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e564cf: callq  0x0000000002e41c20  ; OopMap{rdx=Oop r8=Oop off=1684}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x0000000002e564d4: jmpq   0x0000000002e55f6b
  0x0000000002e564d9: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop r8=Oop off=1694}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x0000000002e564de: mov    %rax,0x8(%rsp)
  0x0000000002e564e3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e564eb: callq  0x0000000002e41c20  ; OopMap{rdx=Oop r8=Oop off=1712}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000002e564f0: jmpq   0x0000000002e5608f
  0x0000000002e564f5: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop r8=Oop rax=Oop off=1722}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000002e564fa: mov    %rcx,(%rsp)
  0x0000000002e564fe: callq  0x0000000002db1280  ; OopMap{rdx=Oop r8=Oop rax=Oop off=1731}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000002e56503: mov    %r9,0x8(%rsp)
  0x0000000002e56508: movq   $0x7a,(%rsp)
  0x0000000002e56510: callq  0x0000000002e41c20  ; OopMap{rdx=Oop r8=Oop off=1749}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 86)
                                                ;   {runtime_call}
  0x0000000002e56515: jmpq   0x0000000002e562b2
  0x0000000002e5651a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002e56524: mov    $0xa050f00,%eax
  0x0000000002e56529: callq  0x0000000002e40b60  ; OopMap{[88]=Oop [96]=Oop off=1774}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000002e5652e: jmpq   0x0000000002e56460
  0x0000000002e56533: mov    %rdx,%rdx
  0x0000000002e56536: callq  0x0000000002db06a0  ; OopMap{[88]=Oop [96]=Oop off=1787}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000002e5653b: jmpq   0x0000000002e5646f
  0x0000000002e56540: nop
  0x0000000002e56541: nop
  0x0000000002e56542: mov    0x2a8(%r15),%rax
  0x0000000002e56549: movabs $0x0,%r10
  0x0000000002e56553: mov    %r10,0x2a8(%r15)
  0x0000000002e5655a: movabs $0x0,%r10
  0x0000000002e56564: mov    %r10,0x2b0(%r15)
  0x0000000002e5656b: add    $0x90,%rsp
  0x0000000002e56572: pop    %rbp
  0x0000000002e56573: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e56578: hlt    
  0x0000000002e56579: hlt    
  0x0000000002e5657a: hlt    
  0x0000000002e5657b: hlt    
  0x0000000002e5657c: hlt    
  0x0000000002e5657d: hlt    
  0x0000000002e5657e: hlt    
  0x0000000002e5657f: hlt    
[Stub Code]
  0x0000000002e56580: nop                       ;   {no_reloc}
  0x0000000002e56581: nop
  0x0000000002e56582: nop
  0x0000000002e56583: nop
  0x0000000002e56584: nop
  0x0000000002e56585: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5658f: jmpq   0x0000000002e5658f  ;   {runtime_call}
  0x0000000002e56594: nop
  0x0000000002e56595: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5659f: jmpq   0x0000000002e5659f  ;   {runtime_call}
  0x0000000002e565a4: nop
  0x0000000002e565a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e565af: jmpq   0x0000000002e565af  ;   {runtime_call}
  0x0000000002e565b4: nop
  0x0000000002e565b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e565bf: jmpq   0x0000000002e565bf  ;   {runtime_call}
  0x0000000002e565c4: nop
  0x0000000002e565c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e565cf: jmpq   0x0000000002e565cf  ;   {runtime_call}
[Exception Handler]
  0x0000000002e565d4: callq  0x0000000002e3f3e0  ;   {runtime_call}
  0x0000000002e565d9: mov    %rsp,-0x28(%rsp)
  0x0000000002e565de: sub    $0x80,%rsp
  0x0000000002e565e5: mov    %rax,0x78(%rsp)
  0x0000000002e565ea: mov    %rcx,0x70(%rsp)
  0x0000000002e565ef: mov    %rdx,0x68(%rsp)
  0x0000000002e565f4: mov    %rbx,0x60(%rsp)
  0x0000000002e565f9: mov    %rbp,0x50(%rsp)
  0x0000000002e565fe: mov    %rsi,0x48(%rsp)
  0x0000000002e56603: mov    %rdi,0x40(%rsp)
  0x0000000002e56608: mov    %r8,0x38(%rsp)
  0x0000000002e5660d: mov    %r9,0x30(%rsp)
  0x0000000002e56612: mov    %r10,0x28(%rsp)
  0x0000000002e56617: mov    %r11,0x20(%rsp)
  0x0000000002e5661c: mov    %r12,0x18(%rsp)
  0x0000000002e56621: mov    %r13,0x10(%rsp)
  0x0000000002e56626: mov    %r14,0x8(%rsp)
  0x0000000002e5662b: mov    %r15,(%rsp)
  0x0000000002e5662f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e56639: movabs $0x2e565d9,%rdx    ;   {internal_word}
  0x0000000002e56643: mov    %rsp,%r8
  0x0000000002e56646: and    $0xfffffffffffffff0,%rsp
  0x0000000002e5664a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5664f: hlt    
[Deopt Handler Code]
  0x0000000002e56650: movabs $0x2e56650,%r10    ;   {section_word}
  0x0000000002e5665a: push   %r10
  0x0000000002e5665c: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e56661: hlt    
  0x0000000002e56662: hlt    
  0x0000000002e56663: hlt    
  0x0000000002e56664: hlt    
  0x0000000002e56665: hlt    
  0x0000000002e56666: hlt    
  0x0000000002e56667: hlt    
<nmethod compile_id='26' compiler='C1' level='3' entry='0x0000000002e55e40' size='3984' address='0x0000000002e55c50' relocation_offset='288' insts_offset='496' stub_offset='2352' scopes_data_offset='2616' scopes_pcs_offset='3112' dependencies_offset='3944' nul_chk_table_offset='3952' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='161' backedge_count='3125' iicount='161' stamp='0.571'/>
Decoding compiled method 0x0000000002e56c10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001ba560d8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002e56d80: mov    %eax,-0x6000(%rsp)
  0x0000000002e56d87: push   %rbp
  0x0000000002e56d88: sub    $0x30,%rsp
  0x0000000002e56d8c: movabs $0x1bc3e5a8,%rsi   ;   {metadata(method data for {method} {0x000000001ba560d8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e56d96: mov    0xdc(%rsi),%edi
  0x0000000002e56d9c: add    $0x8,%edi
  0x0000000002e56d9f: mov    %edi,0xdc(%rsi)
  0x0000000002e56da5: movabs $0x1ba560d0,%rsi   ;   {metadata({method} {0x000000001ba560d8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e56daf: and    $0x1ff8,%edi
  0x0000000002e56db5: cmp    $0x0,%edi
  0x0000000002e56db8: je     0x0000000002e56ecc  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 338)

  0x0000000002e56dbe: cmp    $0x0,%rdx
  0x0000000002e56dc2: movabs $0x1bc3e5a8,%rsi   ;   {metadata(method data for {method} {0x000000001ba560d8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e56dcc: movabs $0x108,%rdi
  0x0000000002e56dd6: jne    0x0000000002e56de6
  0x0000000002e56ddc: movabs $0x118,%rdi
  0x0000000002e56de6: mov    (%rsi,%rdi,1),%rbx
  0x0000000002e56dea: lea    0x1(%rbx),%rbx
  0x0000000002e56dee: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002e56df2: jne    0x0000000002e56e12  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)

  0x0000000002e56df8: movabs $0x1bc3e5a8,%rdx   ;   {metadata(method data for {method} {0x000000001ba560d8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e56e02: incl   0x128(%rdx)
  0x0000000002e56e08: mov    $0x0,%esi
  0x0000000002e56e0d: jmpq   0x0000000002e56ebd  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)

  0x0000000002e56e12: cmp    (%rdx),%rax        ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; implicit exception: dispatches to 0x0000000002e56ee3
  0x0000000002e56e15: mov    %rdx,%rsi
  0x0000000002e56e18: movabs $0x1bc3e5a8,%rdi   ;   {metadata(method data for {method} {0x000000001ba560d8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002e56e22: mov    0x8(%rsi),%esi
  0x0000000002e56e25: shl    $0x3,%rsi
  0x0000000002e56e29: cmp    0x148(%rdi),%rsi
  0x0000000002e56e30: jne    0x0000000002e56e3f
  0x0000000002e56e32: addq   $0x1,0x150(%rdi)
  0x0000000002e56e3a: jmpq   0x0000000002e56ea5
  0x0000000002e56e3f: cmp    0x158(%rdi),%rsi
  0x0000000002e56e46: jne    0x0000000002e56e55
  0x0000000002e56e48: addq   $0x1,0x160(%rdi)
  0x0000000002e56e50: jmpq   0x0000000002e56ea5
  0x0000000002e56e55: cmpq   $0x0,0x148(%rdi)
  0x0000000002e56e60: jne    0x0000000002e56e79
  0x0000000002e56e62: mov    %rsi,0x148(%rdi)
  0x0000000002e56e69: movq   $0x1,0x150(%rdi)
  0x0000000002e56e74: jmpq   0x0000000002e56ea5
  0x0000000002e56e79: cmpq   $0x0,0x158(%rdi)
  0x0000000002e56e84: jne    0x0000000002e56e9d
  0x0000000002e56e86: mov    %rsi,0x158(%rdi)
  0x0000000002e56e8d: movq   $0x1,0x160(%rdi)
  0x0000000002e56e98: jmpq   0x0000000002e56ea5
  0x0000000002e56e9d: addq   $0x1,0x140(%rdi)
  0x0000000002e56ea5: movabs $0xffffffffffffffff,%rax
  0x0000000002e56eaf: callq  0x0000000002d863e0  ; OopMap{off=308}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {virtual_call}
  0x0000000002e56eb4: mov    %rax,%rsi
  0x0000000002e56eb7: shr    $0x10,%esi
  0x0000000002e56eba: xor    %rax,%rsi
  0x0000000002e56ebd: mov    %rsi,%rax
  0x0000000002e56ec0: add    $0x30,%rsp
  0x0000000002e56ec4: pop    %rbp
  0x0000000002e56ec5: test   %eax,-0x2866dcb(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e56ecb: retq   
  0x0000000002e56ecc: mov    %rsi,0x8(%rsp)
  0x0000000002e56ed1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e56ed9: callq  0x0000000002e41c20  ; OopMap{rdx=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ;   {runtime_call}
  0x0000000002e56ede: jmpq   0x0000000002e56dbe
  0x0000000002e56ee3: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop off=360}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {runtime_call}
  0x0000000002e56ee8: nop
  0x0000000002e56ee9: nop
  0x0000000002e56eea: mov    0x2a8(%r15),%rax
  0x0000000002e56ef1: movabs $0x0,%r10
  0x0000000002e56efb: mov    %r10,0x2a8(%r15)
  0x0000000002e56f02: movabs $0x0,%r10
  0x0000000002e56f0c: mov    %r10,0x2b0(%r15)
  0x0000000002e56f13: add    $0x30,%rsp
  0x0000000002e56f17: pop    %rbp
  0x0000000002e56f18: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e56f1d: hlt    
  0x0000000002e56f1e: hlt    
  0x0000000002e56f1f: hlt    
[Stub Code]
  0x0000000002e56f20: nop                       ;   {no_reloc}
  0x0000000002e56f21: nop
  0x0000000002e56f22: nop
  0x0000000002e56f23: nop
  0x0000000002e56f24: nop
  0x0000000002e56f25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e56f2f: jmpq   0x0000000002e56f2f  ;   {runtime_call}
[Exception Handler]
  0x0000000002e56f34: callq  0x0000000002e3f3e0  ;   {runtime_call}
  0x0000000002e56f39: mov    %rsp,-0x28(%rsp)
  0x0000000002e56f3e: sub    $0x80,%rsp
  0x0000000002e56f45: mov    %rax,0x78(%rsp)
  0x0000000002e56f4a: mov    %rcx,0x70(%rsp)
  0x0000000002e56f4f: mov    %rdx,0x68(%rsp)
  0x0000000002e56f54: mov    %rbx,0x60(%rsp)
  0x0000000002e56f59: mov    %rbp,0x50(%rsp)
  0x0000000002e56f5e: mov    %rsi,0x48(%rsp)
  0x0000000002e56f63: mov    %rdi,0x40(%rsp)
  0x0000000002e56f68: mov    %r8,0x38(%rsp)
  0x0000000002e56f6d: mov    %r9,0x30(%rsp)
  0x0000000002e56f72: mov    %r10,0x28(%rsp)
  0x0000000002e56f77: mov    %r11,0x20(%rsp)
  0x0000000002e56f7c: mov    %r12,0x18(%rsp)
  0x0000000002e56f81: mov    %r13,0x10(%rsp)
  0x0000000002e56f86: mov    %r14,0x8(%rsp)
  0x0000000002e56f8b: mov    %r15,(%rsp)
  0x0000000002e56f8f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e56f99: movabs $0x2e56f39,%rdx    ;   {internal_word}
  0x0000000002e56fa3: mov    %rsp,%r8
  0x0000000002e56fa6: and    $0xfffffffffffffff0,%rsp
  0x0000000002e56faa: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e56faf: hlt    
[Deopt Handler Code]
  0x0000000002e56fb0: movabs $0x2e56fb0,%r10    ;   {section_word}
  0x0000000002e56fba: push   %r10
  0x0000000002e56fbc: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e56fc1: hlt    
  0x0000000002e56fc2: hlt    
  0x0000000002e56fc3: hlt    
  0x0000000002e56fc4: hlt    
  0x0000000002e56fc5: hlt    
  0x0000000002e56fc6: hlt    
  0x0000000002e56fc7: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x0000000002e56d80' size='1176' address='0x0000000002e56c10' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='960' scopes_pcs_offset='1008' dependencies_offset='1152' nul_chk_table_offset='1160' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='449' iicount='449' stamp='0.578'/>
<writer thread='21988'/>
<task_queued compile_id='27' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='640' backedge_count='1068' iicount='640' level='3' stamp='0.578' comment='tiered' hot_count='640'/>
<task_queued compile_id='28' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='640' iicount='640' level='3' stamp='0.578' comment='tiered' hot_count='640'/>
<task_queued compile_id='29' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='768' iicount='768' level='3' stamp='0.578' comment='tiered' hot_count='768'/>
<task_queued compile_id='30' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='512' iicount='512' level='3' stamp='0.578' comment='tiered' hot_count='512'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e574d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b974db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002e57640: mov    0x8(%rdx),%r10d
  0x0000000002e57644: shl    $0x3,%r10
  0x0000000002e57648: cmp    %rax,%r10
  0x0000000002e5764b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e57651: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e5765c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e57660: mov    %eax,-0x6000(%rsp)
  0x0000000002e57667: push   %rbp
  0x0000000002e57668: sub    $0x30,%rsp
  0x0000000002e5766c: movabs $0x1bbcc8c0,%rax   ;   {metadata(method data for {method} {0x000000001b974db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e57676: mov    0xdc(%rax),%esi
  0x0000000002e5767c: add    $0x8,%esi
  0x0000000002e5767f: mov    %esi,0xdc(%rax)
  0x0000000002e57685: movabs $0x1b974da8,%rax   ;   {metadata({method} {0x000000001b974db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e5768f: and    $0x1ff8,%esi
  0x0000000002e57695: cmp    $0x0,%esi
  0x0000000002e57698: je     0x0000000002e57855  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x0000000002e5769e: mov    0xc(%rdx),%eax
  0x0000000002e576a1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x0000000002e576a5: mov    0xc(%r8),%esi      ; implicit exception: dispatches to 0x0000000002e5786c
  0x0000000002e576a9: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x0000000002e576ad: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x0000000002e57871
  0x0000000002e576b0: cmp    $0x0,%r9d
  0x0000000002e576b4: movabs $0x1bbcc8c0,%rbx   ;   {metadata(method data for {method} {0x000000001b974db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e576be: movabs $0x108,%rdx
  0x0000000002e576c8: jl     0x0000000002e576d8
  0x0000000002e576ce: movabs $0x118,%rdx
  0x0000000002e576d8: mov    (%rbx,%rdx,1),%rcx
  0x0000000002e576dc: lea    0x1(%rcx),%rcx
  0x0000000002e576e0: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002e576e4: jl     0x0000000002e57822  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x0000000002e576ea: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x0000000002e57876
  0x0000000002e576ed: sub    %edi,%ebx
  0x0000000002e576ef: cmp    %ebx,%r9d
  0x0000000002e576f2: movabs $0x1bbcc8c0,%rbx   ;   {metadata(method data for {method} {0x000000001b974db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e576fc: movabs $0x128,%rdx
  0x0000000002e57706: jle    0x0000000002e57716
  0x0000000002e5770c: movabs $0x138,%rdx
  0x0000000002e57716: mov    (%rbx,%rdx,1),%rcx
  0x0000000002e5771a: lea    0x1(%rcx),%rcx
  0x0000000002e5771e: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002e57722: jg     0x0000000002e57822  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x0000000002e57728: mov    $0x0,%ebx
  0x0000000002e5772d: jmpq   0x0000000002e577e2  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002e57732: nopw   0x0(%rax,%rax,1)
  0x0000000002e57738: mov    %r9,%rdx
  0x0000000002e5773b: inc    %edx
  0x0000000002e5773d: movslq %r9d,%rcx
  0x0000000002e57740: cmp    0xc(%rax),%r9d
  0x0000000002e57744: jae    0x0000000002e5787b
  0x0000000002e5774a: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x0000000002e5774f: mov    %rbx,%r8
  0x0000000002e57752: inc    %r8d
  0x0000000002e57755: movslq %ebx,%r9
  0x0000000002e57758: cmp    0xc(%rsi),%ebx
  0x0000000002e5775b: jae    0x0000000002e57884
  0x0000000002e57761: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x0000000002e57767: movabs $0x1bbcc8c0,%r9    ;   {metadata(method data for {method} {0x000000001b974db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e57771: mov    0xe0(%r9),%r11d
  0x0000000002e57778: add    $0x8,%r11d
  0x0000000002e5777c: mov    %r11d,0xe0(%r9)
  0x0000000002e57783: movabs $0x1b974da8,%r9    ;   {metadata({method} {0x000000001b974db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e5778d: and    $0xfff8,%r11d
  0x0000000002e57794: cmp    $0x0,%r11d
  0x0000000002e57798: je     0x0000000002e5788d  ; OopMap{rsi=Oop rax=Oop off=350}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002e5779e: test   %eax,-0x28676a4(%rip)        # 0x00000000005f0100
                                                ;   {poll}
  0x0000000002e577a4: cmp    %ebx,%ecx
  0x0000000002e577a6: movabs $0x1bbcc8c0,%rbx   ;   {metadata(method data for {method} {0x000000001b974db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e577b0: movabs $0x168,%rcx
  0x0000000002e577ba: je     0x0000000002e577ca
  0x0000000002e577c0: movabs $0x178,%rcx
  0x0000000002e577ca: mov    (%rbx,%rcx,1),%r9
  0x0000000002e577ce: lea    0x1(%r9),%r9
  0x0000000002e577d2: mov    %r9,(%rbx,%rcx,1)
  0x0000000002e577d6: jne    0x0000000002e57833  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002e577dc: mov    %r8,%rbx
  0x0000000002e577df: mov    %rdx,%r9           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002e577e2: dec    %edi
  0x0000000002e577e4: cmp    $0x0,%edi
  0x0000000002e577e7: movabs $0x1bbcc8c0,%rdx   ;   {metadata(method data for {method} {0x000000001b974db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e577f1: movabs $0x148,%rcx
  0x0000000002e577fb: jl     0x0000000002e5780b
  0x0000000002e57801: movabs $0x158,%rcx
  0x0000000002e5780b: mov    (%rdx,%rcx,1),%r8
  0x0000000002e5780f: lea    0x1(%r8),%r8
  0x0000000002e57813: mov    %r8,(%rdx,%rcx,1)
  0x0000000002e57817: jl     0x0000000002e57844
  0x0000000002e5781d: jmpq   0x0000000002e57738  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x0000000002e57822: mov    $0x0,%eax
  0x0000000002e57827: add    $0x30,%rsp
  0x0000000002e5782b: pop    %rbp
  0x0000000002e5782c: test   %eax,-0x2867732(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e57832: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x0000000002e57833: mov    $0x0,%eax
  0x0000000002e57838: add    $0x30,%rsp
  0x0000000002e5783c: pop    %rbp
  0x0000000002e5783d: test   %eax,-0x2867743(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e57843: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x0000000002e57844: mov    $0x1,%eax
  0x0000000002e57849: add    $0x30,%rsp
  0x0000000002e5784d: pop    %rbp
  0x0000000002e5784e: test   %eax,-0x2867754(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e57854: retq   
  0x0000000002e57855: mov    %rax,0x8(%rsp)
  0x0000000002e5785a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e57862: callq  0x0000000002e41c20  ; OopMap{rdx=Oop r8=Oop off=551}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x0000000002e57867: jmpq   0x0000000002e5769e
  0x0000000002e5786c: callq  0x0000000002db0bc0  ; OopMap{rax=Oop off=561}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x0000000002e57871: callq  0x0000000002db0bc0  ; OopMap{rax=Oop rsi=Oop off=566}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x0000000002e57876: callq  0x0000000002db0bc0  ; OopMap{rsi=Oop rax=Oop off=571}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x0000000002e5787b: mov    %r9,(%rsp)
  0x0000000002e5787f: callq  0x0000000002db1280  ; OopMap{rsi=Oop rax=Oop off=580}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x0000000002e57884: mov    %rbx,(%rsp)
  0x0000000002e57888: callq  0x0000000002db1280  ; OopMap{rsi=Oop rax=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x0000000002e5788d: mov    %r9,0x8(%rsp)
  0x0000000002e57892: movq   $0x41,(%rsp)
  0x0000000002e5789a: callq  0x0000000002e41c20  ; OopMap{rsi=Oop rax=Oop off=607}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x0000000002e5789f: jmpq   0x0000000002e5779e
  0x0000000002e578a4: nop
  0x0000000002e578a5: nop
  0x0000000002e578a6: mov    0x2a8(%r15),%rax
  0x0000000002e578ad: movabs $0x0,%r10
  0x0000000002e578b7: mov    %r10,0x2a8(%r15)
  0x0000000002e578be: movabs $0x0,%r10
  0x0000000002e578c8: mov    %r10,0x2b0(%r15)
  0x0000000002e578cf: add    $0x30,%rsp
  0x0000000002e578d3: pop    %rbp
  0x0000000002e578d4: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e578d9: hlt    
  0x0000000002e578da: hlt    
  0x0000000002e578db: hlt    
  0x0000000002e578dc: hlt    
  0x0000000002e578dd: hlt    
  0x0000000002e578de: hlt    
  0x0000000002e578df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e578e0: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e578e5: mov    %rsp,-0x28(%rsp)
  0x0000000002e578ea: sub    $0x80,%rsp
  0x0000000002e578f1: mov    %rax,0x78(%rsp)
  0x0000000002e578f6: mov    %rcx,0x70(%rsp)
  0x0000000002e578fb: mov    %rdx,0x68(%rsp)
  0x0000000002e57900: mov    %rbx,0x60(%rsp)
  0x0000000002e57905: mov    %rbp,0x50(%rsp)
  0x0000000002e5790a: mov    %rsi,0x48(%rsp)
  0x0000000002e5790f: mov    %rdi,0x40(%rsp)
  0x0000000002e57914: mov    %r8,0x38(%rsp)
  0x0000000002e57919: mov    %r9,0x30(%rsp)
  0x0000000002e5791e: mov    %r10,0x28(%rsp)
  0x0000000002e57923: mov    %r11,0x20(%rsp)
  0x0000000002e57928: mov    %r12,0x18(%rsp)
  0x0000000002e5792d: mov    %r13,0x10(%rsp)
  0x0000000002e57932: mov    %r14,0x8(%rsp)
  0x0000000002e57937: mov    %r15,(%rsp)
  0x0000000002e5793b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e57945: movabs $0x2e578e5,%rdx    ;   {internal_word}
  0x0000000002e5794f: mov    %rsp,%r8
  0x0000000002e57952: and    $0xfffffffffffffff0,%rsp
  0x0000000002e57956: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5795b: hlt    
[Deopt Handler Code]
  0x0000000002e5795c: movabs $0x2e5795c,%r10    ;   {section_word}
  0x0000000002e57966: push   %r10
  0x0000000002e57968: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e5796d: hlt    
  0x0000000002e5796e: hlt    
  0x0000000002e5796f: hlt    
<nmethod compile_id='27' compiler='C1' level='3' entry='0x0000000002e57640' size='1824' address='0x0000000002e574d0' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='747' backedge_count='1147' iicount='747' stamp='0.590'/>
<writer thread='21988'/>
<task_queued compile_id='31' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3712' iicount='3712' level='3' stamp='0.590' comment='tiered' hot_count='3712'/>
<task_queued compile_id='32' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='7168' iicount='7168' stamp='0.590' comment='tiered' hot_count='7168'/>
<task_queued compile_id='33' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='6400' iicount='6400' stamp='0.590' comment='tiered' hot_count='6400'/>
<task_queued compile_id='34' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='4224' iicount='4224' level='3' stamp='0.590' comment='tiered' hot_count='4224'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e58390:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b9e4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x80]  (sp of caller)
  0x0000000002e58520: mov    0x8(%rdx),%r10d
  0x0000000002e58524: shl    $0x3,%r10
  0x0000000002e58528: cmp    %rax,%r10
  0x0000000002e5852b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e58531: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e5853c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e58540: mov    %eax,-0x6000(%rsp)
  0x0000000002e58547: push   %rbp
  0x0000000002e58548: sub    $0x70,%rsp
  0x0000000002e5854c: mov    %rdx,0x48(%rsp)
  0x0000000002e58551: movabs $0x1bb96a08,%rsi   ;   {metadata(method data for {method} {0x000000001b9e4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e5855b: mov    0xdc(%rsi),%edi
  0x0000000002e58561: add    $0x8,%edi
  0x0000000002e58564: mov    %edi,0xdc(%rsi)
  0x0000000002e5856a: movabs $0x1b9e4328,%rsi   ;   {metadata({method} {0x000000001b9e4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e58574: and    $0x1ff8,%edi
  0x0000000002e5857a: cmp    $0x0,%edi
  0x0000000002e5857d: je     0x0000000002e588d0  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 418)

  0x0000000002e58583: cmp    $0x0,%r8
  0x0000000002e58587: movabs $0x1bb96a08,%rsi   ;   {metadata(method data for {method} {0x000000001b9e4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e58591: movabs $0x108,%rdi
  0x0000000002e5859b: jne    0x0000000002e585ab
  0x0000000002e585a1: movabs $0x118,%rdi
  0x0000000002e585ab: mov    (%rsi,%rdi,1),%rbx
  0x0000000002e585af: lea    0x1(%rbx),%rbx
  0x0000000002e585b3: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002e585b7: je     0x0000000002e588aa  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 418)

  0x0000000002e585bd: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ; implicit exception: dispatches to 0x0000000002e588e7
  0x0000000002e585c0: mov    %r8,%rsi
  0x0000000002e585c3: movabs $0x1bb96a08,%rdi   ;   {metadata(method data for {method} {0x000000001b9e4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e585cd: mov    0x8(%rsi),%esi
  0x0000000002e585d0: shl    $0x3,%rsi
  0x0000000002e585d4: cmp    0x140(%rdi),%rsi
  0x0000000002e585db: jne    0x0000000002e585ea
  0x0000000002e585dd: addq   $0x1,0x148(%rdi)
  0x0000000002e585e5: jmpq   0x0000000002e58650
  0x0000000002e585ea: cmp    0x150(%rdi),%rsi
  0x0000000002e585f1: jne    0x0000000002e58600
  0x0000000002e585f3: addq   $0x1,0x158(%rdi)
  0x0000000002e585fb: jmpq   0x0000000002e58650
  0x0000000002e58600: cmpq   $0x0,0x140(%rdi)
  0x0000000002e5860b: jne    0x0000000002e58624
  0x0000000002e5860d: mov    %rsi,0x140(%rdi)
  0x0000000002e58614: movq   $0x1,0x148(%rdi)
  0x0000000002e5861f: jmpq   0x0000000002e58650
  0x0000000002e58624: cmpq   $0x0,0x150(%rdi)
  0x0000000002e5862f: jne    0x0000000002e58648
  0x0000000002e58631: mov    %rsi,0x150(%rdi)
  0x0000000002e58638: movq   $0x1,0x158(%rdi)
  0x0000000002e58643: jmpq   0x0000000002e58650
  0x0000000002e58648: addq   $0x1,0x138(%rdi)
  0x0000000002e58650: movabs $0x1baa0bd8,%rsi   ;   {metadata(method data for {method} {0x000000001b973c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e5865a: mov    0xdc(%rsi),%edi
  0x0000000002e58660: add    $0x8,%edi
  0x0000000002e58663: mov    %edi,0xdc(%rsi)
  0x0000000002e58669: movabs $0x1b973c18,%rsi   ;   {metadata({method} {0x000000001b973c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e58673: and    $0x7ffff8,%edi
  0x0000000002e58679: cmp    $0x0,%edi
  0x0000000002e5867c: je     0x0000000002e588ec
  0x0000000002e58682: mov    0xc(%r8),%esi
  0x0000000002e58686: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)

  0x0000000002e5868a: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ; implicit exception: dispatches to 0x0000000002e58903
  0x0000000002e5868d: mov    %esi,0x58(%rsp)
  0x0000000002e58691: mov    0xc(%rdx),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 421)

  0x0000000002e58694: add    %esi,%edi
  0x0000000002e58696: mov    %rdx,%rbx
  0x0000000002e58699: movabs $0x1bb96a08,%rax   ;   {metadata(method data for {method} {0x000000001b9e4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e586a3: addq   $0x1,0x168(%rax)
  0x0000000002e586ab: movabs $0x1bb6ef10,%rbx   ;   {metadata(method data for {method} {0x000000001b9e3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e586b5: mov    0xdc(%rbx),%eax
  0x0000000002e586bb: add    $0x8,%eax
  0x0000000002e586be: mov    %eax,0xdc(%rbx)
  0x0000000002e586c4: movabs $0x1b9e3a78,%rbx   ;   {metadata({method} {0x000000001b9e3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e586ce: and    $0x7ffff8,%eax
  0x0000000002e586d4: cmp    $0x0,%eax
  0x0000000002e586d7: je     0x0000000002e58908
  0x0000000002e586dd: mov    0x10(%rdx),%ebx
  0x0000000002e586e0: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)

  0x0000000002e586e4: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ; implicit exception: dispatches to 0x0000000002e5891f
  0x0000000002e586e7: mov    %rdi,%rax
  0x0000000002e586ea: sub    %ebx,%eax
  0x0000000002e586ec: cmp    $0x0,%eax
  0x0000000002e586ef: movabs $0x1bb6ef10,%rbx   ;   {metadata(method data for {method} {0x000000001b9e3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e586f9: movabs $0x108,%rax
  0x0000000002e58703: jle    0x0000000002e58713
  0x0000000002e58709: movabs $0x118,%rax
  0x0000000002e58713: mov    (%rbx,%rax,1),%rcx
  0x0000000002e58717: lea    0x1(%rcx),%rcx
  0x0000000002e5871b: mov    %rcx,(%rbx,%rax,1)
  0x0000000002e5871f: mov    %r8,0x50(%rsp)
  0x0000000002e58724: jle    0x0000000002e587cc  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)

  0x0000000002e5872a: mov    %rdx,%rbx
  0x0000000002e5872d: movabs $0x1bb6ef10,%rax   ;   {metadata(method data for {method} {0x000000001b9e3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e58737: mov    0x8(%rbx),%ebx
  0x0000000002e5873a: shl    $0x3,%rbx
  0x0000000002e5873e: cmp    0x130(%rax),%rbx
  0x0000000002e58745: jne    0x0000000002e58754
  0x0000000002e58747: addq   $0x1,0x138(%rax)
  0x0000000002e5874f: jmpq   0x0000000002e587ba
  0x0000000002e58754: cmp    0x140(%rax),%rbx
  0x0000000002e5875b: jne    0x0000000002e5876a
  0x0000000002e5875d: addq   $0x1,0x148(%rax)
  0x0000000002e58765: jmpq   0x0000000002e587ba
  0x0000000002e5876a: cmpq   $0x0,0x130(%rax)
  0x0000000002e58775: jne    0x0000000002e5878e
  0x0000000002e58777: mov    %rbx,0x130(%rax)
  0x0000000002e5877e: movq   $0x1,0x138(%rax)
  0x0000000002e58789: jmpq   0x0000000002e587ba
  0x0000000002e5878e: cmpq   $0x0,0x140(%rax)
  0x0000000002e58799: jne    0x0000000002e587b2
  0x0000000002e5879b: mov    %rbx,0x140(%rax)
  0x0000000002e587a2: movq   $0x1,0x148(%rax)
  0x0000000002e587ad: jmpq   0x0000000002e587ba
  0x0000000002e587b2: addq   $0x1,0x128(%rax)
  0x0000000002e587ba: mov    %rdi,%r8
  0x0000000002e587bd: mov    %rdx,%rdi
  0x0000000002e587c0: mov    %rdi,%rdx          ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)

  0x0000000002e587c3: nop
  0x0000000002e587c4: nop
  0x0000000002e587c5: nop
  0x0000000002e587c6: nop
  0x0000000002e587c7: callq  0x0000000002d861a0  ; OopMap{[72]=Oop [80]=Oop off=684}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ;   {optimized virtual_call}
  0x0000000002e587cc: mov    0x58(%rsp),%esi
  0x0000000002e587d0: mov    0x50(%rsp),%rbx
  0x0000000002e587d5: mov    0x48(%rsp),%rdx
  0x0000000002e587da: mov    0x10(%rdx),%edi
  0x0000000002e587dd: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 422)

  0x0000000002e587e1: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 422)

  0x0000000002e587e4: mov    %rbx,%r8
  0x0000000002e587e7: movabs $0x1bb96a08,%r9    ;   {metadata(method data for {method} {0x000000001b9e4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e587f1: mov    0x8(%r8),%r8d
  0x0000000002e587f5: shl    $0x3,%r8
  0x0000000002e587f9: cmp    0x180(%r9),%r8
  0x0000000002e58800: jne    0x0000000002e5880f
  0x0000000002e58802: addq   $0x1,0x188(%r9)
  0x0000000002e5880a: jmpq   0x0000000002e58875
  0x0000000002e5880f: cmp    0x190(%r9),%r8
  0x0000000002e58816: jne    0x0000000002e58825
  0x0000000002e58818: addq   $0x1,0x198(%r9)
  0x0000000002e58820: jmpq   0x0000000002e58875
  0x0000000002e58825: cmpq   $0x0,0x180(%r9)
  0x0000000002e58830: jne    0x0000000002e58849
  0x0000000002e58832: mov    %r8,0x180(%r9)
  0x0000000002e58839: movq   $0x1,0x188(%r9)
  0x0000000002e58844: jmpq   0x0000000002e58875
  0x0000000002e58849: cmpq   $0x0,0x190(%r9)
  0x0000000002e58854: jne    0x0000000002e5886d
  0x0000000002e58856: mov    %r8,0x190(%r9)
  0x0000000002e5885d: movq   $0x1,0x198(%r9)
  0x0000000002e58868: jmpq   0x0000000002e58875
  0x0000000002e5886d: addq   $0x1,0x178(%r9)
  0x0000000002e58875: mov    $0x0,%r8d
  0x0000000002e5887b: mov    %rsi,%r9
  0x0000000002e5887e: mov    %rax,%rsi
  0x0000000002e58881: mov    %rbx,%rdx          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 422)

  0x0000000002e58884: nop
  0x0000000002e58885: nop
  0x0000000002e58886: nop
  0x0000000002e58887: callq  0x0000000002d861a0  ; OopMap{[72]=Oop off=876}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 422)
                                                ;   {optimized virtual_call}
  0x0000000002e5888c: mov    0x48(%rsp),%rdx
  0x0000000002e58891: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 423)

  0x0000000002e58894: add    0x58(%rsp),%eax
  0x0000000002e58898: mov    %eax,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 423)

  0x0000000002e5889b: mov    %rdx,%rax
  0x0000000002e5889e: add    $0x70,%rsp
  0x0000000002e588a2: pop    %rbp
  0x0000000002e588a3: test   %eax,-0x28687a9(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e588a9: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 424)

  0x0000000002e588aa: mov    %rdx,%rsi
  0x0000000002e588ad: movabs $0x1bb96a08,%rdi   ;   {metadata(method data for {method} {0x000000001b9e4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e588b7: addq   $0x1,0x128(%rdi)
  0x0000000002e588bf: callq  0x0000000002d861a0  ; OopMap{off=932}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 419)
                                                ;   {optimized virtual_call}
  0x0000000002e588c4: add    $0x70,%rsp
  0x0000000002e588c8: pop    %rbp
  0x0000000002e588c9: test   %eax,-0x28687cf(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e588cf: retq   
  0x0000000002e588d0: mov    %rsi,0x8(%rsp)
  0x0000000002e588d5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e588dd: callq  0x0000000002e41c20  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=962}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 418)
                                                ;   {runtime_call}
  0x0000000002e588e2: jmpq   0x0000000002e58583
  0x0000000002e588e7: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=972}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ;   {runtime_call}
  0x0000000002e588ec: mov    %rsi,0x8(%rsp)
  0x0000000002e588f1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e588f9: callq  0x0000000002e41c20  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=990}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ;   {runtime_call}
  0x0000000002e588fe: jmpq   0x0000000002e58682
  0x0000000002e58903: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=1000}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ;   {runtime_call}
  0x0000000002e58908: mov    %rbx,0x8(%rsp)
  0x0000000002e5890d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e58915: callq  0x0000000002e41c20  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=1018}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ;   {runtime_call}
  0x0000000002e5891a: jmpq   0x0000000002e586dd
  0x0000000002e5891f: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=1028}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ;   {runtime_call}
  0x0000000002e58924: nop
  0x0000000002e58925: nop
  0x0000000002e58926: mov    0x2a8(%r15),%rax
  0x0000000002e5892d: movabs $0x0,%r10
  0x0000000002e58937: mov    %r10,0x2a8(%r15)
  0x0000000002e5893e: movabs $0x0,%r10
  0x0000000002e58948: mov    %r10,0x2b0(%r15)
  0x0000000002e5894f: add    $0x70,%rsp
  0x0000000002e58953: pop    %rbp
  0x0000000002e58954: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e58959: hlt    
  0x0000000002e5895a: hlt    
  0x0000000002e5895b: hlt    
  0x0000000002e5895c: hlt    
  0x0000000002e5895d: hlt    
  0x0000000002e5895e: hlt    
  0x0000000002e5895f: hlt    
[Stub Code]
  0x0000000002e58960: nop                       ;   {no_reloc}
  0x0000000002e58961: nop
  0x0000000002e58962: nop
  0x0000000002e58963: nop
  0x0000000002e58964: nop
  0x0000000002e58965: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5896f: jmpq   0x0000000002e5896f  ;   {runtime_call}
  0x0000000002e58974: nop
  0x0000000002e58975: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5897f: jmpq   0x0000000002e5897f  ;   {runtime_call}
  0x0000000002e58984: nop
  0x0000000002e58985: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5898f: jmpq   0x0000000002e5898f  ;   {runtime_call}
[Exception Handler]
  0x0000000002e58994: callq  0x0000000002e3f3e0  ;   {runtime_call}
  0x0000000002e58999: mov    %rsp,-0x28(%rsp)
  0x0000000002e5899e: sub    $0x80,%rsp
  0x0000000002e589a5: mov    %rax,0x78(%rsp)
  0x0000000002e589aa: mov    %rcx,0x70(%rsp)
  0x0000000002e589af: mov    %rdx,0x68(%rsp)
  0x0000000002e589b4: mov    %rbx,0x60(%rsp)
  0x0000000002e589b9: mov    %rbp,0x50(%rsp)
  0x0000000002e589be: mov    %rsi,0x48(%rsp)
  0x0000000002e589c3: mov    %rdi,0x40(%rsp)
  0x0000000002e589c8: mov    %r8,0x38(%rsp)
  0x0000000002e589cd: mov    %r9,0x30(%rsp)
  0x0000000002e589d2: mov    %r10,0x28(%rsp)
  0x0000000002e589d7: mov    %r11,0x20(%rsp)
  0x0000000002e589dc: mov    %r12,0x18(%rsp)
  0x0000000002e589e1: mov    %r13,0x10(%rsp)
  0x0000000002e589e6: mov    %r14,0x8(%rsp)
  0x0000000002e589eb: mov    %r15,(%rsp)
  0x0000000002e589ef: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e589f9: movabs $0x2e58999,%rdx    ;   {internal_word}
  0x0000000002e58a03: mov    %rsp,%r8
  0x0000000002e58a06: and    $0xfffffffffffffff0,%rsp
  0x0000000002e58a0a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e58a0f: hlt    
[Deopt Handler Code]
  0x0000000002e58a10: movabs $0x2e58a10,%r10    ;   {section_word}
  0x0000000002e58a1a: push   %r10
  0x0000000002e58a1c: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e58a21: hlt    
  0x0000000002e58a22: hlt    
  0x0000000002e58a23: hlt    
  0x0000000002e58a24: hlt    
  0x0000000002e58a25: hlt    
  0x0000000002e58a26: hlt    
  0x0000000002e58a27: hlt    
<nmethod compile_id='29' compiler='C1' level='3' entry='0x0000000002e58520' size='2440' address='0x0000000002e58390' relocation_offset='288' insts_offset='400' stub_offset='1488' scopes_data_offset='1720' scopes_pcs_offset='1968' dependencies_offset='2400' nul_chk_table_offset='2408' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='776' iicount='776' stamp='0.607'/>
Decoding compiled method 0x0000000002e58d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b9dfe38} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0xa0]  (sp of caller)
  0x0000000002e58ee0: mov    0x8(%rdx),%r10d
  0x0000000002e58ee4: shl    $0x3,%r10
  0x0000000002e58ee8: cmp    %rax,%r10
  0x0000000002e58eeb: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e58ef1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e58efc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e58f00: mov    %eax,-0x6000(%rsp)
  0x0000000002e58f07: push   %rbp
  0x0000000002e58f08: sub    $0x90,%rsp
  0x0000000002e58f0f: lea    0x70(%rsp),%rsi
  0x0000000002e58f14: mov    %rdx,0x8(%rsi)
  0x0000000002e58f18: mov    (%rdx),%rax
  0x0000000002e58f1b: mov    %rax,%rdi
  0x0000000002e58f1e: and    $0x7,%rdi
  0x0000000002e58f22: cmp    $0x5,%rdi
  0x0000000002e58f26: jne    0x0000000002e58fad
  0x0000000002e58f2c: mov    0x8(%rdx),%edi
  0x0000000002e58f2f: shl    $0x3,%rdi
  0x0000000002e58f33: mov    0xa8(%rdi),%rdi
  0x0000000002e58f3a: or     %r15,%rdi
  0x0000000002e58f3d: xor    %rax,%rdi
  0x0000000002e58f40: and    $0xffffffffffffff87,%rdi
  0x0000000002e58f44: je     0x0000000002e58fd5
  0x0000000002e58f4a: test   $0x7,%rdi
  0x0000000002e58f51: jne    0x0000000002e58f9a
  0x0000000002e58f53: test   $0x300,%rdi
  0x0000000002e58f5a: jne    0x0000000002e58f79
  0x0000000002e58f5c: and    $0x37f,%rax
  0x0000000002e58f63: mov    %rax,%rdi
  0x0000000002e58f66: or     %r15,%rdi
  0x0000000002e58f69: lock cmpxchg %rdi,(%rdx)
  0x0000000002e58f6e: jne    0x0000000002e59225
  0x0000000002e58f74: jmpq   0x0000000002e58fd5
  0x0000000002e58f79: mov    0x8(%rdx),%edi
  0x0000000002e58f7c: shl    $0x3,%rdi
  0x0000000002e58f80: mov    0xa8(%rdi),%rdi
  0x0000000002e58f87: or     %r15,%rdi
  0x0000000002e58f8a: lock cmpxchg %rdi,(%rdx)
  0x0000000002e58f8f: jne    0x0000000002e59225
  0x0000000002e58f95: jmpq   0x0000000002e58fd5
  0x0000000002e58f9a: mov    0x8(%rdx),%edi
  0x0000000002e58f9d: shl    $0x3,%rdi
  0x0000000002e58fa1: mov    0xa8(%rdi),%rdi
  0x0000000002e58fa8: lock cmpxchg %rdi,(%rdx)
  0x0000000002e58fad: mov    (%rdx),%rax
  0x0000000002e58fb0: or     $0x1,%rax
  0x0000000002e58fb4: mov    %rax,(%rsi)
  0x0000000002e58fb7: lock cmpxchg %rsi,(%rdx)
  0x0000000002e58fbc: je     0x0000000002e58fd5
  0x0000000002e58fc2: sub    %rsp,%rax
  0x0000000002e58fc5: and    $0xfffffffffffff007,%rax
  0x0000000002e58fcc: mov    %rax,(%rsi)
  0x0000000002e58fcf: jne    0x0000000002e59225
  0x0000000002e58fd5: movabs $0x1bb6f4a0,%rsi   ;   {metadata(method data for {method} {0x000000001b9dfe38} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002e58fdf: mov    0xdc(%rsi),%edi
  0x0000000002e58fe5: add    $0x8,%edi
  0x0000000002e58fe8: mov    %edi,0xdc(%rsi)
  0x0000000002e58fee: movabs $0x1b9dfe30,%rsi   ;   {metadata({method} {0x000000001b9dfe38} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002e58ff8: and    $0x1ff8,%edi
  0x0000000002e58ffe: cmp    $0x0,%edi
  0x0000000002e59001: je     0x0000000002e59238  ;*aload_0
                                                ; - java.lang.StringBuffer::append@0 (line 382)

  0x0000000002e59007: movl   $0x0,0x14(%rdx)
  0x0000000002e5900e: mov    %rdx,%rsi
  0x0000000002e59011: shr    $0x9,%rsi
  0x0000000002e59015: movabs $0xeaf2000,%rdi
  0x0000000002e5901f: movb   $0x0,(%rsi,%rdi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 382)

  0x0000000002e59023: mov    %rdx,%rsi
  0x0000000002e59026: movabs $0x1bb6f4a0,%rdi   ;   {metadata(method data for {method} {0x000000001b9dfe38} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002e59030: addq   $0x1,0x108(%rdi)
  0x0000000002e59038: movabs $0x1bb6f0b0,%rsi   ;   {metadata(method data for {method} {0x000000001b9e4b10} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e59042: mov    0xdc(%rsi),%edi
  0x0000000002e59048: add    $0x8,%edi
  0x0000000002e5904b: mov    %edi,0xdc(%rsi)
  0x0000000002e59051: movabs $0x1b9e4b08,%rsi   ;   {metadata({method} {0x000000001b9e4b10} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e5905b: and    $0x7ffff8,%edi
  0x0000000002e59061: cmp    $0x0,%edi
  0x0000000002e59064: je     0x0000000002e5924f
  0x0000000002e5906a: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002e5906d: inc    %esi
  0x0000000002e5906f: mov    %rdx,%rdi
  0x0000000002e59072: movabs $0x1bb6f0b0,%rbx   ;   {metadata(method data for {method} {0x000000001b9e4b10} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e5907c: addq   $0x1,0x108(%rbx)
  0x0000000002e59084: movabs $0x1bb6ef10,%rdi   ;   {metadata(method data for {method} {0x000000001b9e3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e5908e: mov    0xdc(%rdi),%ebx
  0x0000000002e59094: add    $0x8,%ebx
  0x0000000002e59097: mov    %ebx,0xdc(%rdi)
  0x0000000002e5909d: movabs $0x1b9e3a78,%rdi   ;   {metadata({method} {0x000000001b9e3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e590a7: and    $0x7ffff8,%ebx
  0x0000000002e590ad: cmp    $0x0,%ebx
  0x0000000002e590b0: je     0x0000000002e59266
  0x0000000002e590b6: mov    0x10(%rdx),%edi
  0x0000000002e590b9: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002e590bd: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ; implicit exception: dispatches to 0x0000000002e5927d
  0x0000000002e590c0: mov    %rsi,%rbx
  0x0000000002e590c3: sub    %edi,%ebx
  0x0000000002e590c5: cmp    $0x0,%ebx
  0x0000000002e590c8: movabs $0x1bb6ef10,%rdi   ;   {metadata(method data for {method} {0x000000001b9e3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e590d2: movabs $0x108,%rbx
  0x0000000002e590dc: jle    0x0000000002e590ec
  0x0000000002e590e2: movabs $0x118,%rbx
  0x0000000002e590ec: mov    (%rdi,%rbx,1),%rax
  0x0000000002e590f0: lea    0x1(%rax),%rax
  0x0000000002e590f4: mov    %rax,(%rdi,%rbx,1)
  0x0000000002e590f8: mov    %r8d,0x68(%rsp)
  0x0000000002e590fd: jg     0x0000000002e5910d  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002e59103: mov    %rdx,0x60(%rsp)
  0x0000000002e59108: jmpq   0x0000000002e591b4  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002e5910d: mov    %rdx,%rdi
  0x0000000002e59110: movabs $0x1bb6ef10,%rbx   ;   {metadata(method data for {method} {0x000000001b9e3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e5911a: mov    0x8(%rdi),%edi
  0x0000000002e5911d: shl    $0x3,%rdi
  0x0000000002e59121: cmp    0x130(%rbx),%rdi
  0x0000000002e59128: jne    0x0000000002e59137
  0x0000000002e5912a: addq   $0x1,0x138(%rbx)
  0x0000000002e59132: jmpq   0x0000000002e5919d
  0x0000000002e59137: cmp    0x140(%rbx),%rdi
  0x0000000002e5913e: jne    0x0000000002e5914d
  0x0000000002e59140: addq   $0x1,0x148(%rbx)
  0x0000000002e59148: jmpq   0x0000000002e5919d
  0x0000000002e5914d: cmpq   $0x0,0x130(%rbx)
  0x0000000002e59158: jne    0x0000000002e59171
  0x0000000002e5915a: mov    %rdi,0x130(%rbx)
  0x0000000002e59161: movq   $0x1,0x138(%rbx)
  0x0000000002e5916c: jmpq   0x0000000002e5919d
  0x0000000002e59171: cmpq   $0x0,0x140(%rbx)
  0x0000000002e5917c: jne    0x0000000002e59195
  0x0000000002e5917e: mov    %rdi,0x140(%rbx)
  0x0000000002e59185: movq   $0x1,0x148(%rbx)
  0x0000000002e59190: jmpq   0x0000000002e5919d
  0x0000000002e59195: addq   $0x1,0x128(%rbx)
  0x0000000002e5919d: mov    %rsi,%r8
  0x0000000002e591a0: mov    %rdx,%rsi
  0x0000000002e591a3: mov    %rsi,%rdx          ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002e591a6: mov    %rsi,0x60(%rsp)
  0x0000000002e591ab: nop
  0x0000000002e591ac: nop
  0x0000000002e591ad: nop
  0x0000000002e591ae: nop
  0x0000000002e591af: callq  0x0000000002d861a0  ; OopMap{[96]=Oop [120]=Oop off=724}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {optimized virtual_call}
  0x0000000002e591b4: mov    0x68(%rsp),%r8d
  0x0000000002e591b9: mov    0x60(%rsp),%rdx
  0x0000000002e591be: mov    0x10(%rdx),%eax
  0x0000000002e591c1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002e591c5: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002e591c8: mov    %rsi,%rdi
  0x0000000002e591cb: inc    %edi
  0x0000000002e591cd: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002e591d0: movslq %esi,%rdi
  0x0000000002e591d3: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002e59282
  0x0000000002e591d6: jae    0x0000000002e5928c
  0x0000000002e591dc: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002e591e2: lea    0x70(%rsp),%rax
  0x0000000002e591e7: mov    0x8(%rax),%rdi
  0x0000000002e591eb: mov    (%rdi),%rsi
  0x0000000002e591ee: and    $0x7,%rsi
  0x0000000002e591f2: cmp    $0x5,%rsi
  0x0000000002e591f6: je     0x0000000002e59213
  0x0000000002e591fc: mov    (%rax),%rsi
  0x0000000002e591ff: test   %rsi,%rsi
  0x0000000002e59202: je     0x0000000002e59213
  0x0000000002e59208: lock cmpxchg %rsi,(%rdi)
  0x0000000002e5920d: jne    0x0000000002e59295  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 384)

  0x0000000002e59213: mov    %rdx,%rax
  0x0000000002e59216: add    $0x90,%rsp
  0x0000000002e5921d: pop    %rbp
  0x0000000002e5921e: test   %eax,-0x2869124(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e59224: retq   
  0x0000000002e59225: mov    %rdx,0x8(%rsp)
  0x0000000002e5922a: mov    %rsi,(%rsp)
  0x0000000002e5922e: callq  0x0000000002e3ff20  ; OopMap{rdx=Oop [120]=Oop off=851}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 382)
                                                ;   {runtime_call}
  0x0000000002e59233: jmpq   0x0000000002e58fd5
  0x0000000002e59238: mov    %rsi,0x8(%rsp)
  0x0000000002e5923d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e59245: callq  0x0000000002e41c20  ; OopMap{rdx=Oop [120]=Oop off=874}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 382)
                                                ;   {runtime_call}
  0x0000000002e5924a: jmpq   0x0000000002e59007
  0x0000000002e5924f: mov    %rsi,0x8(%rsp)
  0x0000000002e59254: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e5925c: callq  0x0000000002e41c20  ; OopMap{rdx=Oop [120]=Oop off=897}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x0000000002e59261: jmpq   0x0000000002e5906a
  0x0000000002e59266: mov    %rdi,0x8(%rsp)
  0x0000000002e5926b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e59273: callq  0x0000000002e41c20  ; OopMap{rdx=Oop [120]=Oop off=920}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x0000000002e59278: jmpq   0x0000000002e590b6
  0x0000000002e5927d: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop [120]=Oop off=930}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x0000000002e59282: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop rax=Oop [120]=Oop off=935}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x0000000002e59287: callq  0x0000000002db0bc0  ; OopMap{rdx=Oop rax=Oop [120]=Oop off=940}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x0000000002e5928c: mov    %rsi,(%rsp)
  0x0000000002e59290: callq  0x0000000002db1280  ; OopMap{rdx=Oop rax=Oop [120]=Oop off=949}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x0000000002e59295: lea    0x70(%rsp),%rax
  0x0000000002e5929a: mov    %rax,(%rsp)
  0x0000000002e5929e: callq  0x0000000002e40320  ;   {runtime_call}
  0x0000000002e592a3: jmpq   0x0000000002e59213
  0x0000000002e592a8: nop
  0x0000000002e592a9: nop
  0x0000000002e592aa: mov    0x2a8(%r15),%rax
  0x0000000002e592b1: movabs $0x0,%r10
  0x0000000002e592bb: mov    %r10,0x2a8(%r15)
  0x0000000002e592c2: movabs $0x0,%r10
  0x0000000002e592cc: mov    %r10,0x2b0(%r15)
  0x0000000002e592d3: mov    %rax,%rbx
  0x0000000002e592d6: lea    0x70(%rsp),%rax
  0x0000000002e592db: mov    0x8(%rax),%rsi
  0x0000000002e592df: mov    (%rsi),%rdi
  0x0000000002e592e2: and    $0x7,%rdi
  0x0000000002e592e6: cmp    $0x5,%rdi
  0x0000000002e592ea: je     0x0000000002e59307
  0x0000000002e592f0: mov    (%rax),%rdi
  0x0000000002e592f3: test   %rdi,%rdi
  0x0000000002e592f6: je     0x0000000002e59307
  0x0000000002e592fc: lock cmpxchg %rdi,(%rsi)
  0x0000000002e59301: jne    0x0000000002e59317
  0x0000000002e59307: mov    %rbx,%rax
  0x0000000002e5930a: add    $0x90,%rsp
  0x0000000002e59311: pop    %rbp
  0x0000000002e59312: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e59317: lea    0x70(%rsp),%rax
  0x0000000002e5931c: mov    %rax,(%rsp)
  0x0000000002e59320: callq  0x0000000002e40320  ;   {runtime_call}
  0x0000000002e59325: jmp    0x0000000002e59307
  0x0000000002e59327: hlt    
  0x0000000002e59328: hlt    
  0x0000000002e59329: hlt    
  0x0000000002e5932a: hlt    
  0x0000000002e5932b: hlt    
  0x0000000002e5932c: hlt    
  0x0000000002e5932d: hlt    
  0x0000000002e5932e: hlt    
  0x0000000002e5932f: hlt    
  0x0000000002e59330: hlt    
  0x0000000002e59331: hlt    
  0x0000000002e59332: hlt    
  0x0000000002e59333: hlt    
  0x0000000002e59334: hlt    
  0x0000000002e59335: hlt    
  0x0000000002e59336: hlt    
  0x0000000002e59337: hlt    
  0x0000000002e59338: hlt    
  0x0000000002e59339: hlt    
  0x0000000002e5933a: hlt    
  0x0000000002e5933b: hlt    
  0x0000000002e5933c: hlt    
  0x0000000002e5933d: hlt    
  0x0000000002e5933e: hlt    
  0x0000000002e5933f: hlt    
[Stub Code]
  0x0000000002e59340: nop                       ;   {no_reloc}
  0x0000000002e59341: nop
  0x0000000002e59342: nop
  0x0000000002e59343: nop
  0x0000000002e59344: nop
  0x0000000002e59345: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5934f: jmpq   0x0000000002e5934f  ;   {runtime_call}
[Exception Handler]
  0x0000000002e59354: callq  0x0000000002e3f3e0  ;   {runtime_call}
  0x0000000002e59359: mov    %rsp,-0x28(%rsp)
  0x0000000002e5935e: sub    $0x80,%rsp
  0x0000000002e59365: mov    %rax,0x78(%rsp)
  0x0000000002e5936a: mov    %rcx,0x70(%rsp)
  0x0000000002e5936f: mov    %rdx,0x68(%rsp)
  0x0000000002e59374: mov    %rbx,0x60(%rsp)
  0x0000000002e59379: mov    %rbp,0x50(%rsp)
  0x0000000002e5937e: mov    %rsi,0x48(%rsp)
  0x0000000002e59383: mov    %rdi,0x40(%rsp)
  0x0000000002e59388: mov    %r8,0x38(%rsp)
  0x0000000002e5938d: mov    %r9,0x30(%rsp)
  0x0000000002e59392: mov    %r10,0x28(%rsp)
  0x0000000002e59397: mov    %r11,0x20(%rsp)
  0x0000000002e5939c: mov    %r12,0x18(%rsp)
  0x0000000002e593a1: mov    %r13,0x10(%rsp)
  0x0000000002e593a6: mov    %r14,0x8(%rsp)
  0x0000000002e593ab: mov    %r15,(%rsp)
  0x0000000002e593af: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e593b9: movabs $0x2e59359,%rdx    ;   {internal_word}
  0x0000000002e593c3: mov    %rsp,%r8
  0x0000000002e593c6: and    $0xfffffffffffffff0,%rsp
  0x0000000002e593ca: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e593cf: hlt    
[Deopt Handler Code]
  0x0000000002e593d0: movabs $0x2e593d0,%r10    ;   {section_word}
  0x0000000002e593da: push   %r10
  0x0000000002e593dc: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e593e1: hlt    
  0x0000000002e593e2: hlt    
  0x0000000002e593e3: hlt    
  0x0000000002e593e4: hlt    
  0x0000000002e593e5: hlt    
  0x0000000002e593e6: hlt    
  0x0000000002e593e7: hlt    
<nmethod compile_id='31' compiler='C1' level='3' entry='0x0000000002e58ee0' size='2336' address='0x0000000002e58d50' relocation_offset='288' insts_offset='400' stub_offset='1520' scopes_data_offset='1712' scopes_pcs_offset='1912' dependencies_offset='2296' nul_chk_table_offset='2304' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3791' iicount='3791' stamp='0.625'/>
Decoding compiled method 0x0000000002e59690:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bae9620} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x0000000002e597e0: mov    0x8(%rdx),%r10d
  0x0000000002e597e4: shl    $0x3,%r10
  0x0000000002e597e8: cmp    %rax,%r10
  0x0000000002e597eb: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e597f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e597fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e59800: mov    %eax,-0x6000(%rsp)
  0x0000000002e59807: push   %rbp
  0x0000000002e59808: sub    $0x30,%rsp
  0x0000000002e5980c: movabs $0x1bb6f320,%rax   ;   {metadata(method data for {method} {0x000000001bae9620} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e59816: mov    0xdc(%rax),%esi
  0x0000000002e5981c: add    $0x8,%esi
  0x0000000002e5981f: mov    %esi,0xdc(%rax)
  0x0000000002e59825: movabs $0x1bae9618,%rax   ;   {metadata({method} {0x000000001bae9620} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e5982f: and    $0x1ff8,%esi
  0x0000000002e59835: cmp    $0x0,%esi
  0x0000000002e59838: je     0x0000000002e598e0  ;*iload_1
                                                ; - java.io.WinNTFileSystem::isSlash@0 (line 53)

  0x0000000002e5983e: cmp    $0x5c,%r8d
  0x0000000002e59842: movabs $0x1bb6f320,%rax   ;   {metadata(method data for {method} {0x000000001bae9620} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e5984c: movabs $0x108,%rsi
  0x0000000002e59856: je     0x0000000002e59866
  0x0000000002e5985c: movabs $0x118,%rsi
  0x0000000002e59866: mov    (%rax,%rsi,1),%rdi
  0x0000000002e5986a: lea    0x1(%rdi),%rdi
  0x0000000002e5986e: mov    %rdi,(%rax,%rsi,1)
  0x0000000002e59872: je     0x0000000002e598b2  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x0000000002e59878: cmp    $0x2f,%r8d
  0x0000000002e5987c: movabs $0x1bb6f320,%rax   ;   {metadata(method data for {method} {0x000000001bae9620} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e59886: movabs $0x128,%rsi
  0x0000000002e59890: jne    0x0000000002e598a0
  0x0000000002e59896: movabs $0x138,%rsi
  0x0000000002e598a0: mov    (%rax,%rsi,1),%rdi
  0x0000000002e598a4: lea    0x1(%rdi),%rdi
  0x0000000002e598a8: mov    %rdi,(%rax,%rsi,1)
  0x0000000002e598ac: jne    0x0000000002e598cc  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x0000000002e598b2: movabs $0x1bb6f320,%rax   ;   {metadata(method data for {method} {0x000000001bae9620} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002e598bc: incl   0x148(%rax)
  0x0000000002e598c2: mov    $0x1,%eax
  0x0000000002e598c7: jmpq   0x0000000002e598d1  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x0000000002e598cc: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)

  0x0000000002e598d1: and    $0x1,%eax
  0x0000000002e598d4: add    $0x30,%rsp
  0x0000000002e598d8: pop    %rbp
  0x0000000002e598d9: test   %eax,-0x28697df(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e598df: retq   
  0x0000000002e598e0: mov    %rax,0x8(%rsp)
  0x0000000002e598e5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e598ed: callq  0x0000000002e41c20  ; OopMap{rdx=Oop off=274}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ;   {runtime_call}
  0x0000000002e598f2: jmpq   0x0000000002e5983e
  0x0000000002e598f7: nop
  0x0000000002e598f8: nop
  0x0000000002e598f9: mov    0x2a8(%r15),%rax
  0x0000000002e59900: movabs $0x0,%r10
  0x0000000002e5990a: mov    %r10,0x2a8(%r15)
  0x0000000002e59911: movabs $0x0,%r10
  0x0000000002e5991b: mov    %r10,0x2b0(%r15)
  0x0000000002e59922: add    $0x30,%rsp
  0x0000000002e59926: pop    %rbp
  0x0000000002e59927: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e5992c: hlt    
  0x0000000002e5992d: hlt    
  0x0000000002e5992e: hlt    
  0x0000000002e5992f: hlt    
  0x0000000002e59930: hlt    
  0x0000000002e59931: hlt    
  0x0000000002e59932: hlt    
  0x0000000002e59933: hlt    
  0x0000000002e59934: hlt    
  0x0000000002e59935: hlt    
  0x0000000002e59936: hlt    
  0x0000000002e59937: hlt    
  0x0000000002e59938: hlt    
  0x0000000002e59939: hlt    
  0x0000000002e5993a: hlt    
  0x0000000002e5993b: hlt    
  0x0000000002e5993c: hlt    
  0x0000000002e5993d: hlt    
  0x0000000002e5993e: hlt    
  0x0000000002e5993f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e59940: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e59945: mov    %rsp,-0x28(%rsp)
  0x0000000002e5994a: sub    $0x80,%rsp
  0x0000000002e59951: mov    %rax,0x78(%rsp)
  0x0000000002e59956: mov    %rcx,0x70(%rsp)
  0x0000000002e5995b: mov    %rdx,0x68(%rsp)
  0x0000000002e59960: mov    %rbx,0x60(%rsp)
  0x0000000002e59965: mov    %rbp,0x50(%rsp)
  0x0000000002e5996a: mov    %rsi,0x48(%rsp)
  0x0000000002e5996f: mov    %rdi,0x40(%rsp)
  0x0000000002e59974: mov    %r8,0x38(%rsp)
  0x0000000002e59979: mov    %r9,0x30(%rsp)
  0x0000000002e5997e: mov    %r10,0x28(%rsp)
  0x0000000002e59983: mov    %r11,0x20(%rsp)
  0x0000000002e59988: mov    %r12,0x18(%rsp)
  0x0000000002e5998d: mov    %r13,0x10(%rsp)
  0x0000000002e59992: mov    %r14,0x8(%rsp)
  0x0000000002e59997: mov    %r15,(%rsp)
  0x0000000002e5999b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e599a5: movabs $0x2e59945,%rdx    ;   {internal_word}
  0x0000000002e599af: mov    %rsp,%r8
  0x0000000002e599b2: and    $0xfffffffffffffff0,%rsp
  0x0000000002e599b6: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e599bb: hlt    
[Deopt Handler Code]
  0x0000000002e599bc: movabs $0x2e599bc,%r10    ;   {section_word}
  0x0000000002e599c6: push   %r10
  0x0000000002e599c8: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e599cd: hlt    
  0x0000000002e599ce: hlt    
  0x0000000002e599cf: hlt    
<nmethod compile_id='34' compiler='C1' level='3' entry='0x0000000002e597e0' size='1024' address='0x0000000002e59690' relocation_offset='288' insts_offset='336' stub_offset='688' scopes_data_offset='840' scopes_pcs_offset='888' dependencies_offset='1016' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='4232' iicount='4232' stamp='0.631'/>
<writer thread='21988'/>
<task_queued compile_id='35' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='384' iicount='384' level='3' stamp='0.631' comment='tiered' hot_count='384'/>
Decoding compiled method 0x0000000002e5f890:
Code:
[Entry Point]
  # {method} {0x000000001b9ef130} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  #           [sp+0x70]  (sp of caller)
  0x0000000002e5fa00: mov    0x8(%rdx),%r10d
  0x0000000002e5fa04: shl    $0x3,%r10
  0x0000000002e5fa08: cmp    %r10,%rax
  0x0000000002e5fa0b: je     0x0000000002e5fa18
  0x0000000002e5fa11: jmpq   0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e5fa16: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002e5fa18: mov    %eax,-0x6000(%rsp)
  0x0000000002e5fa1f: push   %rbp
  0x0000000002e5fa20: mov    %rsp,%rbp
  0x0000000002e5fa23: sub    $0x60,%rsp
  0x0000000002e5fa27: mov    %r8,0x28(%rsp)
  0x0000000002e5fa2c: cmp    $0x0,%r8
  0x0000000002e5fa30: lea    0x28(%rsp),%r8
  0x0000000002e5fa35: cmove  0x28(%rsp),%r8
  0x0000000002e5fa3b: mov    %rdx,0x20(%rsp)
  0x0000000002e5fa40: cmp    $0x0,%rdx
  0x0000000002e5fa44: lea    0x20(%rsp),%rdx
  0x0000000002e5fa49: cmove  0x20(%rsp),%rdx    ; OopMap{[40]=Oop [32]=Oop off=79}
  0x0000000002e5fa4f: movabs $0x2e5fa4f,%r10    ;   {section_word}
  0x0000000002e5fa59: mov    %r10,0x1e0(%r15)
  0x0000000002e5fa60: mov    %rsp,0x1d8(%r15)
  0x0000000002e5fa67: cmpb   $0x0,0x721945c9(%rip)        # 0x0000000074ff4037
                                                ;   {external_word}
  0x0000000002e5fa6e: je     0x0000000002e5fab6
  0x0000000002e5fa74: push   %rdx
  0x0000000002e5fa75: push   %r8
  0x0000000002e5fa77: push   %r9
  0x0000000002e5fa79: movabs $0x1b9ef128,%rdx   ;   {metadata({method} {0x000000001b9ef130} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002e5fa83: mov    %r15,%rcx
  0x0000000002e5fa86: sub    $0x20,%rsp
  0x0000000002e5fa8a: test   $0xf,%esp
  0x0000000002e5fa90: je     0x0000000002e5faa8
  0x0000000002e5fa96: sub    $0x8,%rsp
  0x0000000002e5fa9a: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002e5fa9f: add    $0x8,%rsp
  0x0000000002e5faa3: jmpq   0x0000000002e5faad
  0x0000000002e5faa8: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002e5faad: add    $0x20,%rsp
  0x0000000002e5fab1: pop    %r9
  0x0000000002e5fab3: pop    %r8
  0x0000000002e5fab5: pop    %rdx
  0x0000000002e5fab6: lea    0x1f8(%r15),%rcx
  0x0000000002e5fabd: movl   $0x4,0x270(%r15)
  0x0000000002e5fac8: callq  0x00000000749cc8b0  ;   {runtime_call}
  0x0000000002e5facd: vzeroupper 
  0x0000000002e5fad0: movl   $0x5,0x270(%r15)
  0x0000000002e5fadb: mov    %r15d,%ecx
  0x0000000002e5fade: shr    $0x4,%ecx
  0x0000000002e5fae1: and    $0xffc,%ecx
  0x0000000002e5fae7: movabs $0x9f0000,%r10     ;   {external_word}
  0x0000000002e5faf1: mov    %ecx,(%r10,%rcx,1)
  0x0000000002e5faf5: cmpl   $0x0,0x72195111(%rip)        # 0x0000000074ff4c10
                                                ;   {external_word}
  0x0000000002e5faff: jne    0x0000000002e5fb13
  0x0000000002e5fb05: cmpl   $0x0,0x30(%r15)
  0x0000000002e5fb0d: je     0x0000000002e5fb34
  0x0000000002e5fb13: mov    %rax,-0x8(%rbp)
  0x0000000002e5fb17: mov    %r15,%rcx
  0x0000000002e5fb1a: mov    %rsp,%r12
  0x0000000002e5fb1d: sub    $0x20,%rsp
  0x0000000002e5fb21: and    $0xfffffffffffffff0,%rsp
  0x0000000002e5fb25: callq  0x0000000074a31270  ;   {runtime_call}
  0x0000000002e5fb2a: mov    %r12,%rsp
  0x0000000002e5fb2d: xor    %r12,%r12
  0x0000000002e5fb30: mov    -0x8(%rbp),%rax
  0x0000000002e5fb34: movl   $0x8,0x270(%r15)
  0x0000000002e5fb3f: cmpl   $0x1,0x29c(%r15)
  0x0000000002e5fb4a: je     0x0000000002e5fbee
  0x0000000002e5fb50: cmpb   $0x0,0x721944e0(%rip)        # 0x0000000074ff4037
                                                ;   {external_word}
  0x0000000002e5fb57: je     0x0000000002e5fb9d
  0x0000000002e5fb5d: mov    %rax,-0x8(%rbp)
  0x0000000002e5fb61: movabs $0x1b9ef128,%rdx   ;   {metadata({method} {0x000000001b9ef130} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002e5fb6b: mov    %r15,%rcx
  0x0000000002e5fb6e: sub    $0x20,%rsp
  0x0000000002e5fb72: test   $0xf,%esp
  0x0000000002e5fb78: je     0x0000000002e5fb90
  0x0000000002e5fb7e: sub    $0x8,%rsp
  0x0000000002e5fb82: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002e5fb87: add    $0x8,%rsp
  0x0000000002e5fb8b: jmpq   0x0000000002e5fb95
  0x0000000002e5fb90: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002e5fb95: add    $0x20,%rsp
  0x0000000002e5fb99: mov    -0x8(%rbp),%rax
  0x0000000002e5fb9d: movabs $0x0,%r10
  0x0000000002e5fba7: mov    %r10,0x1d8(%r15)
  0x0000000002e5fbae: movabs $0x0,%r10
  0x0000000002e5fbb8: mov    %r10,0x1e0(%r15)
  0x0000000002e5fbbf: test   %rax,%rax
  0x0000000002e5fbc2: je     0x0000000002e5fbcb
  0x0000000002e5fbc8: mov    (%rax),%rax
  0x0000000002e5fbcb: mov    0x38(%r15),%rcx
  0x0000000002e5fbcf: movl   $0x0,0x100(%rcx)
  0x0000000002e5fbd9: leaveq 
  0x0000000002e5fbda: cmpq   $0x0,0x8(%r15)
  0x0000000002e5fbe2: jne    0x0000000002e5fbe9
  0x0000000002e5fbe8: retq   
  0x0000000002e5fbe9: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002e5fbee: mov    %rax,-0x8(%rbp)
  0x0000000002e5fbf2: mov    %rsp,%r12
  0x0000000002e5fbf5: sub    $0x20,%rsp
  0x0000000002e5fbf9: and    $0xfffffffffffffff0,%rsp
  0x0000000002e5fbfd: callq  0x0000000074a1ae00  ;   {runtime_call}
  0x0000000002e5fc02: mov    %r12,%rsp
  0x0000000002e5fc05: xor    %r12,%r12
  0x0000000002e5fc08: mov    -0x8(%rbp),%rax
  0x0000000002e5fc0c: jmpq   0x0000000002e5fb50
  0x0000000002e5fc11: hlt    
  0x0000000002e5fc12: hlt    
  0x0000000002e5fc13: hlt    
  0x0000000002e5fc14: hlt    
  0x0000000002e5fc15: hlt    
  0x0000000002e5fc16: hlt    
  0x0000000002e5fc17: hlt    
<nmethod compile_id='36' compile_kind='c2n' level='0' entry='0x0000000002e5fa00' size='904' address='0x0000000002e5f890' relocation_offset='288' consts_offset='904' insts_offset='368' method='sun/misc/Unsafe getObjectVolatile (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='384' iicount='384' stamp='0.637'/>
<writer thread='23708'/>
Decoding compiled method 0x0000000002e5fc50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b9e3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x0000000002e5fda0: mov    0x8(%rdx),%r10d
  0x0000000002e5fda4: shl    $0x3,%r10
  0x0000000002e5fda8: cmp    %r10,%rax
  0x0000000002e5fdab: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e5fdb1: data16 xchg %ax,%ax
  0x0000000002e5fdb4: nopl   0x0(%rax,%rax,1)
  0x0000000002e5fdbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e5fdc0: mov    %eax,-0x6000(%rsp)
  0x0000000002e5fdc7: push   %rbp
  0x0000000002e5fdc8: sub    $0x70,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)

  0x0000000002e5fdcc: mov    %rdx,0x58(%rsp)
  0x0000000002e5fdd1: mov    0x10(%rdx),%ecx    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)

  0x0000000002e5fdd4: mov    0xc(%r12,%rcx,8),%ebp  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; implicit exception: dispatches to 0x0000000002e6001d
  0x0000000002e5fdd9: mov    %r8d,%r10d
  0x0000000002e5fddc: sub    %ebp,%r10d
  0x0000000002e5fddf: test   %r10d,%r10d
  0x0000000002e5fde2: jg     0x0000000002e5fdf0  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)

  0x0000000002e5fde4: add    $0x70,%rsp
  0x0000000002e5fde8: pop    %rbp
  0x0000000002e5fde9: test   %eax,-0x286fdef(%rip)        # 0x00000000005f0000
                                                ;   {poll_return}
  0x0000000002e5fdef: retq   
  0x0000000002e5fdf0: mov    %ebp,%r11d
  0x0000000002e5fdf3: shl    %r11d              ;*imul
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@6 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5fdf6: mov    %r11d,%r9d
  0x0000000002e5fdf9: sub    %r8d,%r9d
  0x0000000002e5fdfc: add    $0x2,%r9d
  0x0000000002e5fe00: test   %r9d,%r9d
  0x0000000002e5fe03: jge    0x0000000002e5ff08  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@13 (line 130)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5fe09: mov    %r8d,%r10d
  0x0000000002e5fe0c: test   %r8d,%r8d
  0x0000000002e5fe0f: jl     0x0000000002e5fe16
  0x0000000002e5fe11: jmp    0x0000000002e5fe25
  0x0000000002e5fe13: mov    %r8d,%r10d         ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5fe16: test   %r10d,%r10d
  0x0000000002e5fe19: jl     0x0000000002e6000f  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@23 (line 133)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5fe1f: mov    $0x7fffffff,%r10d  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@37 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5fe25: cmp    %r10d,%ebp
  0x0000000002e5fe28: mov    %r10d,%ebx
  0x0000000002e5fe2b: cmovl  %ebp,%ebx          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5fe2e: movslq %r10d,%r8
  0x0000000002e5fe31: lea    (%r12,%rcx,8),%r9  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)

  0x0000000002e5fe35: shl    %r8
  0x0000000002e5fe38: add    $0x17,%r8          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5fe3c: mov    %r8,%r11
  0x0000000002e5fe3f: shr    $0x3,%r11          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5fe43: and    $0xfffffffffffffff8,%r8  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5fe47: mov    %r11,%rsi
  0x0000000002e5fe4a: add    $0xfffffffffffffffe,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5fe4e: cmp    $0x80000,%r10d
  0x0000000002e5fe55: ja     0x0000000002e5ff5d
  0x0000000002e5fe5b: mov    0x60(%r15),%r13
  0x0000000002e5fe5f: mov    %r13,%rdi
  0x0000000002e5fe62: add    %r8,%rdi
  0x0000000002e5fe65: cmp    0x70(%r15),%rdi
  0x0000000002e5fe69: jae    0x0000000002e5ff5d
  0x0000000002e5fe6f: mov    %rdi,0x60(%r15)
  0x0000000002e5fe73: prefetchw 0xc0(%rdi)
  0x0000000002e5fe7a: movq   $0x1,0x0(%r13)
  0x0000000002e5fe82: prefetchw 0x100(%rdi)
  0x0000000002e5fe89: movl   $0xf8000041,0x8(%r13)  ;   {metadata({type array char})}
  0x0000000002e5fe91: mov    %r10d,0xc(%r13)
  0x0000000002e5fe95: prefetchw 0x140(%rdi)
  0x0000000002e5fe9c: prefetchw 0x180(%rdi)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5fea3: mov    %r13,%rdx
  0x0000000002e5fea6: add    $0x10,%rdx
  0x0000000002e5feaa: cmp    %ebx,%ebp
  0x0000000002e5feac: jb     0x0000000002e5ffc1
  0x0000000002e5feb2: cmp    %ebx,%r10d
  0x0000000002e5feb5: jb     0x0000000002e5ffc1
  0x0000000002e5febb: test   %ebx,%ebx
  0x0000000002e5febd: jle    0x0000000002e5fffa
  0x0000000002e5fec3: lea    0x10(%r12,%rcx,8),%r9
  0x0000000002e5fec8: cmp    %r10d,%ebx
  0x0000000002e5fecb: jl     0x0000000002e5ff1d
  0x0000000002e5fecd: add    $0xfffffffffffffff0,%r8
  0x0000000002e5fed1: shr    $0x3,%r8
  0x0000000002e5fed5: mov    %r9,%rcx
  0x0000000002e5fed8: movabs $0x2d92ca0,%r10
  0x0000000002e5fee2: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5fee5: mov    %r13,%r11
  0x0000000002e5fee8: shr    $0x3,%r11
  0x0000000002e5feec: mov    0x58(%rsp),%r10
  0x0000000002e5fef1: mov    %r11d,0x10(%r10)
  0x0000000002e5fef5: shr    $0x9,%r10
  0x0000000002e5fef9: mov    $0xeaf2000,%r11d
  0x0000000002e5feff: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@46 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5ff03: jmpq   0x0000000002e5fde4
  0x0000000002e5ff08: add    $0x2,%r11d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@8 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5ff0c: test   %r11d,%r11d
  0x0000000002e5ff0f: jl     0x0000000002e5fe13  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5ff15: mov    %r11d,%r10d
  0x0000000002e5ff18: jmpq   0x0000000002e5fe25
  0x0000000002e5ff1d: movslq %ebx,%r8
  0x0000000002e5ff20: mov    %r8,%r10
  0x0000000002e5ff23: shl    %r10
  0x0000000002e5ff26: add    $0x10,%r10
  0x0000000002e5ff2a: mov    %r10,%rcx
  0x0000000002e5ff2d: and    $0xfffffffffffffff9,%rcx
  0x0000000002e5ff31: mov    %r13,%rdi
  0x0000000002e5ff34: add    %rcx,%rdi
  0x0000000002e5ff37: shr    $0x3,%r10
  0x0000000002e5ff3b: sub    %r10,%r11
  0x0000000002e5ff3e: mov    %r11,%rcx
  0x0000000002e5ff41: xor    %rax,%rax
  0x0000000002e5ff44: shl    $0x3,%rcx
  0x0000000002e5ff48: rep rex.W stos %al,%es:(%rdi)
  0x0000000002e5ff4b: mov    %r9,%rcx
  0x0000000002e5ff4e: movabs $0x2d92980,%r10
  0x0000000002e5ff58: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e5ff5b: jmp    0x0000000002e5fee5
  0x0000000002e5ff5d: mov    %ecx,0x50(%rsp)
  0x0000000002e5ff61: mov    %rsi,0x48(%rsp)
  0x0000000002e5ff66: mov    %r11,0x40(%rsp)
  0x0000000002e5ff6b: mov    %r9,0x38(%rsp)
  0x0000000002e5ff70: mov    %r8,0x30(%rsp)
  0x0000000002e5ff75: mov    %ebx,0x2c(%rsp)
  0x0000000002e5ff79: mov    %r10d,0x28(%rsp)
  0x0000000002e5ff7e: mov    %rdx,0x20(%rsp)
  0x0000000002e5ff83: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002e5ff8d: mov    %r10d,%r8d
  0x0000000002e5ff90: data16 xchg %ax,%ax
  0x0000000002e5ff93: callq  0x0000000002dae820  ; OopMap{[32]=Oop [56]=Oop [80]=NarrowOop [88]=Oop off=504}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ;   {runtime_call}
  0x0000000002e5ff98: mov    0x28(%rsp),%r10d
  0x0000000002e5ff9d: mov    0x2c(%rsp),%ebx
  0x0000000002e5ffa1: mov    0x30(%rsp),%r8
  0x0000000002e5ffa6: mov    0x38(%rsp),%r9
  0x0000000002e5ffab: mov    0x40(%rsp),%r11
  0x0000000002e5ffb0: mov    0x48(%rsp),%rsi
  0x0000000002e5ffb5: mov    0x50(%rsp),%ecx
  0x0000000002e5ffb9: mov    %rax,%r13
  0x0000000002e5ffbc: jmpq   0x0000000002e5fea3
  0x0000000002e5ffc1: mov    %rsi,%rcx
  0x0000000002e5ffc4: mov    %rdx,%rdi
  0x0000000002e5ffc7: xor    %rax,%rax
  0x0000000002e5ffca: shl    $0x3,%rcx
  0x0000000002e5ffce: rep rex.W stos %al,%es:(%rdi)
  0x0000000002e5ffd1: mov    %r9,%rdx
  0x0000000002e5ffd4: xor    %r8d,%r8d
  0x0000000002e5ffd7: mov    %r13,%r9
  0x0000000002e5ffda: xor    %edi,%edi
  0x0000000002e5ffdc: mov    %ebx,%esi
  0x0000000002e5ffde: mov    0x58(%rsp),%rbp
  0x0000000002e5ffe3: mov    %r13,0x28(%rsp)
  0x0000000002e5ffe8: data16 xchg %ax,%ax
  0x0000000002e5ffeb: callq  0x0000000002db2220  ; OopMap{rbp=Oop [40]=Oop [88]=Oop off=592}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ;   {runtime_call}
  0x0000000002e5fff0: mov    0x28(%rsp),%r13
  0x0000000002e5fff5: jmpq   0x0000000002e5fee5
  0x0000000002e5fffa: mov    %rsi,%rcx
  0x0000000002e5fffd: mov    %rdx,%rdi
  0x0000000002e60000: xor    %rax,%rax
  0x0000000002e60003: shl    $0x3,%rcx
  0x0000000002e60007: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e6000a: jmpq   0x0000000002e5fee5
  0x0000000002e6000f: mov    $0x8d,%edx
  0x0000000002e60014: data16 xchg %ax,%ax
  0x0000000002e60017: callq  0x0000000002d857a0  ; OopMap{off=636}
                                                ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ;   {runtime_call}
  0x0000000002e6001c: int3                      ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e6001d: mov    $0xfffffff6,%edx
  0x0000000002e60022: nop
  0x0000000002e60023: callq  0x0000000002d857a0  ; OopMap{off=648}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ;   {runtime_call}
  0x0000000002e60028: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e60029: mov    %rax,%rdx
  0x0000000002e6002c: jmp    0x0000000002e60031  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e6002e: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@-1 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002e60031: add    $0x70,%rsp
  0x0000000002e60035: pop    %rbp
  0x0000000002e60036: jmpq   0x0000000002db2120  ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@18 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ;   {runtime_call}
  0x0000000002e6003b: hlt    
  0x0000000002e6003c: hlt    
  0x0000000002e6003d: hlt    
  0x0000000002e6003e: hlt    
  0x0000000002e6003f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e60040: jmpq   0x0000000002daeea0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002e60045: callq  0x0000000002e6004a
  0x0000000002e6004a: subq   $0x5,(%rsp)
  0x0000000002e6004f: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e60054: hlt    
  0x0000000002e60055: hlt    
  0x0000000002e60056: hlt    
  0x0000000002e60057: hlt    
<nmethod compile_id='32' compiler='C2' level='4' entry='0x0000000002e5fda0' size='1864' address='0x0000000002e5fc50' relocation_offset='288' insts_offset='336' stub_offset='1008' scopes_data_offset='1064' scopes_pcs_offset='1264' dependencies_offset='1792' handler_table_offset='1800' nul_chk_table_offset='1848' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='7241' iicount='7241' stamp='0.651'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e5c110:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b9e7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002e5c280: mov    0x8(%rdx),%r10d
  0x0000000002e5c284: shl    $0x3,%r10
  0x0000000002e5c288: cmp    %rax,%r10
  0x0000000002e5c28b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e5c291: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e5c29c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e5c2a0: mov    %eax,-0x6000(%rsp)
  0x0000000002e5c2a7: push   %rbp
  0x0000000002e5c2a8: sub    $0x30,%rsp
  0x0000000002e5c2ac: movabs $0x1bba0a00,%rsi   ;   {metadata(method data for {method} {0x000000001b9e7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e5c2b6: mov    0xdc(%rsi),%edi
  0x0000000002e5c2bc: add    $0x8,%edi
  0x0000000002e5c2bf: mov    %edi,0xdc(%rsi)
  0x0000000002e5c2c5: movabs $0x1b9e7738,%rsi   ;   {metadata({method} {0x000000001b9e7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e5c2cf: and    $0x1ff8,%edi
  0x0000000002e5c2d5: cmp    $0x0,%edi
  0x0000000002e5c2d8: je     0x0000000002e5c315  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x0000000002e5c2de: mov    %rdx,%rsi
  0x0000000002e5c2e1: movabs $0x1bba0a00,%rdi   ;   {metadata(method data for {method} {0x000000001b9e7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e5c2eb: addq   $0x1,0x108(%rdi)
  0x0000000002e5c2f3: mov    %rdx,%rsi
  0x0000000002e5c2f6: mov    %rsi,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x0000000002e5c2f9: mov    %rsi,0x20(%rsp)
  0x0000000002e5c2fe: nop
  0x0000000002e5c2ff: callq  0x0000000002d861a0  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x0000000002e5c304: mov    0x20(%rsp),%rax
  0x0000000002e5c309: add    $0x30,%rsp
  0x0000000002e5c30d: pop    %rbp
  0x0000000002e5c30e: test   %eax,-0x286c214(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e5c314: retq   
  0x0000000002e5c315: mov    %rsi,0x8(%rsp)
  0x0000000002e5c31a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e5c322: callq  0x0000000002e41c20  ; OopMap{rdx=Oop r8=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x0000000002e5c327: jmp    0x0000000002e5c2de
  0x0000000002e5c329: nop
  0x0000000002e5c32a: nop
  0x0000000002e5c32b: mov    0x2a8(%r15),%rax
  0x0000000002e5c332: movabs $0x0,%r10
  0x0000000002e5c33c: mov    %r10,0x2a8(%r15)
  0x0000000002e5c343: movabs $0x0,%r10
  0x0000000002e5c34d: mov    %r10,0x2b0(%r15)
  0x0000000002e5c354: add    $0x30,%rsp
  0x0000000002e5c358: pop    %rbp
  0x0000000002e5c359: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e5c35e: hlt    
  0x0000000002e5c35f: hlt    
[Stub Code]
  0x0000000002e5c360: nop                       ;   {no_reloc}
  0x0000000002e5c361: nop
  0x0000000002e5c362: nop
  0x0000000002e5c363: nop
  0x0000000002e5c364: nop
  0x0000000002e5c365: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5c36f: jmpq   0x0000000002e5c36f  ;   {runtime_call}
[Exception Handler]
  0x0000000002e5c374: callq  0x0000000002e3f3e0  ;   {runtime_call}
  0x0000000002e5c379: mov    %rsp,-0x28(%rsp)
  0x0000000002e5c37e: sub    $0x80,%rsp
  0x0000000002e5c385: mov    %rax,0x78(%rsp)
  0x0000000002e5c38a: mov    %rcx,0x70(%rsp)
  0x0000000002e5c38f: mov    %rdx,0x68(%rsp)
  0x0000000002e5c394: mov    %rbx,0x60(%rsp)
  0x0000000002e5c399: mov    %rbp,0x50(%rsp)
  0x0000000002e5c39e: mov    %rsi,0x48(%rsp)
  0x0000000002e5c3a3: mov    %rdi,0x40(%rsp)
  0x0000000002e5c3a8: mov    %r8,0x38(%rsp)
  0x0000000002e5c3ad: mov    %r9,0x30(%rsp)
  0x0000000002e5c3b2: mov    %r10,0x28(%rsp)
  0x0000000002e5c3b7: mov    %r11,0x20(%rsp)
  0x0000000002e5c3bc: mov    %r12,0x18(%rsp)
  0x0000000002e5c3c1: mov    %r13,0x10(%rsp)
  0x0000000002e5c3c6: mov    %r14,0x8(%rsp)
  0x0000000002e5c3cb: mov    %r15,(%rsp)
  0x0000000002e5c3cf: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e5c3d9: movabs $0x2e5c379,%rdx    ;   {internal_word}
  0x0000000002e5c3e3: mov    %rsp,%r8
  0x0000000002e5c3e6: and    $0xfffffffffffffff0,%rsp
  0x0000000002e5c3ea: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5c3ef: hlt    
[Deopt Handler Code]
  0x0000000002e5c3f0: movabs $0x2e5c3f0,%r10    ;   {section_word}
  0x0000000002e5c3fa: push   %r10
  0x0000000002e5c3fc: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e5c401: hlt    
  0x0000000002e5c402: hlt    
  0x0000000002e5c403: hlt    
  0x0000000002e5c404: hlt    
  0x0000000002e5c405: hlt    
  0x0000000002e5c406: hlt    
  0x0000000002e5c407: hlt    
<nmethod compile_id='28' compiler='C1' level='3' entry='0x0000000002e5c280' size='912' address='0x0000000002e5c110' relocation_offset='288' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='647' iicount='647' stamp='0.656'/>
<writer thread='26572'/>
Decoding compiled method 0x0000000002e5b850:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b9e4b10} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x70]  (sp of caller)
  0x0000000002e5b9a0: mov    0x8(%rdx),%r10d
  0x0000000002e5b9a4: shl    $0x3,%r10
  0x0000000002e5b9a8: cmp    %r10,%rax
  0x0000000002e5b9ab: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e5b9b1: data16 xchg %ax,%ax
  0x0000000002e5b9b4: nopl   0x0(%rax,%rax,1)
  0x0000000002e5b9bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e5b9c0: mov    %eax,-0x6000(%rsp)
  0x0000000002e5b9c7: push   %rbp
  0x0000000002e5b9c8: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 622)

  0x0000000002e5b9cc: mov    %r8d,0x20(%rsp)
  0x0000000002e5b9d1: mov    %rdx,%rbp
  0x0000000002e5b9d4: mov    0x10(%rdx),%r8d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5b9d8: mov    0xc(%r12,%r8,8),%r9d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; implicit exception: dispatches to 0x0000000002e5bc6d
  0x0000000002e5b9dd: mov    0xc(%rdx),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 622)

  0x0000000002e5b9e1: mov    %r11d,%ebx
  0x0000000002e5b9e4: sub    %r9d,%ebx
  0x0000000002e5b9e7: mov    %r8,%rcx
  0x0000000002e5b9ea: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5b9ee: inc    %ebx
  0x0000000002e5b9f0: mov    %r11d,%r10d
  0x0000000002e5b9f3: inc    %r10d              ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 622)

  0x0000000002e5b9f6: test   %ebx,%ebx
  0x0000000002e5b9f8: jg     0x0000000002e5ba2e  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5b9fa: mov    %r10d,0xc(%rbp)    ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 623)

  0x0000000002e5b9fe: test   %rcx,%rcx
  0x0000000002e5ba01: je     0x0000000002e5bbf9
  0x0000000002e5ba07: mov    0xc(%rcx),%r8d
  0x0000000002e5ba0b: cmp    %r8d,%r11d
  0x0000000002e5ba0e: jae    0x0000000002e5bc0d
  0x0000000002e5ba14: mov    0x20(%rsp),%r8d
  0x0000000002e5ba19: mov    %r8w,0x10(%rcx,%r11,2)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 622)

  0x0000000002e5ba1f: mov    %rbp,%rax
  0x0000000002e5ba22: add    $0x60,%rsp
  0x0000000002e5ba26: pop    %rbp
  0x0000000002e5ba27: test   %eax,-0x286ba2d(%rip)        # 0x00000000005f0000
                                                ;   {poll_return}
  0x0000000002e5ba2d: retq   
  0x0000000002e5ba2e: mov    %r9d,%ebx
  0x0000000002e5ba31: shl    %ebx               ;*imul
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@6 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5ba33: mov    %ebx,%edi
  0x0000000002e5ba35: sub    %r11d,%edi
  0x0000000002e5ba38: inc    %edi
  0x0000000002e5ba3a: test   %edi,%edi
  0x0000000002e5ba3c: jge    0x0000000002e5bb4a  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@13 (line 130)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5ba42: test   %r10d,%r10d
  0x0000000002e5ba45: jge    0x0000000002e5ba56  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5ba47: test   %r10d,%r10d
  0x0000000002e5ba4a: jl     0x0000000002e5bc60  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@23 (line 133)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5ba50: mov    $0x7fffffff,%r10d  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@37 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5ba56: movslq %r10d,%r11
  0x0000000002e5ba59: shl    %r11
  0x0000000002e5ba5c: add    $0x17,%r11
  0x0000000002e5ba60: mov    %r11,%rdi
  0x0000000002e5ba63: and    $0xfffffffffffffff8,%rdi
  0x0000000002e5ba67: cmp    $0x80000,%r10d
  0x0000000002e5ba6e: ja     0x0000000002e5bba3
  0x0000000002e5ba74: mov    0x60(%r15),%rbx
  0x0000000002e5ba78: mov    %rbx,%rdx
  0x0000000002e5ba7b: add    %rdi,%rdx
  0x0000000002e5ba7e: cmp    0x70(%r15),%rdx
  0x0000000002e5ba82: jae    0x0000000002e5bba3
  0x0000000002e5ba88: mov    %rdx,0x60(%r15)
  0x0000000002e5ba8c: prefetchw 0xc0(%rdx)
  0x0000000002e5ba93: movq   $0x1,(%rbx)
  0x0000000002e5ba9a: prefetchw 0x100(%rdx)
  0x0000000002e5baa1: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x0000000002e5baa8: mov    %r10d,0xc(%rbx)
  0x0000000002e5baac: prefetchw 0x140(%rdx)
  0x0000000002e5bab3: prefetchw 0x180(%rdx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5baba: cmp    %r10d,%r9d
  0x0000000002e5babd: mov    %r10d,%esi
  0x0000000002e5bac0: cmovl  %r9d,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bac4: mov    %rbx,%r13
  0x0000000002e5bac7: add    $0x10,%r13         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bacb: lea    (%r12,%r8,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bacf: shr    $0x3,%r11
  0x0000000002e5bad3: mov    %r11,%rcx
  0x0000000002e5bad6: add    $0xfffffffffffffffe,%rcx
  0x0000000002e5bada: cmp    %esi,%r9d
  0x0000000002e5badd: jb     0x0000000002e5bc25
  0x0000000002e5bae3: cmp    %esi,%r10d
  0x0000000002e5bae6: jb     0x0000000002e5bc25
  0x0000000002e5baec: test   %esi,%esi
  0x0000000002e5baee: jle    0x0000000002e5bc4e
  0x0000000002e5baf4: lea    0x10(%r12,%r8,8),%r9
  0x0000000002e5baf9: cmp    %r10d,%esi
  0x0000000002e5bafc: jl     0x0000000002e5bb5d
  0x0000000002e5bafe: add    $0xfffffffffffffff0,%rdi
  0x0000000002e5bb02: shr    $0x3,%rdi
  0x0000000002e5bb06: mov    %r9,%rcx
  0x0000000002e5bb09: mov    %r13,%rdx
  0x0000000002e5bb0c: mov    %rdi,%r8
  0x0000000002e5bb0f: movabs $0x2d92ca0,%r10
  0x0000000002e5bb19: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bb1c: mov    0xc(%rbp),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 623)

  0x0000000002e5bb20: mov    %rbx,%r8
  0x0000000002e5bb23: shr    $0x3,%r8
  0x0000000002e5bb27: mov    %r8d,0x10(%rbp)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@46 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bb2b: mov    %r11d,%r10d
  0x0000000002e5bb2e: inc    %r10d              ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 623)

  0x0000000002e5bb31: mov    %rbp,%r8
  0x0000000002e5bb34: shr    $0x9,%r8
  0x0000000002e5bb38: mov    $0xeaf2000,%r9d
  0x0000000002e5bb3e: mov    %r12b,(%r9,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@46 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bb42: mov    %rbx,%rcx
  0x0000000002e5bb45: jmpq   0x0000000002e5b9fa
  0x0000000002e5bb4a: add    $0x2,%ebx          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@8 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bb4d: test   %ebx,%ebx
  0x0000000002e5bb4f: jl     0x0000000002e5ba47  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bb55: mov    %ebx,%r10d
  0x0000000002e5bb58: jmpq   0x0000000002e5ba56
  0x0000000002e5bb5d: movslq %esi,%r8
  0x0000000002e5bb60: mov    %r8,%r10
  0x0000000002e5bb63: shl    %r10
  0x0000000002e5bb66: add    $0x10,%r10
  0x0000000002e5bb6a: mov    %r10,%rcx
  0x0000000002e5bb6d: and    $0xfffffffffffffff9,%rcx
  0x0000000002e5bb71: mov    %rbx,%rdi
  0x0000000002e5bb74: add    %rcx,%rdi
  0x0000000002e5bb77: shr    $0x3,%r10
  0x0000000002e5bb7b: sub    %r10,%r11
  0x0000000002e5bb7e: mov    %r11,%rcx
  0x0000000002e5bb81: xor    %rax,%rax
  0x0000000002e5bb84: shl    $0x3,%rcx
  0x0000000002e5bb88: rep rex.W stos %al,%es:(%rdi)
  0x0000000002e5bb8b: mov    %r9,%rcx
  0x0000000002e5bb8e: mov    %r13,%rdx
  0x0000000002e5bb91: movabs $0x2d92980,%r10
  0x0000000002e5bb9b: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bb9e: jmpq   0x0000000002e5bb1c
  0x0000000002e5bba3: mov    %r9d,0x4c(%rsp)
  0x0000000002e5bba8: mov    %r8d,0x48(%rsp)
  0x0000000002e5bbad: mov    %rdi,0x30(%rsp)
  0x0000000002e5bbb2: mov    %r11,0x28(%rsp)
  0x0000000002e5bbb7: mov    %r10d,0x24(%rsp)
  0x0000000002e5bbbc: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002e5bbc6: mov    0x24(%rsp),%r8d
  0x0000000002e5bbcb: mov    %rcx,0x40(%rsp)
  0x0000000002e5bbd0: data16 xchg %ax,%ax
  0x0000000002e5bbd3: callq  0x0000000002dae820  ; OopMap{rbp=Oop [64]=Oop [72]=NarrowOop off=568}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x0000000002e5bbd8: mov    0x24(%rsp),%r10d
  0x0000000002e5bbdd: mov    0x28(%rsp),%r11
  0x0000000002e5bbe2: mov    0x30(%rsp),%rdi
  0x0000000002e5bbe7: mov    0x48(%rsp),%r8d
  0x0000000002e5bbec: mov    0x4c(%rsp),%r9d
  0x0000000002e5bbf1: mov    %rax,%rbx
  0x0000000002e5bbf4: jmpq   0x0000000002e5baba
  0x0000000002e5bbf9: mov    $0xfffffff6,%edx
  0x0000000002e5bbfe: mov    0x20(%rsp),%ebp
  0x0000000002e5bc02: mov    %r11d,0x20(%rsp)
  0x0000000002e5bc07: callq  0x0000000002d857a0  ; OopMap{off=620}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ;   {runtime_call}
  0x0000000002e5bc0c: int3   
  0x0000000002e5bc0d: mov    $0xffffffe4,%edx
  0x0000000002e5bc12: mov    %rcx,0x28(%rsp)
  0x0000000002e5bc17: mov    %r11d,0x24(%rsp)
  0x0000000002e5bc1c: data16 xchg %ax,%ax
  0x0000000002e5bc1f: callq  0x0000000002d857a0  ; OopMap{rbp=Oop [40]=Oop off=644}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ;   {runtime_call}
  0x0000000002e5bc24: int3   
  0x0000000002e5bc25: mov    %r13,%rdi
  0x0000000002e5bc28: xor    %rax,%rax
  0x0000000002e5bc2b: shl    $0x3,%rcx
  0x0000000002e5bc2f: rep rex.W stos %al,%es:(%rdi)
  0x0000000002e5bc32: xor    %r8d,%r8d
  0x0000000002e5bc35: mov    %rbx,%r9
  0x0000000002e5bc38: xor    %edi,%edi
  0x0000000002e5bc3a: mov    %rbx,0x38(%rsp)
  0x0000000002e5bc3f: callq  0x0000000002db2220  ; OopMap{rbp=Oop [56]=Oop off=676}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x0000000002e5bc44: mov    0x38(%rsp),%rbx
  0x0000000002e5bc49: jmpq   0x0000000002e5bb1c
  0x0000000002e5bc4e: mov    %r13,%rdi
  0x0000000002e5bc51: xor    %rax,%rax
  0x0000000002e5bc54: shl    $0x3,%rcx
  0x0000000002e5bc58: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bc5b: jmpq   0x0000000002e5bb1c
  0x0000000002e5bc60: mov    $0x8d,%edx
  0x0000000002e5bc65: xchg   %ax,%ax
  0x0000000002e5bc67: callq  0x0000000002d857a0  ; OopMap{rbp=Oop off=716}
                                                ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x0000000002e5bc6c: int3                      ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bc6d: mov    $0xfffffff6,%edx
  0x0000000002e5bc72: nop
  0x0000000002e5bc73: callq  0x0000000002d857a0  ; OopMap{off=728}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x0000000002e5bc78: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bc79: mov    %rax,%rdx
  0x0000000002e5bc7c: jmp    0x0000000002e5bc81  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bc7e: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@-1 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002e5bc81: add    $0x60,%rsp
  0x0000000002e5bc85: pop    %rbp
  0x0000000002e5bc86: jmpq   0x0000000002db2120  ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@18 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x0000000002e5bc8b: hlt    
  0x0000000002e5bc8c: hlt    
  0x0000000002e5bc8d: hlt    
  0x0000000002e5bc8e: hlt    
  0x0000000002e5bc8f: hlt    
  0x0000000002e5bc90: hlt    
  0x0000000002e5bc91: hlt    
  0x0000000002e5bc92: hlt    
  0x0000000002e5bc93: hlt    
  0x0000000002e5bc94: hlt    
  0x0000000002e5bc95: hlt    
  0x0000000002e5bc96: hlt    
  0x0000000002e5bc97: hlt    
  0x0000000002e5bc98: hlt    
  0x0000000002e5bc99: hlt    
  0x0000000002e5bc9a: hlt    
  0x0000000002e5bc9b: hlt    
  0x0000000002e5bc9c: hlt    
  0x0000000002e5bc9d: hlt    
  0x0000000002e5bc9e: hlt    
  0x0000000002e5bc9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e5bca0: jmpq   0x0000000002daeea0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002e5bca5: callq  0x0000000002e5bcaa
  0x0000000002e5bcaa: subq   $0x5,(%rsp)
  0x0000000002e5bcaf: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e5bcb4: hlt    
  0x0000000002e5bcb5: hlt    
  0x0000000002e5bcb6: hlt    
  0x0000000002e5bcb7: hlt    
<nmethod compile_id='33' compiler='C2' level='4' entry='0x0000000002e5b9a0' size='2168' address='0x0000000002e5b850' relocation_offset='288' insts_offset='336' stub_offset='1104' scopes_data_offset='1168' scopes_pcs_offset='1456' dependencies_offset='2096' handler_table_offset='2104' nul_chk_table_offset='2152' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='6458' iicount='6458' stamp='0.676'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e5b410:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b974e48} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002e5b580: mov    0x8(%rdx),%r10d
  0x0000000002e5b584: shl    $0x3,%r10
  0x0000000002e5b588: cmp    %rax,%r10
  0x0000000002e5b58b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e5b591: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e5b59c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e5b5a0: mov    %eax,-0x6000(%rsp)
  0x0000000002e5b5a7: push   %rbp
  0x0000000002e5b5a8: sub    $0x30,%rsp
  0x0000000002e5b5ac: movabs $0x1bc43028,%r9    ;   {metadata(method data for {method} {0x000000001b974e48} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e5b5b6: mov    0xdc(%r9),%esi
  0x0000000002e5b5bd: add    $0x8,%esi
  0x0000000002e5b5c0: mov    %esi,0xdc(%r9)
  0x0000000002e5b5c7: movabs $0x1b974e40,%r9    ;   {metadata({method} {0x000000001b974e48} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e5b5d1: and    $0x1ff8,%esi
  0x0000000002e5b5d7: cmp    $0x0,%esi
  0x0000000002e5b5da: je     0x0000000002e5b68b  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x0000000002e5b5e0: mov    %rdx,%r9
  0x0000000002e5b5e3: movabs $0x1bc43028,%rsi   ;   {metadata(method data for {method} {0x000000001b974e48} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002e5b5ed: mov    0x8(%r9),%r9d
  0x0000000002e5b5f1: shl    $0x3,%r9
  0x0000000002e5b5f5: cmp    0x110(%rsi),%r9
  0x0000000002e5b5fc: jne    0x0000000002e5b60b
  0x0000000002e5b5fe: addq   $0x1,0x118(%rsi)
  0x0000000002e5b606: jmpq   0x0000000002e5b671
  0x0000000002e5b60b: cmp    0x120(%rsi),%r9
  0x0000000002e5b612: jne    0x0000000002e5b621
  0x0000000002e5b614: addq   $0x1,0x128(%rsi)
  0x0000000002e5b61c: jmpq   0x0000000002e5b671
  0x0000000002e5b621: cmpq   $0x0,0x110(%rsi)
  0x0000000002e5b62c: jne    0x0000000002e5b645
  0x0000000002e5b62e: mov    %r9,0x110(%rsi)
  0x0000000002e5b635: movq   $0x1,0x118(%rsi)
  0x0000000002e5b640: jmpq   0x0000000002e5b671
  0x0000000002e5b645: cmpq   $0x0,0x120(%rsi)
  0x0000000002e5b650: jne    0x0000000002e5b669
  0x0000000002e5b652: mov    %r9,0x120(%rsi)
  0x0000000002e5b659: movq   $0x1,0x128(%rsi)
  0x0000000002e5b664: jmpq   0x0000000002e5b671
  0x0000000002e5b669: addq   $0x1,0x108(%rsi)
  0x0000000002e5b671: mov    $0x0,%r9d          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x0000000002e5b677: callq  0x0000000002d861a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x0000000002e5b67c: and    $0x1,%eax
  0x0000000002e5b67f: add    $0x30,%rsp
  0x0000000002e5b683: pop    %rbp
  0x0000000002e5b684: test   %eax,-0x286b58a(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e5b68a: retq   
  0x0000000002e5b68b: mov    %r9,0x8(%rsp)
  0x0000000002e5b690: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e5b698: callq  0x0000000002e41c20  ; OopMap{rdx=Oop r8=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x0000000002e5b69d: jmpq   0x0000000002e5b5e0
  0x0000000002e5b6a2: nop
  0x0000000002e5b6a3: nop
  0x0000000002e5b6a4: mov    0x2a8(%r15),%rax
  0x0000000002e5b6ab: movabs $0x0,%r10
  0x0000000002e5b6b5: mov    %r10,0x2a8(%r15)
  0x0000000002e5b6bc: movabs $0x0,%r10
  0x0000000002e5b6c6: mov    %r10,0x2b0(%r15)
  0x0000000002e5b6cd: add    $0x30,%rsp
  0x0000000002e5b6d1: pop    %rbp
  0x0000000002e5b6d2: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e5b6d7: hlt    
  0x0000000002e5b6d8: hlt    
  0x0000000002e5b6d9: hlt    
  0x0000000002e5b6da: hlt    
  0x0000000002e5b6db: hlt    
  0x0000000002e5b6dc: hlt    
  0x0000000002e5b6dd: hlt    
  0x0000000002e5b6de: hlt    
  0x0000000002e5b6df: hlt    
[Stub Code]
  0x0000000002e5b6e0: nop                       ;   {no_reloc}
  0x0000000002e5b6e1: nop
  0x0000000002e5b6e2: nop
  0x0000000002e5b6e3: nop
  0x0000000002e5b6e4: nop
  0x0000000002e5b6e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e5b6ef: jmpq   0x0000000002e5b6ef  ;   {runtime_call}
[Exception Handler]
  0x0000000002e5b6f4: callq  0x0000000002e3f3e0  ;   {runtime_call}
  0x0000000002e5b6f9: mov    %rsp,-0x28(%rsp)
  0x0000000002e5b6fe: sub    $0x80,%rsp
  0x0000000002e5b705: mov    %rax,0x78(%rsp)
  0x0000000002e5b70a: mov    %rcx,0x70(%rsp)
  0x0000000002e5b70f: mov    %rdx,0x68(%rsp)
  0x0000000002e5b714: mov    %rbx,0x60(%rsp)
  0x0000000002e5b719: mov    %rbp,0x50(%rsp)
  0x0000000002e5b71e: mov    %rsi,0x48(%rsp)
  0x0000000002e5b723: mov    %rdi,0x40(%rsp)
  0x0000000002e5b728: mov    %r8,0x38(%rsp)
  0x0000000002e5b72d: mov    %r9,0x30(%rsp)
  0x0000000002e5b732: mov    %r10,0x28(%rsp)
  0x0000000002e5b737: mov    %r11,0x20(%rsp)
  0x0000000002e5b73c: mov    %r12,0x18(%rsp)
  0x0000000002e5b741: mov    %r13,0x10(%rsp)
  0x0000000002e5b746: mov    %r14,0x8(%rsp)
  0x0000000002e5b74b: mov    %r15,(%rsp)
  0x0000000002e5b74f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e5b759: movabs $0x2e5b6f9,%rdx    ;   {internal_word}
  0x0000000002e5b763: mov    %rsp,%r8
  0x0000000002e5b766: and    $0xfffffffffffffff0,%rsp
  0x0000000002e5b76a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5b76f: hlt    
[Deopt Handler Code]
  0x0000000002e5b770: movabs $0x2e5b770,%r10    ;   {section_word}
  0x0000000002e5b77a: push   %r10
  0x0000000002e5b77c: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e5b781: hlt    
  0x0000000002e5b782: hlt    
  0x0000000002e5b783: hlt    
  0x0000000002e5b784: hlt    
  0x0000000002e5b785: hlt    
  0x0000000002e5b786: hlt    
  0x0000000002e5b787: hlt    
<nmethod compile_id='30' compiler='C1' level='3' entry='0x0000000002e5b580' size='1040' address='0x0000000002e5b410' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='518' iicount='518' stamp='0.682'/>
<writer thread='21988'/>
<task_queued compile_id='37' method='java/util/ArrayList size ()I' bytes='5' count='256' iicount='256' level='1' stamp='0.682' comment='tiered' hot_count='256'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e5afd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bb2c2e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002e5b120: mov    %eax,-0x6000(%rsp)
  0x0000000002e5b127: push   %rbp
  0x0000000002e5b128: sub    $0x40,%rsp
  0x0000000002e5b12c: movabs $0x1bc46d10,%rcx   ;   {metadata(method data for {method} {0x000000001bb2c2e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002e5b136: mov    0xdc(%rcx),%eax
  0x0000000002e5b13c: add    $0x8,%eax
  0x0000000002e5b13f: mov    %eax,0xdc(%rcx)
  0x0000000002e5b145: movabs $0x1bb2c2e0,%rcx   ;   {metadata({method} {0x000000001bb2c2e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002e5b14f: and    $0x1ff8,%eax
  0x0000000002e5b155: cmp    $0x0,%eax
  0x0000000002e5b158: je     0x0000000002e5b26a  ;*getstatic U
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 755)

  0x0000000002e5b15e: movslq %r8d,%r8
  0x0000000002e5b161: mov    $0x2,%ecx
  0x0000000002e5b166: shl    %cl,%r8
  0x0000000002e5b169: movabs $0x10,%r10
  0x0000000002e5b173: add    %r10,%r8
  0x0000000002e5b176: mov    (%rdx,%r8,1),%eax
  0x0000000002e5b17a: shl    $0x3,%rax
  0x0000000002e5b17e: cmp    $0x0,%rax
  0x0000000002e5b182: jne    0x0000000002e5b19d
  0x0000000002e5b184: movabs $0x1bc46d10,%rdi   ;   {metadata(method data for {method} {0x000000001bb2c2e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002e5b18e: orl    $0x100,0x130(%rdi)
  0x0000000002e5b198: jmpq   0x0000000002e5b25e
  0x0000000002e5b19d: movabs $0x7c00371e8,%rbx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x0000000002e5b1a7: mov    0x8(%rax),%edi
  0x0000000002e5b1aa: shl    $0x3,%rdi
  0x0000000002e5b1ae: cmp    0x30(%rdi),%rbx
  0x0000000002e5b1b2: jne    0x0000000002e5b242
  0x0000000002e5b1b8: movabs $0x1bc46d10,%rdi   ;   {metadata(method data for {method} {0x000000001bb2c2e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002e5b1c2: mov    0x8(%rax),%ebx
  0x0000000002e5b1c5: shl    $0x3,%rbx
  0x0000000002e5b1c9: cmp    0x140(%rdi),%rbx
  0x0000000002e5b1d0: jne    0x0000000002e5b1df
  0x0000000002e5b1d2: addq   $0x1,0x148(%rdi)
  0x0000000002e5b1da: jmpq   0x0000000002e5b25e
  0x0000000002e5b1df: cmp    0x150(%rdi),%rbx
  0x0000000002e5b1e6: jne    0x0000000002e5b1f5
  0x0000000002e5b1e8: addq   $0x1,0x158(%rdi)
  0x0000000002e5b1f0: jmpq   0x0000000002e5b25e
  0x0000000002e5b1f5: cmpq   $0x0,0x140(%rdi)
  0x0000000002e5b200: jne    0x0000000002e5b219
  0x0000000002e5b202: mov    %rbx,0x140(%rdi)
  0x0000000002e5b209: movq   $0x1,0x148(%rdi)
  0x0000000002e5b214: jmpq   0x0000000002e5b25e
  0x0000000002e5b219: cmpq   $0x0,0x150(%rdi)
  0x0000000002e5b224: jne    0x0000000002e5b23d
  0x0000000002e5b226: mov    %rbx,0x150(%rdi)
  0x0000000002e5b22d: movq   $0x1,0x158(%rdi)
  0x0000000002e5b238: jmpq   0x0000000002e5b25e
  0x0000000002e5b23d: jmpq   0x0000000002e5b25e
  0x0000000002e5b242: movabs $0x1bc46d10,%rdi   ;   {metadata(method data for {method} {0x000000001bb2c2e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002e5b24c: subq   $0x1,0x138(%rdi)
  0x0000000002e5b254: jmpq   0x0000000002e5b281
  0x0000000002e5b259: jmpq   0x0000000002e5b25e  ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)

  0x0000000002e5b25e: add    $0x40,%rsp
  0x0000000002e5b262: pop    %rbp
  0x0000000002e5b263: test   %eax,-0x286b169(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e5b269: retq   
  0x0000000002e5b26a: mov    %rcx,0x8(%rsp)
  0x0000000002e5b26f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e5b277: callq  0x0000000002e41c20  ; OopMap{rdx=Oop off=348}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ;   {runtime_call}
  0x0000000002e5b27c: jmpq   0x0000000002e5b15e
  0x0000000002e5b281: mov    %rax,(%rsp)
  0x0000000002e5b285: callq  0x0000000002e3f740  ; OopMap{off=362}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ;   {runtime_call}
  0x0000000002e5b28a: nop
  0x0000000002e5b28b: nop
  0x0000000002e5b28c: mov    0x2a8(%r15),%rax
  0x0000000002e5b293: movabs $0x0,%r10
  0x0000000002e5b29d: mov    %r10,0x2a8(%r15)
  0x0000000002e5b2a4: movabs $0x0,%r10
  0x0000000002e5b2ae: mov    %r10,0x2b0(%r15)
  0x0000000002e5b2b5: add    $0x40,%rsp
  0x0000000002e5b2b9: pop    %rbp
  0x0000000002e5b2ba: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e5b2bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e5b2c0: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e5b2c5: mov    %rsp,-0x28(%rsp)
  0x0000000002e5b2ca: sub    $0x80,%rsp
  0x0000000002e5b2d1: mov    %rax,0x78(%rsp)
  0x0000000002e5b2d6: mov    %rcx,0x70(%rsp)
  0x0000000002e5b2db: mov    %rdx,0x68(%rsp)
  0x0000000002e5b2e0: mov    %rbx,0x60(%rsp)
  0x0000000002e5b2e5: mov    %rbp,0x50(%rsp)
  0x0000000002e5b2ea: mov    %rsi,0x48(%rsp)
  0x0000000002e5b2ef: mov    %rdi,0x40(%rsp)
  0x0000000002e5b2f4: mov    %r8,0x38(%rsp)
  0x0000000002e5b2f9: mov    %r9,0x30(%rsp)
  0x0000000002e5b2fe: mov    %r10,0x28(%rsp)
  0x0000000002e5b303: mov    %r11,0x20(%rsp)
  0x0000000002e5b308: mov    %r12,0x18(%rsp)
  0x0000000002e5b30d: mov    %r13,0x10(%rsp)
  0x0000000002e5b312: mov    %r14,0x8(%rsp)
  0x0000000002e5b317: mov    %r15,(%rsp)
  0x0000000002e5b31b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e5b325: movabs $0x2e5b2c5,%rdx    ;   {internal_word}
  0x0000000002e5b32f: mov    %rsp,%r8
  0x0000000002e5b332: and    $0xfffffffffffffff0,%rsp
  0x0000000002e5b336: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5b33b: hlt    
[Deopt Handler Code]
  0x0000000002e5b33c: movabs $0x2e5b33c,%r10    ;   {section_word}
  0x0000000002e5b346: push   %r10
  0x0000000002e5b348: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e5b34d: hlt    
  0x0000000002e5b34e: hlt    
  0x0000000002e5b34f: hlt    
<nmethod compile_id='35' compiler='C1' level='3' entry='0x0000000002e5b120' size='1048' address='0x0000000002e5afd0' relocation_offset='288' insts_offset='336' stub_offset='752' scopes_data_offset='904' scopes_pcs_offset='944' dependencies_offset='1040' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='388' iicount='388' stamp='0.689'/>
Decoding compiled method 0x0000000002e5acd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001ba3d1d0} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ArrayList&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002e5ae20: mov    0x8(%rdx),%r10d
  0x0000000002e5ae24: shl    $0x3,%r10
  0x0000000002e5ae28: cmp    %rax,%r10
  0x0000000002e5ae2b: jne    0x0000000002d85f60  ;   {runtime_call}
  0x0000000002e5ae31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e5ae3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e5ae40: mov    %eax,-0x6000(%rsp)
  0x0000000002e5ae47: push   %rbp
  0x0000000002e5ae48: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 278)

  0x0000000002e5ae4c: mov    0x10(%rdx),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)

  0x0000000002e5ae4f: add    $0x30,%rsp
  0x0000000002e5ae53: pop    %rbp
  0x0000000002e5ae54: test   %eax,-0x286ad5a(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e5ae5a: retq   
  0x0000000002e5ae5b: nop
  0x0000000002e5ae5c: nop
  0x0000000002e5ae5d: mov    0x2a8(%r15),%rax
  0x0000000002e5ae64: movabs $0x0,%r10
  0x0000000002e5ae6e: mov    %r10,0x2a8(%r15)
  0x0000000002e5ae75: movabs $0x0,%r10
  0x0000000002e5ae7f: mov    %r10,0x2b0(%r15)
  0x0000000002e5ae86: add    $0x30,%rsp
  0x0000000002e5ae8a: pop    %rbp
  0x0000000002e5ae8b: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e5ae90: hlt    
  0x0000000002e5ae91: hlt    
  0x0000000002e5ae92: hlt    
  0x0000000002e5ae93: hlt    
  0x0000000002e5ae94: hlt    
  0x0000000002e5ae95: hlt    
  0x0000000002e5ae96: hlt    
  0x0000000002e5ae97: hlt    
  0x0000000002e5ae98: hlt    
  0x0000000002e5ae99: hlt    
  0x0000000002e5ae9a: hlt    
  0x0000000002e5ae9b: hlt    
  0x0000000002e5ae9c: hlt    
  0x0000000002e5ae9d: hlt    
  0x0000000002e5ae9e: hlt    
  0x0000000002e5ae9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e5aea0: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e5aea5: mov    %rsp,-0x28(%rsp)
  0x0000000002e5aeaa: sub    $0x80,%rsp
  0x0000000002e5aeb1: mov    %rax,0x78(%rsp)
  0x0000000002e5aeb6: mov    %rcx,0x70(%rsp)
  0x0000000002e5aebb: mov    %rdx,0x68(%rsp)
  0x0000000002e5aec0: mov    %rbx,0x60(%rsp)
  0x0000000002e5aec5: mov    %rbp,0x50(%rsp)
  0x0000000002e5aeca: mov    %rsi,0x48(%rsp)
  0x0000000002e5aecf: mov    %rdi,0x40(%rsp)
  0x0000000002e5aed4: mov    %r8,0x38(%rsp)
  0x0000000002e5aed9: mov    %r9,0x30(%rsp)
  0x0000000002e5aede: mov    %r10,0x28(%rsp)
  0x0000000002e5aee3: mov    %r11,0x20(%rsp)
  0x0000000002e5aee8: mov    %r12,0x18(%rsp)
  0x0000000002e5aeed: mov    %r13,0x10(%rsp)
  0x0000000002e5aef2: mov    %r14,0x8(%rsp)
  0x0000000002e5aef7: mov    %r15,(%rsp)
  0x0000000002e5aefb: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e5af05: movabs $0x2e5aea5,%rdx    ;   {internal_word}
  0x0000000002e5af0f: mov    %rsp,%r8
  0x0000000002e5af12: and    $0xfffffffffffffff0,%rsp
  0x0000000002e5af16: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5af1b: hlt    
[Deopt Handler Code]
  0x0000000002e5af1c: movabs $0x2e5af1c,%r10    ;   {section_word}
  0x0000000002e5af26: push   %r10
  0x0000000002e5af28: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e5af2d: hlt    
  0x0000000002e5af2e: hlt    
  0x0000000002e5af2f: hlt    
<nmethod compile_id='37' compiler='C1' level='1' entry='0x0000000002e5ae20' size='704' address='0x0000000002e5acd0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/util/ArrayList size ()I' bytes='5' count='290' iicount='290' stamp='0.693'/>
<writer thread='21988'/>
<task_queued compile_id='38' method='cn/itcast/jvm/t4/Demo4_2 add (II)I' bytes='4' count='256' iicount='256' level='3' stamp='0.693' comment='tiered' hot_count='256'/>
<writer thread='12632'/>
Decoding compiled method 0x0000000002e5a9d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bd72ca0} &apos;add&apos; &apos;(II)I&apos; in &apos;cn/itcast/jvm/t4/Demo4_2&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002e5ab20: mov    %eax,-0x6000(%rsp)
  0x0000000002e5ab27: push   %rbp
  0x0000000002e5ab28: sub    $0x30,%rsp
  0x0000000002e5ab2c: movabs $0x1bd735c0,%rax   ;   {metadata(method data for {method} {0x000000001bd72ca0} &apos;add&apos; &apos;(II)I&apos; in &apos;cn/itcast/jvm/t4/Demo4_2&apos;)}
  0x0000000002e5ab36: mov    0xdc(%rax),%esi
  0x0000000002e5ab3c: add    $0x8,%esi
  0x0000000002e5ab3f: mov    %esi,0xdc(%rax)
  0x0000000002e5ab45: movabs $0x1bd72c98,%rax   ;   {metadata({method} {0x000000001bd72ca0} &apos;add&apos; &apos;(II)I&apos; in &apos;cn/itcast/jvm/t4/Demo4_2&apos;)}
  0x0000000002e5ab4f: and    $0x1ff8,%esi
  0x0000000002e5ab55: cmp    $0x0,%esi
  0x0000000002e5ab58: je     0x0000000002e5ab70  ;*iload_0
                                                ; - cn.itcast.jvm.t4.Demo4_2::add@0 (line 23)

  0x0000000002e5ab5e: add    %r8d,%edx
  0x0000000002e5ab61: mov    %rdx,%rax
  0x0000000002e5ab64: add    $0x30,%rsp
  0x0000000002e5ab68: pop    %rbp
  0x0000000002e5ab69: test   %eax,-0x286aa6f(%rip)        # 0x00000000005f0100
                                                ;   {poll_return}
  0x0000000002e5ab6f: retq   
  0x0000000002e5ab70: mov    %rax,0x8(%rsp)
  0x0000000002e5ab75: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e5ab7d: callq  0x0000000002e41c20  ; OopMap{off=98}
                                                ;*synchronization entry
                                                ; - cn.itcast.jvm.t4.Demo4_2::add@-1 (line 23)
                                                ;   {runtime_call}
  0x0000000002e5ab82: jmp    0x0000000002e5ab5e
  0x0000000002e5ab84: nop
  0x0000000002e5ab85: nop
  0x0000000002e5ab86: mov    0x2a8(%r15),%rax
  0x0000000002e5ab8d: movabs $0x0,%r10
  0x0000000002e5ab97: mov    %r10,0x2a8(%r15)
  0x0000000002e5ab9e: movabs $0x0,%r10
  0x0000000002e5aba8: mov    %r10,0x2b0(%r15)
  0x0000000002e5abaf: add    $0x30,%rsp
  0x0000000002e5abb3: pop    %rbp
  0x0000000002e5abb4: jmpq   0x0000000002db1720  ;   {runtime_call}
  0x0000000002e5abb9: hlt    
  0x0000000002e5abba: hlt    
  0x0000000002e5abbb: hlt    
  0x0000000002e5abbc: hlt    
  0x0000000002e5abbd: hlt    
  0x0000000002e5abbe: hlt    
  0x0000000002e5abbf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e5abc0: callq  0x0000000002e3f3e0  ;   {no_reloc}
  0x0000000002e5abc5: mov    %rsp,-0x28(%rsp)
  0x0000000002e5abca: sub    $0x80,%rsp
  0x0000000002e5abd1: mov    %rax,0x78(%rsp)
  0x0000000002e5abd6: mov    %rcx,0x70(%rsp)
  0x0000000002e5abdb: mov    %rdx,0x68(%rsp)
  0x0000000002e5abe0: mov    %rbx,0x60(%rsp)
  0x0000000002e5abe5: mov    %rbp,0x50(%rsp)
  0x0000000002e5abea: mov    %rsi,0x48(%rsp)
  0x0000000002e5abef: mov    %rdi,0x40(%rsp)
  0x0000000002e5abf4: mov    %r8,0x38(%rsp)
  0x0000000002e5abf9: mov    %r9,0x30(%rsp)
  0x0000000002e5abfe: mov    %r10,0x28(%rsp)
  0x0000000002e5ac03: mov    %r11,0x20(%rsp)
  0x0000000002e5ac08: mov    %r12,0x18(%rsp)
  0x0000000002e5ac0d: mov    %r13,0x10(%rsp)
  0x0000000002e5ac12: mov    %r14,0x8(%rsp)
  0x0000000002e5ac17: mov    %r15,(%rsp)
  0x0000000002e5ac1b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002e5ac25: movabs $0x2e5abc5,%rdx    ;   {internal_word}
  0x0000000002e5ac2f: mov    %rsp,%r8
  0x0000000002e5ac32: and    $0xfffffffffffffff0,%rsp
  0x0000000002e5ac36: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002e5ac3b: hlt    
[Deopt Handler Code]
  0x0000000002e5ac3c: movabs $0x2e5ac3c,%r10    ;   {section_word}
  0x0000000002e5ac46: push   %r10
  0x0000000002e5ac48: jmpq   0x0000000002d87600  ;   {runtime_call}
  0x0000000002e5ac4d: hlt    
  0x0000000002e5ac4e: hlt    
  0x0000000002e5ac4f: hlt    
<nmethod compile_id='38' compiler='C1' level='3' entry='0x0000000002e5ab20' size='752' address='0x0000000002e5a9d0' relocation_offset='288' insts_offset='336' stub_offset='496' scopes_data_offset='656' scopes_pcs_offset='680' dependencies_offset='744' oops_offset='640' method='cn/itcast/jvm/t4/Demo4_2 add (II)I' bytes='4' count='3000' iicount='3000' stamp='0.697'/>
<writer thread='20640'/>
<destroy_vm stamp='0.698'/>
<tty_done stamp='1.039'/>
</tty>
<compilation_log thread='12632'>
<start_compile_thread name='C1 CompilerThread2' thread='12632' process='23300' stamp='0.271'/>
<task compile_id='3' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4493' iicount='4493' level='3' stamp='0.272'>
<phase name='buildIR' stamp='0.272'>
<type id='711' name='void'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<method id='819' holder='716' name='&lt;init&gt;' return='711' flags='1' bytes='1' iicount='4493'/>
<parse method='819'  stamp='0.272'>
<parse_done stamp='0.272'/>
</parse>
<phase name='optimize_blocks' stamp='0.272'>
<phase_done name='optimize_blocks' stamp='0.272'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.272'>
<phase_done name='rangeCheckElimination' stamp='0.272'/>
</phase>
<phase name='optimize_null_checks' stamp='0.272'>
<phase_done name='optimize_null_checks' stamp='0.272'/>
</phase>
<phase_done name='buildIR' stamp='0.272'/>
</phase>
<phase name='emit_lir' stamp='0.272'>
<phase name='lirGeneration' stamp='0.272'>
<phase_done name='lirGeneration' stamp='0.272'/>
</phase>
<phase name='linearScan' stamp='0.272'>
<phase_done name='linearScan' stamp='0.272'/>
</phase>
<phase_done name='emit_lir' stamp='0.272'/>
</phase>
<phase name='codeemit' stamp='0.272'>
<phase_done name='codeemit' stamp='0.272'/>
</phase>
<phase name='codeinstall' stamp='0.272'>
<phase_done name='codeinstall' stamp='0.276'/>
</phase>
<code_cache total_blobs='232' nmethods='2' adapters='145' free_code_cache='250600448'/>
<task_done success='1' nmsize='336' count='4498' stamp='0.276'/>
</task>
<task compile_id='2' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='260' iicount='260' level='3' stamp='0.276'>
<phase name='buildIR' stamp='0.276'>
<type id='711' name='void'/>
<klass id='782' name='java/lang/StringBuilder' flags='17'/>
<method id='819' holder='782' name='&lt;init&gt;' return='711' flags='1' bytes='7' iicount='260'/>
<parse method='819'  stamp='0.276'>
<bc code='183' bci='3'/>
<type id='709' name='int'/>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='821' holder='780' name='&lt;init&gt;' return='711' arguments='709' flags='0' bytes='12' iicount='422'/>
<call method='821' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<bc code='183' bci='1'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<method id='823' holder='716' name='&lt;init&gt;' return='711' flags='1' bytes='1' compile_id='3' compiler='C1' level='3' iicount='4498'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<parse_done stamp='0.277'/>
</parse>
<parse_done stamp='0.277'/>
</parse>
<parse_done stamp='0.277'/>
</parse>
<phase name='optimize_blocks' stamp='0.277'>
<phase_done name='optimize_blocks' stamp='0.277'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.277'>
<phase_done name='rangeCheckElimination' stamp='0.277'/>
</phase>
<phase name='optimize_null_checks' stamp='0.277'>
<phase_done name='optimize_null_checks' stamp='0.277'/>
</phase>
<phase_done name='buildIR' stamp='0.277'/>
</phase>
<phase name='emit_lir' stamp='0.277'>
<phase name='lirGeneration' stamp='0.277'>
<phase_done name='lirGeneration' stamp='0.277'/>
</phase>
<phase name='linearScan' stamp='0.277'>
<phase_done name='linearScan' stamp='0.277'/>
</phase>
<phase_done name='emit_lir' stamp='0.277'/>
</phase>
<phase name='codeemit' stamp='0.277'>
<phase_done name='codeemit' stamp='0.277'/>
</phase>
<phase name='codeinstall' stamp='0.277'>
<phase_done name='codeinstall' stamp='0.284'/>
</phase>
<code_cache total_blobs='233' nmethods='3' adapters='145' free_code_cache='250599104'/>
<task_done success='1' nmsize='688' count='260' inlined_bytes='13' stamp='0.284'/>
</task>
<task compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='757' backedge_count='14372' iicount='757' level='3' stamp='0.285'>
<phase name='buildIR' stamp='0.285'>
<type id='709' name='int'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='hashCode' return='709' flags='1' bytes='55' iicount='757'/>
<parse method='819'  stamp='0.285'>
<parse_done stamp='0.285'/>
</parse>
<phase name='optimize_blocks' stamp='0.285'>
<phase_done name='optimize_blocks' stamp='0.285'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.285'>
<phase_done name='rangeCheckElimination' stamp='0.285'/>
</phase>
<phase name='optimize_null_checks' stamp='0.285'>
<phase_done name='optimize_null_checks' stamp='0.285'/>
</phase>
<phase_done name='buildIR' stamp='0.285'/>
</phase>
<phase name='emit_lir' stamp='0.285'>
<phase name='lirGeneration' stamp='0.285'>
<phase_done name='lirGeneration' stamp='0.285'/>
</phase>
<phase name='linearScan' stamp='0.285'>
<phase_done name='linearScan' stamp='0.285'/>
</phase>
<phase_done name='emit_lir' stamp='0.286'/>
</phase>
<phase name='codeemit' stamp='0.286'>
<phase_done name='codeemit' stamp='0.286'/>
</phase>
<phase name='codeinstall' stamp='0.286'>
<phase_done name='codeinstall' stamp='0.293'/>
</phase>
<code_cache total_blobs='241' nmethods='4' adapters='152' free_code_cache='250593664'/>
<task_done success='1' nmsize='656' count='757' backedge_count='14372' stamp='0.293'/>
</task>
<task compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='640' backedge_count='2967' iicount='640' level='3' stamp='0.295'>
<phase name='buildIR' stamp='0.295'>
<type id='703' name='boolean'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='equals' return='703' arguments='716' flags='1' bytes='81' iicount='640'/>
<parse method='819'  stamp='0.295'>
<parse_done stamp='0.295'/>
</parse>
<phase name='optimize_blocks' stamp='0.295'>
<phase_done name='optimize_blocks' stamp='0.295'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.295'>
<phase_done name='rangeCheckElimination' stamp='0.295'/>
</phase>
<phase name='optimize_null_checks' stamp='0.295'>
<phase_done name='optimize_null_checks' stamp='0.295'/>
</phase>
<phase_done name='buildIR' stamp='0.295'/>
</phase>
<phase name='emit_lir' stamp='0.295'>
<phase name='lirGeneration' stamp='0.295'>
<phase_done name='lirGeneration' stamp='0.295'/>
</phase>
<phase name='linearScan' stamp='0.295'>
<phase_done name='linearScan' stamp='0.295'/>
</phase>
<phase_done name='emit_lir' stamp='0.295'/>
</phase>
<phase name='codeemit' stamp='0.295'>
<phase_done name='codeemit' stamp='0.295'/>
</phase>
<phase name='codeinstall' stamp='0.295'>
<phase_done name='codeinstall' stamp='0.309'/>
</phase>
<code_cache total_blobs='245' nmethods='5' adapters='155' free_code_cache='250589568'/>
<task_done success='1' nmsize='1360' count='640' backedge_count='2967' stamp='0.309'/>
</task>
<task compile_id='6' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='0.310'>
<phase name='buildIR' stamp='0.310'>
<klass id='821' name='[Lsun/instrument/TransformerManager$TransformerInfo;' flags='1042'/>
<klass id='819' name='sun/instrument/TransformerManager' flags='1'/>
<method id='822' holder='819' name='getSnapshotTransformerList' return='821' flags='2' bytes='5' iicount='128'/>
<parse method='822'  stamp='0.310'>
<parse_done stamp='0.310'/>
</parse>
<phase name='optimize_blocks' stamp='0.310'>
<phase_done name='optimize_blocks' stamp='0.310'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.310'>
<phase_done name='rangeCheckElimination' stamp='0.310'/>
</phase>
<phase name='optimize_null_checks' stamp='0.310'>
<phase_done name='optimize_null_checks' stamp='0.310'/>
</phase>
<phase_done name='buildIR' stamp='0.310'/>
</phase>
<phase name='emit_lir' stamp='0.310'>
<phase name='lirGeneration' stamp='0.310'>
<phase_done name='lirGeneration' stamp='0.310'/>
</phase>
<phase name='linearScan' stamp='0.310'>
<phase_done name='linearScan' stamp='0.310'/>
</phase>
<phase_done name='emit_lir' stamp='0.310'/>
</phase>
<phase name='codeemit' stamp='0.310'>
<phase_done name='codeemit' stamp='0.310'/>
</phase>
<phase name='codeinstall' stamp='0.310'>
<phase_done name='codeinstall' stamp='0.314'/>
</phase>
<code_cache total_blobs='250' nmethods='6' adapters='158' free_code_cache='250555136'/>
<task_done success='1' nmsize='272' count='131' stamp='0.314'/>
</task>
<task compile_id='9' method='java/lang/Math min (II)I' bytes='11' count='1799' iicount='1799' level='3' stamp='0.317'>
<phase name='buildIR' stamp='0.317'>
<type id='709' name='int'/>
<klass id='819' name='java/lang/Math' flags='17'/>
<method id='820' holder='819' name='min' return='709' arguments='709 709' flags='9' bytes='11' iicount='1799'/>
<parse method='820'  stamp='0.317'>
<parse_done stamp='0.317'/>
</parse>
<phase name='optimize_blocks' stamp='0.317'>
<phase_done name='optimize_blocks' stamp='0.317'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.317'>
<phase_done name='rangeCheckElimination' stamp='0.317'/>
</phase>
<phase name='optimize_null_checks' stamp='0.317'>
<phase_done name='optimize_null_checks' stamp='0.317'/>
</phase>
<phase_done name='buildIR' stamp='0.317'/>
</phase>
<phase name='emit_lir' stamp='0.317'>
<phase name='lirGeneration' stamp='0.317'>
<phase_done name='lirGeneration' stamp='0.317'/>
</phase>
<phase name='linearScan' stamp='0.317'>
<phase_done name='linearScan' stamp='0.317'/>
</phase>
<phase_done name='emit_lir' stamp='0.317'/>
</phase>
<phase name='codeemit' stamp='0.317'>
<phase_done name='codeemit' stamp='0.317'/>
</phase>
<phase name='codeinstall' stamp='0.317'>
<phase_done name='codeinstall' stamp='0.322'/>
</phase>
<code_cache total_blobs='254' nmethods='7' adapters='160' free_code_cache='250547776'/>
<task_done success='1' nmsize='400' count='1804' stamp='0.322'/>
</task>
<task compile_id='8' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='771' iicount='771' level='3' stamp='0.322'>
<phase name='buildIR' stamp='0.327'>
<type id='711' name='void'/>
<klass id='808' name='[C' flags='1041'/>
<type id='709' name='int'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='&lt;init&gt;' return='711' arguments='808 709 709' flags='1' bytes='82' iicount='777'/>
<parse method='819'  stamp='0.327'>
<bc code='183' bci='1'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<method id='821' holder='716' name='&lt;init&gt;' return='711' flags='1' bytes='1' compile_id='3' compiler='C1' level='3' iicount='4608'/>
<call method='821' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<parse_done stamp='0.327'/>
</parse>
<bc code='183' bci='13'/>
<klass id='823' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='824' holder='823' name='&lt;init&gt;' return='711' arguments='709' unloaded='1'/>
<call method='824' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='824' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='824' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='826' name='java/util/Arrays' flags='1'/>
<method id='827' holder='826' name='copyOfRange' return='808' arguments='808 709 709' flags='9' bytes='63' iicount='898'/>
<call method='827' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.327'/>
</parse>
<phase name='optimize_blocks' stamp='0.327'>
<phase_done name='optimize_blocks' stamp='0.327'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.327'>
<phase_done name='rangeCheckElimination' stamp='0.327'/>
</phase>
<phase name='optimize_null_checks' stamp='0.327'>
<phase_done name='optimize_null_checks' stamp='0.327'/>
</phase>
<phase_done name='buildIR' stamp='0.327'/>
</phase>
<phase name='emit_lir' stamp='0.327'>
<phase name='lirGeneration' stamp='0.327'>
<phase_done name='lirGeneration' stamp='0.327'/>
</phase>
<phase name='linearScan' stamp='0.327'>
<phase_done name='linearScan' stamp='0.327'/>
</phase>
<phase_done name='emit_lir' stamp='0.327'/>
</phase>
<phase name='codeemit' stamp='0.327'>
<phase_done name='codeemit' stamp='0.327'/>
</phase>
<phase name='codeinstall' stamp='0.327'>
<phase_done name='codeinstall' stamp='0.344'/>
</phase>
<code_cache total_blobs='255' nmethods='9' adapters='160' free_code_cache='250549440'/>
<task_done success='1' nmsize='1272' count='902' inlined_bytes='1' stamp='0.344'/>
</task>
<task compile_id='12' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4803' iicount='4803' level='1' stamp='0.344'>
<phase name='buildIR' stamp='0.344'>
<type id='711' name='void'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<method id='819' holder='716' name='&lt;init&gt;' return='711' flags='1' bytes='1' compile_id='3' compiler='C1' level='3' iicount='4803'/>
<parse method='819'  stamp='0.344'>
<parse_done stamp='0.344'/>
</parse>
<phase name='optimize_blocks' stamp='0.344'>
<phase_done name='optimize_blocks' stamp='0.344'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.344'>
<phase_done name='rangeCheckElimination' stamp='0.344'/>
</phase>
<phase name='optimize_null_checks' stamp='0.344'>
<phase_done name='optimize_null_checks' stamp='0.344'/>
</phase>
<phase_done name='buildIR' stamp='0.344'/>
</phase>
<phase name='emit_lir' stamp='0.344'>
<phase name='lirGeneration' stamp='0.344'>
<phase_done name='lirGeneration' stamp='0.344'/>
</phase>
<phase name='linearScan' stamp='0.344'>
<phase_done name='linearScan' stamp='0.344'/>
</phase>
<phase_done name='emit_lir' stamp='0.344'/>
</phase>
<phase name='codeemit' stamp='0.344'>
<phase_done name='codeemit' stamp='0.344'/>
</phase>
<phase name='codeinstall' stamp='0.344'>
<phase_done name='codeinstall' stamp='0.347'/>
</phase>
<code_cache total_blobs='256' nmethods='10' adapters='160' free_code_cache='250548672'/>
<task_done success='1' nmsize='272' count='4803' stamp='0.347'/>
</task>
<task compile_id='10' method='java/lang/String indexOf (II)I' bytes='70' count='836' backedge_count='32256' iicount='836' level='2' stamp='0.347'>
<phase name='buildIR' stamp='0.347'>
<type id='709' name='int'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='indexOf' return='709' arguments='709 709' flags='1' bytes='70' iicount='836'/>
<parse method='819'  stamp='0.348'>
<bc code='183' bci='66'/>
<method id='821' holder='717' name='indexOfSupplementary' return='709' arguments='709 709' flags='2' bytes='71' iicount='1'/>
<call method='821' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.348'/>
</parse>
<phase name='optimize_blocks' stamp='0.348'>
<phase_done name='optimize_blocks' stamp='0.348'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.348'>
<phase_done name='rangeCheckElimination' stamp='0.348'/>
</phase>
<phase name='optimize_null_checks' stamp='0.348'>
<phase_done name='optimize_null_checks' stamp='0.348'/>
</phase>
<phase_done name='buildIR' stamp='0.348'/>
</phase>
<phase name='emit_lir' stamp='0.348'>
<phase name='lirGeneration' stamp='0.348'>
<phase_done name='lirGeneration' stamp='0.348'/>
</phase>
<phase name='linearScan' stamp='0.348'>
<phase_done name='linearScan' stamp='0.348'/>
</phase>
<phase_done name='emit_lir' stamp='0.348'/>
</phase>
<phase name='codeemit' stamp='0.348'>
<phase_done name='codeemit' stamp='0.348'/>
</phase>
<phase name='codeinstall' stamp='0.348'>
<phase_done name='codeinstall' stamp='0.357'/>
</phase>
<code_cache total_blobs='260' nmethods='11' adapters='163' free_code_cache='250545344'/>
<task_done success='1' nmsize='616' count='836' backedge_count='32256' stamp='0.357'/>
</task>
<task compile_id='14' method='java/lang/String indexOf (I)I' bytes='7' count='627' iicount='627' level='3' stamp='0.357'>
<phase name='buildIR' stamp='0.357'>
<type id='709' name='int'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='indexOf' return='709' arguments='709' flags='1' bytes='7' iicount='627'/>
<parse method='819'  stamp='0.357'>
<bc code='182' bci='3'/>
<method id='821' holder='717' name='indexOf' return='709' arguments='709 709' flags='1' bytes='70' compile_id='10' compiler='C1' level='2' iicount='836'/>
<call method='821' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.357'/>
</parse>
<phase name='optimize_blocks' stamp='0.357'>
<phase_done name='optimize_blocks' stamp='0.357'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.357'>
<phase_done name='rangeCheckElimination' stamp='0.357'/>
</phase>
<phase name='optimize_null_checks' stamp='0.357'>
<phase_done name='optimize_null_checks' stamp='0.357'/>
</phase>
<phase_done name='buildIR' stamp='0.357'/>
</phase>
<phase name='emit_lir' stamp='0.357'>
<phase name='lirGeneration' stamp='0.357'>
<phase_done name='lirGeneration' stamp='0.357'/>
</phase>
<phase name='linearScan' stamp='0.357'>
<phase_done name='linearScan' stamp='0.357'/>
</phase>
<phase_done name='emit_lir' stamp='0.357'/>
</phase>
<phase name='codeemit' stamp='0.357'>
<phase_done name='codeemit' stamp='0.357'/>
</phase>
<phase name='codeinstall' stamp='0.357'>
<phase_done name='codeinstall' stamp='0.363'/>
</phase>
<code_cache total_blobs='265' nmethods='12' adapters='166' free_code_cache='250537344'/>
<task_done success='1' nmsize='520' count='741' stamp='0.363'/>
</task>
<task compile_id='13' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='1025' iicount='1025' level='3' stamp='0.365'>
<phase name='buildIR' stamp='0.365'>
<klass id='808' name='[C' flags='1041'/>
<type id='709' name='int'/>
<klass id='819' name='java/util/Arrays' flags='1'/>
<method id='820' holder='819' name='copyOfRange' return='808' arguments='808 709 709' flags='9' bytes='63' iicount='1025'/>
<parse method='820'  stamp='0.365'>
<bc code='183' bci='16'/>
<type id='711' name='void'/>
<klass id='782' name='java/lang/StringBuilder' flags='17'/>
<method id='823' holder='782' name='&lt;init&gt;' return='711' flags='1' bytes='7' compile_id='2' compiler='C1' level='3' iicount='266'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<bc code='183' bci='3'/>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='825' holder='780' name='&lt;init&gt;' return='711' arguments='709' flags='0' bytes='12' iicount='428'/>
<call method='825' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='825'>
<bc code='183' bci='1'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<method id='827' holder='716' name='&lt;init&gt;' return='711' flags='1' bytes='1' compile_id='12' compiler='C1' level='1' iicount='4816'/>
<call method='827' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='827'>
<parse_done stamp='0.365'/>
</parse>
<parse_done stamp='0.366'/>
</parse>
<parse_done stamp='0.366'/>
</parse>
<bc code='182' bci='20'/>
<method id='829' holder='782' name='append' return='782' arguments='709' flags='1' bytes='8' iicount='6'/>
<call method='829' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='829'>
<bc code='183' bci='2'/>
<method id='831' holder='780' name='append' return='780' arguments='709' flags='1' bytes='62' iicount='6'/>
<call method='831' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.366'/>
</parse>
<bc code='182' bci='25'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='834' holder='782' name='append' return='782' arguments='717' flags='1' bytes='8' iicount='618'/>
<call method='834' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='183' bci='2'/>
<method id='836' holder='780' name='append' return='780' arguments='717' flags='1' bytes='50' iicount='745'/>
<call method='836' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.366'/>
</parse>
<bc code='182' bci='29'/>
<call method='829' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='829'>
<bc code='183' bci='2'/>
<call method='831' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.366'/>
</parse>
<bc code='182' bci='32'/>
<method id='838' holder='782' name='toString' return='717' flags='1' bytes='17' iicount='313'/>
<call method='838' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='13'/>
<method id='840' holder='717' name='&lt;init&gt;' return='711' arguments='808 709 709' flags='1' bytes='82' compile_id='8' compiler='C1' level='3' iicount='915'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.366'/>
</parse>
<bc code='183' bci='35'/>
<klass id='822' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='842' holder='822' name='&lt;init&gt;' return='711' arguments='717' flags='1' bytes='6' iicount='1'/>
<call method='842' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='844' name='java/lang/Math' flags='17'/>
<method id='845' holder='844' name='min' return='709' arguments='709 709' flags='9' bytes='11' compile_id='9' compiler='C1' level='3' iicount='2009'/>
<call method='845' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<parse_done stamp='0.366'/>
</parse>
<bc code='184' bci='57'/>
<klass id='722' name='java/lang/System' flags='17'/>
<method id='847' holder='722' name='arraycopy' return='711' arguments='716 709 716 709 709' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2689'/>
<call method='847' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.366'/>
</parse>
<phase name='optimize_blocks' stamp='0.366'>
<phase_done name='optimize_blocks' stamp='0.366'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.366'>
<phase_done name='rangeCheckElimination' stamp='0.366'/>
</phase>
<phase name='optimize_null_checks' stamp='0.366'>
<phase_done name='optimize_null_checks' stamp='0.366'/>
</phase>
<phase_done name='buildIR' stamp='0.366'/>
</phase>
<phase name='emit_lir' stamp='0.366'>
<phase name='lirGeneration' stamp='0.366'>
<phase_done name='lirGeneration' stamp='0.366'/>
</phase>
<phase name='linearScan' stamp='0.366'>
<phase_done name='linearScan' stamp='0.366'/>
</phase>
<phase_done name='emit_lir' stamp='0.366'/>
</phase>
<phase name='codeemit' stamp='0.366'>
<phase_done name='codeemit' stamp='0.366'/>
</phase>
<phase name='codeinstall' stamp='0.366'>
<phase_done name='codeinstall' stamp='0.404'/>
</phase>
<code_cache total_blobs='267' nmethods='15' adapters='166' free_code_cache='250536576'/>
<task_done success='1' nmsize='2872' count='1026' inlined_bytes='72' stamp='0.404'/>
</task>
<task compile_id='17' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='4341' iicount='4341' level='3' stamp='0.404'>
<phase name='buildIR' stamp='0.404'>
<klass id='819' name='java/lang/CharacterData' flags='1024'/>
<type id='709' name='int'/>
<method id='820' holder='819' name='of' return='819' arguments='709' flags='24' bytes='120' iicount='4341'/>
<parse method='820'  stamp='0.404'>
<parse_done stamp='0.404'/>
</parse>
<phase name='optimize_blocks' stamp='0.404'>
<phase_done name='optimize_blocks' stamp='0.404'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.404'>
<phase_done name='rangeCheckElimination' stamp='0.404'/>
</phase>
<phase name='optimize_null_checks' stamp='0.404'>
<phase_done name='optimize_null_checks' stamp='0.404'/>
</phase>
<phase_done name='buildIR' stamp='0.404'/>
</phase>
<phase name='emit_lir' stamp='0.404'>
<phase name='lirGeneration' stamp='0.404'>
<phase_done name='lirGeneration' stamp='0.404'/>
</phase>
<phase name='linearScan' stamp='0.404'>
<phase_done name='linearScan' stamp='0.405'/>
</phase>
<phase_done name='emit_lir' stamp='0.405'/>
</phase>
<phase name='codeemit' stamp='0.405'>
<phase_done name='codeemit' stamp='0.405'/>
</phase>
<phase name='codeinstall' stamp='0.405'>
<phase_done name='codeinstall' stamp='0.427'/>
</phase>
<code_cache total_blobs='268' nmethods='16' adapters='166' free_code_cache='250533824'/>
<task_done success='1' nmsize='1456' count='4341' stamp='0.427'/>
</task>
<task compile_id='18' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4341' iicount='4341' level='3' stamp='0.427'>
<phase name='buildIR' stamp='0.427'>
<type id='709' name='int'/>
<klass id='819' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='820' holder='819' name='getProperties' return='709' arguments='709' flags='0' bytes='11' iicount='4341'/>
<parse method='820'  stamp='0.427'>
<parse_done stamp='0.427'/>
</parse>
<phase name='optimize_blocks' stamp='0.427'>
<phase_done name='optimize_blocks' stamp='0.427'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.427'>
<phase_done name='rangeCheckElimination' stamp='0.427'/>
</phase>
<phase name='optimize_null_checks' stamp='0.427'>
<phase_done name='optimize_null_checks' stamp='0.427'/>
</phase>
<phase_done name='buildIR' stamp='0.427'/>
</phase>
<phase name='emit_lir' stamp='0.427'>
<phase name='lirGeneration' stamp='0.427'>
<phase_done name='lirGeneration' stamp='0.427'/>
</phase>
<phase name='linearScan' stamp='0.427'>
<phase_done name='linearScan' stamp='0.428'/>
</phase>
<phase_done name='emit_lir' stamp='0.428'/>
</phase>
<phase name='codeemit' stamp='0.428'>
<phase_done name='codeemit' stamp='0.428'/>
</phase>
<phase name='codeinstall' stamp='0.428'>
<phase_done name='codeinstall' stamp='0.433'/>
</phase>
<code_cache total_blobs='271' nmethods='17' adapters='168' free_code_cache='250531712'/>
<task_done success='1' nmsize='400' count='4341' stamp='0.433'/>
</task>
<task compile_id='23' method='java/util/TreeMap setColor (Ljava/util/TreeMap$Entry;Z)V' bytes='10' count='2450' iicount='2450' level='3' stamp='0.433'>
<phase name='buildIR' stamp='0.433'>
<type id='711' name='void'/>
<klass id='820' name='java/util/TreeMap$Entry' flags='24'/>
<type id='703' name='boolean'/>
<klass id='819' name='java/util/TreeMap' flags='1'/>
<method id='821' holder='819' name='setColor' return='711' arguments='820 703' flags='10' bytes='10' iicount='2450'/>
<parse method='821'  stamp='0.433'>
<parse_done stamp='0.433'/>
</parse>
<phase name='optimize_blocks' stamp='0.433'>
<phase_done name='optimize_blocks' stamp='0.433'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.433'>
<phase_done name='rangeCheckElimination' stamp='0.433'/>
</phase>
<phase name='optimize_null_checks' stamp='0.433'>
<phase_done name='optimize_null_checks' stamp='0.433'/>
</phase>
<phase_done name='buildIR' stamp='0.433'/>
</phase>
<phase name='emit_lir' stamp='0.433'>
<phase name='lirGeneration' stamp='0.433'>
<phase_done name='lirGeneration' stamp='0.433'/>
</phase>
<phase name='linearScan' stamp='0.433'>
<phase_done name='linearScan' stamp='0.433'/>
</phase>
<phase_done name='emit_lir' stamp='0.433'/>
</phase>
<phase name='codeemit' stamp='0.433'>
<phase_done name='codeemit' stamp='0.433'/>
</phase>
<phase name='codeinstall' stamp='0.433'>
<phase_done name='codeinstall' stamp='0.438'/>
</phase>
<code_cache total_blobs='272' nmethods='18' adapters='168' free_code_cache='250530752'/>
<task_done success='1' nmsize='368' count='2450' stamp='0.438'/>
</task>
<task compile_id='21' method='java/util/TreeMap leftOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='1813' iicount='1813' level='3' stamp='0.438'>
<phase name='buildIR' stamp='0.438'>
<klass id='820' name='java/util/TreeMap$Entry' flags='24'/>
<klass id='819' name='java/util/TreeMap' flags='1'/>
<method id='821' holder='819' name='leftOf' return='820' arguments='820' flags='10' bytes='13' iicount='1813'/>
<parse method='821'  stamp='0.438'>
<parse_done stamp='0.438'/>
</parse>
<phase name='optimize_blocks' stamp='0.438'>
<phase_done name='optimize_blocks' stamp='0.438'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.438'>
<phase_done name='rangeCheckElimination' stamp='0.438'/>
</phase>
<phase name='optimize_null_checks' stamp='0.438'>
<phase_done name='optimize_null_checks' stamp='0.438'/>
</phase>
<phase_done name='buildIR' stamp='0.438'/>
</phase>
<phase name='emit_lir' stamp='0.438'>
<phase name='lirGeneration' stamp='0.438'>
<phase_done name='lirGeneration' stamp='0.438'/>
</phase>
<phase name='linearScan' stamp='0.438'>
<phase_done name='linearScan' stamp='0.438'/>
</phase>
<phase_done name='emit_lir' stamp='0.438'/>
</phase>
<phase name='codeemit' stamp='0.438'>
<phase_done name='codeemit' stamp='0.438'/>
</phase>
<phase name='codeinstall' stamp='0.438'>
<phase_done name='codeinstall' stamp='0.444'/>
</phase>
<code_cache total_blobs='273' nmethods='19' adapters='168' free_code_cache='250529600'/>
<task_done success='1' nmsize='432' count='1813' stamp='0.444'/>
</task>
<task compile_id='19' method='java/lang/Character toUpperCase (C)C' bytes='6' count='688' iicount='688' level='3' stamp='0.445'>
<phase name='buildIR' stamp='0.445'>
<type id='704' name='char'/>
<klass id='797' name='java/lang/Character' flags='17'/>
<method id='819' holder='797' name='toUpperCase' return='704' arguments='704' flags='9' bytes='6' iicount='688'/>
<parse method='819'  stamp='0.445'>
<bc code='184' bci='1'/>
<type id='709' name='int'/>
<method id='821' holder='797' name='toUpperCase' return='709' arguments='709' flags='9' bytes='9' iicount='688'/>
<call method='821' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<bc code='184' bci='1'/>
<klass id='824' name='java/lang/CharacterData' flags='1024'/>
<method id='825' holder='824' name='of' return='824' arguments='709' flags='24' bytes='120' compile_id='17' compiler='C1' level='3' iicount='4341'/>
<call method='825' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='827' holder='824' name='toUpperCase' return='709' arguments='709' flags='1024' bytes='0' iicount='1'/>
<call method='827' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.445'/>
</parse>
<parse_done stamp='0.445'/>
</parse>
<phase name='optimize_blocks' stamp='0.445'>
<phase_done name='optimize_blocks' stamp='0.445'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.445'>
<phase_done name='rangeCheckElimination' stamp='0.445'/>
</phase>
<phase name='optimize_null_checks' stamp='0.445'>
<phase_done name='optimize_null_checks' stamp='0.445'/>
</phase>
<phase_done name='buildIR' stamp='0.445'/>
</phase>
<phase name='emit_lir' stamp='0.445'>
<phase name='lirGeneration' stamp='0.445'>
<phase_done name='lirGeneration' stamp='0.445'/>
</phase>
<phase name='linearScan' stamp='0.445'>
<phase_done name='linearScan' stamp='0.445'/>
</phase>
<phase_done name='emit_lir' stamp='0.445'/>
</phase>
<phase name='codeemit' stamp='0.445'>
<phase_done name='codeemit' stamp='0.445'/>
</phase>
<phase name='codeinstall' stamp='0.445'>
<phase_done name='codeinstall' stamp='0.453'/>
</phase>
<code_cache total_blobs='274' nmethods='20' adapters='168' free_code_cache='250528256'/>
<task_done success='1' nmsize='664' count='688' inlined_bytes='9' stamp='0.453'/>
</task>
<task compile_id='20' method='java/lang/Character toUpperCase (I)I' bytes='9' count='688' iicount='688' level='3' stamp='0.453'>
<phase name='buildIR' stamp='0.453'>
<type id='709' name='int'/>
<klass id='797' name='java/lang/Character' flags='17'/>
<method id='819' holder='797' name='toUpperCase' return='709' arguments='709' flags='9' bytes='9' iicount='688'/>
<parse method='819'  stamp='0.453'>
<bc code='184' bci='1'/>
<klass id='822' name='java/lang/CharacterData' flags='1024'/>
<method id='823' holder='822' name='of' return='822' arguments='709' flags='24' bytes='120' compile_id='17' compiler='C1' level='3' iicount='4341'/>
<call method='823' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='825' holder='822' name='toUpperCase' return='709' arguments='709' flags='1024' bytes='0' iicount='1'/>
<call method='825' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.453'/>
</parse>
<phase name='optimize_blocks' stamp='0.453'>
<phase_done name='optimize_blocks' stamp='0.453'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.453'>
<phase_done name='rangeCheckElimination' stamp='0.453'/>
</phase>
<phase name='optimize_null_checks' stamp='0.453'>
<phase_done name='optimize_null_checks' stamp='0.453'/>
</phase>
<phase_done name='buildIR' stamp='0.453'/>
</phase>
<phase name='emit_lir' stamp='0.453'>
<phase name='lirGeneration' stamp='0.453'>
<phase_done name='lirGeneration' stamp='0.453'/>
</phase>
<phase name='linearScan' stamp='0.453'>
<phase_done name='linearScan' stamp='0.453'/>
</phase>
<phase_done name='emit_lir' stamp='0.453'/>
</phase>
<phase name='codeemit' stamp='0.453'>
<phase_done name='codeemit' stamp='0.453'/>
</phase>
<phase name='codeinstall' stamp='0.453'>
<phase_done name='codeinstall' stamp='0.459'/>
</phase>
<code_cache total_blobs='276' nmethods='21' adapters='169' free_code_cache='250526528'/>
<task_done success='1' nmsize='568' count='746' stamp='0.459'/>
</task>
<task compile_id='24' method='java/util/TreeMap rightOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='640' iicount='640' level='3' stamp='0.459'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='640' stamp='0.459'/>
</task>
<task compile_id='22' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='746' iicount='746' level='3' stamp='0.459'>
<phase name='buildIR' stamp='0.459'>
<type id='709' name='int'/>
<klass id='819' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='820' holder='819' name='toUpperCase' return='709' arguments='709' flags='0' bytes='53' iicount='746'/>
<parse method='820'  stamp='0.459'>
<bc code='182' bci='4'/>
<method id='822' holder='819' name='getProperties' return='709' arguments='709' flags='0' bytes='11' compile_id='18' compiler='C1' level='3' iicount='4399'/>
<call method='822' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='819'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='819'/>
<parse method='822'>
<parse_done stamp='0.459'/>
</parse>
<parse_done stamp='0.459'/>
</parse>
<phase name='optimize_blocks' stamp='0.459'>
<phase_done name='optimize_blocks' stamp='0.459'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.459'>
<phase_done name='rangeCheckElimination' stamp='0.459'/>
</phase>
<phase name='optimize_null_checks' stamp='0.459'>
<phase_done name='optimize_null_checks' stamp='0.459'/>
</phase>
<phase_done name='buildIR' stamp='0.459'/>
</phase>
<phase name='emit_lir' stamp='0.459'>
<phase name='lirGeneration' stamp='0.459'>
<phase_done name='lirGeneration' stamp='0.459'/>
</phase>
<phase name='linearScan' stamp='0.459'>
<phase_done name='linearScan' stamp='0.459'/>
</phase>
<phase_done name='emit_lir' stamp='0.459'/>
</phase>
<phase name='codeemit' stamp='0.460'>
<phase_done name='codeemit' stamp='0.460'/>
</phase>
<phase name='codeinstall' stamp='0.460'>
<dependency type='leaf_type' ctxk='819'/>
<phase_done name='codeinstall' stamp='0.467'/>
</phase>
<code_cache total_blobs='277' nmethods='22' adapters='169' free_code_cache='250524992'/>
<task_done success='1' nmsize='720' count='746' inlined_bytes='11' stamp='0.467'/>
</task>
<task compile_id='25' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='256' backedge_count='10' iicount='256' level='3' stamp='0.467'>
<phase name='buildIR' stamp='0.467'>
<klass id='820' name='java/util/HashMap$Node' flags='8'/>
<type id='709' name='int'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<klass id='819' name='java/util/HashMap' flags='1'/>
<method id='821' holder='819' name='getNode' return='820' arguments='709 716' flags='16' bytes='148' iicount='256'/>
<parse method='821'  stamp='0.467'>
<bc code='182' bci='59'/>
<type id='703' name='boolean'/>
<method id='824' holder='716' name='equals' return='703' arguments='716' flags='1' bytes='11' iicount='1'/>
<call method='824' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='94'/>
<klass id='825' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='826' holder='825' name='getTreeNode' return='825' arguments='709 716' flags='16' bytes='22' iicount='1'/>
<call method='826' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='126'/>
<call method='824' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.467'/>
</parse>
<phase name='optimize_blocks' stamp='0.467'>
<phase_done name='optimize_blocks' stamp='0.467'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.468'>
<phase_done name='rangeCheckElimination' stamp='0.468'/>
</phase>
<phase name='optimize_null_checks' stamp='0.468'>
<phase_done name='optimize_null_checks' stamp='0.468'/>
</phase>
<phase_done name='buildIR' stamp='0.468'/>
</phase>
<phase name='emit_lir' stamp='0.468'>
<phase name='lirGeneration' stamp='0.468'>
<phase_done name='lirGeneration' stamp='0.468'/>
</phase>
<phase name='linearScan' stamp='0.468'>
<phase_done name='linearScan' stamp='0.468'/>
</phase>
<phase_done name='emit_lir' stamp='0.468'/>
</phase>
<phase name='codeemit' stamp='0.468'>
<phase_done name='codeemit' stamp='0.468'/>
</phase>
<phase name='codeinstall' stamp='0.468'>
<phase_done name='codeinstall' stamp='0.506'/>
</phase>
<code_cache total_blobs='278' nmethods='23' adapters='169' free_code_cache='250520768'/>
<task_done success='1' nmsize='2472' count='256' backedge_count='10' stamp='0.506'/>
</task>
<task compile_id='26' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='161' backedge_count='3125' iicount='161' level='3' stamp='0.506'>
<phase name='buildIR' stamp='0.506'>
<klass id='717' name='java/lang/String' flags='17'/>
<klass id='819' name='java/io/WinNTFileSystem' flags='0'/>
<method id='820' holder='819' name='normalize' return='717' arguments='717' flags='1' bytes='143' iicount='161'/>
<parse method='820'  stamp='0.506'>
<bc code='182' bci='1'/>
<type id='709' name='int'/>
<method id='822' holder='717' name='length' return='709' flags='1' bytes='6' compile_id='15' compiler='C2' level='4' iicount='27810'/>
<call method='822' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='822'>
<parse_done stamp='0.506'/>
</parse>
<bc code='182' bci='31'/>
<type id='704' name='char'/>
<method id='824' holder='717' name='charAt' return='704' arguments='709' flags='1' bytes='29' compile_id='7' compiler='C2' level='4' iicount='102525'/>
<call method='824' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='824'>
<bc code='183' bci='18'/>
<type id='711' name='void'/>
<klass id='826' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='827' holder='826' name='&lt;init&gt;' return='711' arguments='709' unloaded='1'/>
<call method='827' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.506'/>
</parse>
<bc code='183' bci='61'/>
<method id='828' holder='819' name='normalize' return='717' arguments='717 709 709' flags='2' bytes='231' iicount='72'/>
<call method='828' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='819'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='90'/>
<call method='828' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='819'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='111'/>
<call method='828' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='819'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='137'/>
<call method='828' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='819'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.506'/>
</parse>
<phase name='optimize_blocks' stamp='0.506'>
<phase_done name='optimize_blocks' stamp='0.506'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.506'>
<phase_done name='rangeCheckElimination' stamp='0.506'/>
</phase>
<phase name='optimize_null_checks' stamp='0.507'>
<phase_done name='optimize_null_checks' stamp='0.507'/>
</phase>
<phase_done name='buildIR' stamp='0.507'/>
</phase>
<phase name='emit_lir' stamp='0.507'>
<phase name='lirGeneration' stamp='0.507'>
<phase_done name='lirGeneration' stamp='0.507'/>
</phase>
<phase name='linearScan' stamp='0.507'>
<phase_done name='linearScan' stamp='0.507'/>
</phase>
<phase_done name='emit_lir' stamp='0.507'/>
</phase>
<phase name='codeemit' stamp='0.507'>
<phase_done name='codeemit' stamp='0.507'/>
</phase>
<phase name='codeinstall' stamp='0.507'>
<dependency type='leaf_type' ctxk='819'/>
<phase_done name='codeinstall' stamp='0.571'/>
</phase>
<code_cache total_blobs='279' nmethods='24' adapters='169' free_code_cache='250516736'/>
<task_done success='1' nmsize='2088' count='161' backedge_count='3125' inlined_bytes='35' stamp='0.571'/>
</task>
<task compile_id='11' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='449' iicount='449' level='3' stamp='0.571'>
<phase name='buildIR' stamp='0.571'>
<type id='709' name='int'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<klass id='819' name='java/util/HashMap' flags='1'/>
<method id='820' holder='819' name='hash' return='709' arguments='716' flags='24' bytes='20' iicount='449'/>
<parse method='820'  stamp='0.571'>
<bc code='182' bci='9'/>
<method id='822' holder='716' name='hashCode' return='709' flags='257' bytes='0' iicount='85'/>
<call method='822' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.571'/>
</parse>
<phase name='optimize_blocks' stamp='0.571'>
<phase_done name='optimize_blocks' stamp='0.571'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.571'>
<phase_done name='rangeCheckElimination' stamp='0.571'/>
</phase>
<phase name='optimize_null_checks' stamp='0.571'>
<phase_done name='optimize_null_checks' stamp='0.571'/>
</phase>
<phase_done name='buildIR' stamp='0.571'/>
</phase>
<phase name='emit_lir' stamp='0.571'>
<phase name='lirGeneration' stamp='0.571'>
<phase_done name='lirGeneration' stamp='0.571'/>
</phase>
<phase name='linearScan' stamp='0.571'>
<phase_done name='linearScan' stamp='0.571'/>
</phase>
<phase_done name='emit_lir' stamp='0.571'/>
</phase>
<phase name='codeemit' stamp='0.571'>
<phase_done name='codeemit' stamp='0.571'/>
</phase>
<phase name='codeinstall' stamp='0.571'>
<phase_done name='codeinstall' stamp='0.578'/>
</phase>
<code_cache total_blobs='280' nmethods='25' adapters='169' free_code_cache='250515520'/>
<task_done success='1' nmsize='584' count='449' stamp='0.578'/>
</task>
<task compile_id='27' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='674' backedge_count='1078' iicount='674' level='3' stamp='0.578'>
<phase name='buildIR' stamp='0.578'>
<type id='703' name='boolean'/>
<klass id='717' name='java/lang/String' flags='17'/>
<type id='709' name='int'/>
<method id='819' holder='717' name='startsWith' return='703' arguments='717 709' flags='1' bytes='72' iicount='682'/>
<parse method='819'  stamp='0.578'>
<parse_done stamp='0.578'/>
</parse>
<phase name='optimize_blocks' stamp='0.578'>
<phase_done name='optimize_blocks' stamp='0.578'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.578'>
<phase_done name='rangeCheckElimination' stamp='0.578'/>
</phase>
<phase name='optimize_null_checks' stamp='0.578'>
<phase_done name='optimize_null_checks' stamp='0.578'/>
</phase>
<phase_done name='buildIR' stamp='0.578'/>
</phase>
<phase name='emit_lir' stamp='0.578'>
<phase name='lirGeneration' stamp='0.578'>
<phase_done name='lirGeneration' stamp='0.578'/>
</phase>
<phase name='linearScan' stamp='0.578'>
<phase_done name='linearScan' stamp='0.578'/>
</phase>
<phase_done name='emit_lir' stamp='0.579'/>
</phase>
<phase name='codeemit' stamp='0.579'>
<phase_done name='codeemit' stamp='0.579'/>
</phase>
<phase name='codeinstall' stamp='0.579'>
<phase_done name='codeinstall' stamp='0.590'/>
</phase>
<code_cache total_blobs='283' nmethods='26' adapters='171' free_code_cache='250512640'/>
<task_done success='1' nmsize='816' count='747' backedge_count='1147' stamp='0.590'/>
</task>
<task compile_id='29' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='771' iicount='771' level='3' stamp='0.590'>
<phase name='buildIR' stamp='0.590'>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='780' name='append' return='780' arguments='717' flags='1' bytes='50' iicount='771'/>
<parse method='819'  stamp='0.590'>
<bc code='183' bci='5'/>
<method id='821' holder='780' name='appendNull' return='780' flags='2' bytes='56' iicount='1'/>
<call method='821' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='709' name='int'/>
<method id='823' holder='717' name='length' return='709' flags='1' bytes='6' compile_id='15' compiler='C2' level='4' iicount='27811'/>
<call method='823' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<parse_done stamp='0.590'/>
</parse>
<bc code='183' bci='21'/>
<type id='711' name='void'/>
<method id='825' holder='780' name='ensureCapacityInternal' return='711' arguments='709' flags='2' bytes='16' iicount='7147'/>
<call method='825' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='825'>
<bc code='182' bci='12'/>
<method id='827' holder='780' name='expandCapacity' return='711' arguments='709' flags='0' bytes='50' iicount='356'/>
<call method='827' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='780' x='827'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.590'/>
</parse>
<bc code='182' bci='35'/>
<klass id='808' name='[C' flags='1041'/>
<method id='829' holder='717' name='getChars' return='711' arguments='709 709 808 709' flags='1' bytes='62' iicount='847'/>
<call method='829' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.590'/>
</parse>
<phase name='optimize_blocks' stamp='0.590'>
<phase_done name='optimize_blocks' stamp='0.590'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.590'>
<phase_done name='rangeCheckElimination' stamp='0.590'/>
</phase>
<phase name='optimize_null_checks' stamp='0.590'>
<phase_done name='optimize_null_checks' stamp='0.590'/>
</phase>
<phase_done name='buildIR' stamp='0.590'/>
</phase>
<phase name='emit_lir' stamp='0.590'>
<phase name='lirGeneration' stamp='0.590'>
<phase_done name='lirGeneration' stamp='0.590'/>
</phase>
<phase name='linearScan' stamp='0.590'>
<phase_done name='linearScan' stamp='0.590'/>
</phase>
<phase_done name='emit_lir' stamp='0.590'/>
</phase>
<phase name='codeemit' stamp='0.590'>
<phase_done name='codeemit' stamp='0.590'/>
</phase>
<phase name='codeinstall' stamp='0.590'>
<dependency type='unique_concrete_method' ctxk='780' x='827'/>
<phase_done name='codeinstall' stamp='0.607'/>
</phase>
<code_cache total_blobs='285' nmethods='27' adapters='171' free_code_cache='250508224'/>
<task_done success='1' nmsize='1288' count='776' inlined_bytes='22' stamp='0.607'/>
</task>
<task compile_id='31' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3791' iicount='3791' level='3' stamp='0.607'>
<phase name='buildIR' stamp='0.607'>
<klass id='781' name='java/lang/StringBuffer' flags='17'/>
<type id='704' name='char'/>
<method id='819' holder='781' name='append' return='781' arguments='704' flags='33' bytes='13' iicount='3791'/>
<parse method='819'  stamp='0.607'>
<bc code='183' bci='7'/>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='821' holder='780' name='append' return='780' arguments='704' flags='1' bytes='29' iicount='6458'/>
<call method='821' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<bc code='183' bci='7'/>
<type id='711' name='void'/>
<type id='709' name='int'/>
<method id='823' holder='780' name='ensureCapacityInternal' return='711' arguments='709' flags='2' bytes='16' iicount='7241'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<bc code='182' bci='12'/>
<method id='825' holder='780' name='expandCapacity' return='711' arguments='709' flags='0' bytes='50' iicount='357'/>
<call method='825' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.608'/>
</parse>
<parse_done stamp='0.608'/>
</parse>
<parse_done stamp='0.608'/>
</parse>
<phase name='optimize_blocks' stamp='0.608'>
<phase_done name='optimize_blocks' stamp='0.608'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.608'>
<phase_done name='rangeCheckElimination' stamp='0.608'/>
</phase>
<phase name='optimize_null_checks' stamp='0.608'>
<phase_done name='optimize_null_checks' stamp='0.608'/>
</phase>
<phase_done name='buildIR' stamp='0.608'/>
</phase>
<phase name='emit_lir' stamp='0.608'>
<phase name='lirGeneration' stamp='0.608'>
<phase_done name='lirGeneration' stamp='0.608'/>
</phase>
<phase name='linearScan' stamp='0.608'>
<phase_done name='linearScan' stamp='0.608'/>
</phase>
<phase_done name='emit_lir' stamp='0.608'/>
</phase>
<phase name='codeemit' stamp='0.608'>
<phase_done name='codeemit' stamp='0.608'/>
</phase>
<phase name='codeinstall' stamp='0.608'>
<phase_done name='codeinstall' stamp='0.625'/>
</phase>
<code_cache total_blobs='286' nmethods='28' adapters='171' free_code_cache='250505856'/>
<task_done success='1' nmsize='1288' count='3791' inlined_bytes='45' stamp='0.625'/>
</task>
<task compile_id='34' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='4232' iicount='4232' level='3' stamp='0.625'>
<phase name='buildIR' stamp='0.625'>
<type id='703' name='boolean'/>
<type id='704' name='char'/>
<klass id='819' name='java/io/WinNTFileSystem' flags='0'/>
<method id='820' holder='819' name='isSlash' return='703' arguments='704' flags='2' bytes='18' iicount='4232'/>
<parse method='820'  stamp='0.625'>
<parse_done stamp='0.625'/>
</parse>
<phase name='optimize_blocks' stamp='0.625'>
<phase_done name='optimize_blocks' stamp='0.625'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.625'>
<phase_done name='rangeCheckElimination' stamp='0.625'/>
</phase>
<phase name='optimize_null_checks' stamp='0.625'>
<phase_done name='optimize_null_checks' stamp='0.625'/>
</phase>
<phase_done name='buildIR' stamp='0.625'/>
</phase>
<phase name='emit_lir' stamp='0.625'>
<phase name='lirGeneration' stamp='0.625'>
<phase_done name='lirGeneration' stamp='0.625'/>
</phase>
<phase name='linearScan' stamp='0.625'>
<phase_done name='linearScan' stamp='0.626'/>
</phase>
<phase_done name='emit_lir' stamp='0.626'/>
</phase>
<phase name='codeemit' stamp='0.626'>
<phase_done name='codeemit' stamp='0.626'/>
</phase>
<phase name='codeinstall' stamp='0.626'>
<phase_done name='codeinstall' stamp='0.631'/>
</phase>
<code_cache total_blobs='289' nmethods='29' adapters='171' free_code_cache='250494016'/>
<task_done success='1' nmsize='496' count='4232' stamp='0.631'/>
</task>
<task compile_id='28' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='647' iicount='647' level='3' stamp='0.631'>
<phase name='buildIR' stamp='0.631'>
<klass id='782' name='java/lang/StringBuilder' flags='17'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='782' name='append' return='782' arguments='717' flags='1' bytes='8' iicount='647'/>
<parse method='819'  stamp='0.631'>
<bc code='183' bci='2'/>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='821' holder='780' name='append' return='780' arguments='717' flags='1' bytes='50' compile_id='29' compiler='C1' level='3' iicount='776'/>
<call method='821' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.631'/>
</parse>
<phase name='optimize_blocks' stamp='0.631'>
<phase_done name='optimize_blocks' stamp='0.631'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.631'>
<phase_done name='rangeCheckElimination' stamp='0.631'/>
</phase>
<phase name='optimize_null_checks' stamp='0.631'>
<phase_done name='optimize_null_checks' stamp='0.631'/>
</phase>
<phase_done name='buildIR' stamp='0.631'/>
</phase>
<phase name='emit_lir' stamp='0.631'>
<phase name='lirGeneration' stamp='0.631'>
<phase_done name='lirGeneration' stamp='0.631'/>
</phase>
<phase name='linearScan' stamp='0.631'>
<phase_done name='linearScan' stamp='0.631'/>
</phase>
<phase_done name='emit_lir' stamp='0.631'/>
</phase>
<phase name='codeemit' stamp='0.631'>
<phase_done name='codeemit' stamp='0.631'/>
</phase>
<phase name='codeinstall' stamp='0.631'>
<phase_done name='codeinstall' stamp='0.656'/>
</phase>
<code_cache total_blobs='292' nmethods='32' adapters='171' free_code_cache='250488896'/>
<task_done success='1' nmsize='392' count='647' stamp='0.656'/>
</task>
<task compile_id='30' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='515' iicount='515' level='3' stamp='0.676'>
<phase name='buildIR' stamp='0.676'>
<type id='703' name='boolean'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='startsWith' return='703' arguments='717' flags='1' bytes='7' iicount='515'/>
<parse method='819'  stamp='0.676'>
<bc code='182' bci='3'/>
<type id='709' name='int'/>
<method id='821' holder='717' name='startsWith' return='703' arguments='717 709' flags='1' bytes='72' compile_id='27' compiler='C1' level='3' iicount='751'/>
<call method='821' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.676'/>
</parse>
<phase name='optimize_blocks' stamp='0.676'>
<phase_done name='optimize_blocks' stamp='0.676'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.676'>
<phase_done name='rangeCheckElimination' stamp='0.676'/>
</phase>
<phase name='optimize_null_checks' stamp='0.676'>
<phase_done name='optimize_null_checks' stamp='0.676'/>
</phase>
<phase_done name='buildIR' stamp='0.676'/>
</phase>
<phase name='emit_lir' stamp='0.676'>
<phase name='lirGeneration' stamp='0.676'>
<phase_done name='lirGeneration' stamp='0.676'/>
</phase>
<phase name='linearScan' stamp='0.676'>
<phase_done name='linearScan' stamp='0.676'/>
</phase>
<phase_done name='emit_lir' stamp='0.676'/>
</phase>
<phase name='codeemit' stamp='0.676'>
<phase_done name='codeemit' stamp='0.676'/>
</phase>
<phase name='codeinstall' stamp='0.676'>
<phase_done name='codeinstall' stamp='0.682'/>
</phase>
<code_cache total_blobs='292' nmethods='34' adapters='171' free_code_cache='250497600'/>
<task_done success='1' nmsize='520' count='518' stamp='0.682'/>
</task>
<task compile_id='35' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='386' iicount='386' level='3' stamp='0.682'>
<phase name='buildIR' stamp='0.682'>
<klass id='820' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='821' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='709' name='int'/>
<klass id='819' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='822' holder='819' name='tabAt' return='820' arguments='821 709' flags='24' bytes='21' iicount='386'/>
<parse method='822'  stamp='0.682'>
<bc code='182' bci='14'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<type id='710' name='long'/>
<klass id='783' name='sun/misc/Unsafe' flags='17'/>
<method id='826' holder='783' name='getObjectVolatile' return='716' arguments='716 710' flags='257' bytes='0' compile_id='36' compile_kind='c2n' level='0' iicount='384'/>
<call method='826' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.682'/>
</parse>
<phase name='optimize_blocks' stamp='0.682'>
<phase_done name='optimize_blocks' stamp='0.682'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.682'>
<phase_done name='rangeCheckElimination' stamp='0.682'/>
</phase>
<phase name='optimize_null_checks' stamp='0.682'>
<phase_done name='optimize_null_checks' stamp='0.682'/>
</phase>
<phase_done name='buildIR' stamp='0.682'/>
</phase>
<phase name='emit_lir' stamp='0.682'>
<phase name='lirGeneration' stamp='0.682'>
<phase_done name='lirGeneration' stamp='0.682'/>
</phase>
<phase name='linearScan' stamp='0.682'>
<phase_done name='linearScan' stamp='0.682'/>
</phase>
<phase_done name='emit_lir' stamp='0.682'/>
</phase>
<phase name='codeemit' stamp='0.682'>
<phase_done name='codeemit' stamp='0.682'/>
</phase>
<phase name='codeinstall' stamp='0.682'>
<phase_done name='codeinstall' stamp='0.689'/>
</phase>
<code_cache total_blobs='293' nmethods='35' adapters='171' free_code_cache='250496512'/>
<task_done success='1' nmsize='560' count='388' stamp='0.689'/>
</task>
<task compile_id='37' method='java/util/ArrayList size ()I' bytes='5' count='290' iicount='290' level='1' stamp='0.689'>
<phase name='buildIR' stamp='0.689'>
<type id='709' name='int'/>
<klass id='819' name='java/util/ArrayList' flags='1'/>
<method id='820' holder='819' name='size' return='709' flags='1' bytes='5' iicount='290'/>
<parse method='820'  stamp='0.689'>
<parse_done stamp='0.689'/>
</parse>
<phase name='optimize_blocks' stamp='0.689'>
<phase_done name='optimize_blocks' stamp='0.689'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.689'>
<phase_done name='rangeCheckElimination' stamp='0.689'/>
</phase>
<phase name='optimize_null_checks' stamp='0.689'>
<phase_done name='optimize_null_checks' stamp='0.689'/>
</phase>
<phase_done name='buildIR' stamp='0.689'/>
</phase>
<phase name='emit_lir' stamp='0.689'>
<phase name='lirGeneration' stamp='0.689'>
<phase_done name='lirGeneration' stamp='0.689'/>
</phase>
<phase name='linearScan' stamp='0.689'>
<phase_done name='linearScan' stamp='0.689'/>
</phase>
<phase_done name='emit_lir' stamp='0.689'/>
</phase>
<phase name='codeemit' stamp='0.689'>
<phase_done name='codeemit' stamp='0.689'/>
</phase>
<phase name='codeinstall' stamp='0.689'>
<phase_done name='codeinstall' stamp='0.693'/>
</phase>
<code_cache total_blobs='294' nmethods='36' adapters='171' free_code_cache='250495744'/>
<task_done success='1' nmsize='272' count='290' stamp='0.693'/>
</task>
<task compile_id='38' method='cn/itcast/jvm/t4/Demo4_2 add (II)I' bytes='4' count='512' iicount='512' level='3' stamp='0.693'>
<phase name='buildIR' stamp='0.693'>
<type id='709' name='int'/>
<klass id='819' name='cn/itcast/jvm/t4/Demo4_2' flags='1'/>
<method id='820' holder='819' name='add' return='709' arguments='709 709' flags='9' bytes='4' iicount='512'/>
<parse method='820'  stamp='0.693'>
<parse_done stamp='0.693'/>
</parse>
<phase name='optimize_blocks' stamp='0.693'>
<phase_done name='optimize_blocks' stamp='0.693'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.693'>
<phase_done name='rangeCheckElimination' stamp='0.693'/>
</phase>
<phase name='optimize_null_checks' stamp='0.693'>
<phase_done name='optimize_null_checks' stamp='0.693'/>
</phase>
<phase_done name='buildIR' stamp='0.693'/>
</phase>
<phase name='emit_lir' stamp='0.693'>
<phase name='lirGeneration' stamp='0.693'>
<phase_done name='lirGeneration' stamp='0.693'/>
</phase>
<phase name='linearScan' stamp='0.693'>
<phase_done name='linearScan' stamp='0.693'/>
</phase>
<phase_done name='emit_lir' stamp='0.693'/>
</phase>
<phase name='codeemit' stamp='0.693'>
<phase_done name='codeemit' stamp='0.693'/>
</phase>
<phase name='codeinstall' stamp='0.693'>
<phase_done name='codeinstall' stamp='0.697'/>
</phase>
<code_cache total_blobs='295' nmethods='37' adapters='171' free_code_cache='250494976'/>
<task_done success='1' nmsize='304' count='3000' stamp='0.697'/>
</task>
</compilation_log>
<compilation_log thread='23708'>
<start_compile_thread name='C2 CompilerThread1' thread='23708' process='23300' stamp='0.255'/>
<task compile_id='15' method='java/lang/String length ()I' bytes='6' count='27776' iicount='27776' stamp='0.348'>
<phase name='parse' nodes='3' live='3' stamp='0.348'>
<type id='709' name='int'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='length' return='709' flags='1' bytes='6' iicount='27776'/>
<parse method='819' uses='27776' stamp='0.348'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25928' stamp='0.357'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='0.357'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='0.357'>
<phase name='ccp' nodes='45' live='27' stamp='0.357'>
<phase_done name='ccp' nodes='45' live='27' stamp='0.357'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='0.357'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='0.357'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.357'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.357'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.357'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.357'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='0.357'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='0.357'>
<phase_done name='output' nodes='38' live='37' stamp='0.363'/>
</phase>
<code_cache total_blobs='266' nmethods='13' adapters='166' free_code_cache='250536704'/>
<task_done success='1' nmsize='120' count='27810' stamp='0.365'/>
</task>
<task compile_id='32' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='7176' iicount='7176' stamp='0.590'>
<phase name='parse' nodes='3' live='3' stamp='0.590'>
<type id='711' name='void'/>
<type id='709' name='int'/>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='819' holder='780' name='ensureCapacityInternal' return='711' arguments='709' flags='2' bytes='16' iicount='7177'/>
<parse method='819' uses='7177' stamp='0.590'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='15' taken='6975' not_taken='202' cnt='7177' prob='0.971855'/>
<bc code='182' bci='12'/>
<method id='821' holder='780' name='expandCapacity' return='711' arguments='709' flags='0' bytes='50' iicount='357'/>
<dependency type='unique_concrete_method' ctxk='780' x='821'/>
<call method='821' count='188' prof_factor='1' inline='1'/>
<klass id='739' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='821' bci='26' reason='unloaded' action='reinterpret' index='141' klass='739'/>
<inline_success reason='inline (hot)'/>
<parse method='821' uses='202' stamp='0.607'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='187' bci='26'/>
<uncommon_trap bci='26' reason='unloaded' action='reinterpret' index='141'/>
<bc code='184' bci='43'/>
<klass id='808' name='[C' flags='1041'/>
<klass id='822' name='java/util/Arrays' flags='1'/>
<method id='823' holder='822' name='copyOf' return='808' arguments='808 709' flags='9' bytes='19' iicount='423'/>
<call method='823' count='-1' prof_factor='0.565826' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='823' uses='-1' stamp='0.608'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='825' name='java/lang/Math' flags='17'/>
<method id='826' holder='825' name='min' return='709' arguments='709 709' flags='9' bytes='11' compile_id='9' compiler='C1' level='3' iicount='2358'/>
<call method='826' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<klass id='722' name='java/lang/System' flags='17'/>
<method id='827' holder='722' name='arraycopy' return='711' arguments='716 709 716 709 709' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2689'/>
<call method='827' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='307' live='302' memory='74600' stamp='0.608'/>
</parse>
<parse_done nodes='322' live='316' memory='77336' stamp='0.625'/>
</parse>
<parse_done nodes='330' live='323' memory='79328' stamp='0.625'/>
</parse>
<phase_done name='parse' nodes='332' live='213' stamp='0.625'/>
</phase>
<phase name='optimizer' nodes='332' live='213' stamp='0.625'>
<phase name='escapeAnalysis' nodes='333' live='197' stamp='0.626'>
<phase name='connectionGraph' nodes='334' live='198' stamp='0.626'>
<phase_done name='connectionGraph' nodes='334' live='198' stamp='0.626'/>
</phase>
<phase_done name='escapeAnalysis' nodes='334' live='198' stamp='0.626'/>
</phase>
<phase name='ccp' nodes='334' live='198' stamp='0.626'>
<phase_done name='ccp' nodes='334' live='198' stamp='0.626'/>
</phase>
<phase name='idealLoop' nodes='334' live='197' stamp='0.626'>
<phase_done name='idealLoop' nodes='350' live='191' stamp='0.626'/>
</phase>
<phase name='idealLoop' nodes='350' live='191' stamp='0.626'>
<phase_done name='idealLoop' nodes='350' live='191' stamp='0.626'/>
</phase>
<phase_done name='optimizer' nodes='410' live='230' stamp='0.626'/>
</phase>
<phase name='matcher' nodes='410' live='230' stamp='0.626'>
<phase_done name='matcher' nodes='228' live='228' stamp='0.627'/>
</phase>
<phase name='regalloc' nodes='285' live='284' stamp='0.627'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='375' live='344' stamp='0.629'/>
</phase>
<phase name='output' nodes='377' live='346' stamp='0.629'>
<phase_done name='output' nodes='395' live='358' stamp='0.631'/>
</phase>
<dependency type='unique_concrete_method' ctxk='780' x='821'/>
<code_cache total_blobs='292' nmethods='31' adapters='171' free_code_cache='250484480'/>
<task_done success='1' nmsize='696' count='7241' inlined_bytes='80' stamp='0.651'/>
</task>
</compilation_log>
<compilation_log thread='26572'>
<start_compile_thread name='C2 CompilerThread0' thread='26572' process='23300' stamp='0.252'/>
<task compile_id='7' method='java/lang/String charAt (I)C' bytes='29' count='102426' iicount='102426' stamp='0.317'>
<phase name='parse' nodes='3' live='3' stamp='0.317'>
<type id='704' name='char'/>
<type id='709' name='int'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='charAt' return='704' arguments='709' flags='1' bytes='29' iicount='102433'/>
<klass id='821' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='819' bci='13' reason='unloaded' action='reinterpret' index='245' klass='821'/>
<parse method='819' uses='102433' stamp='0.317'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='102428' cnt='102428' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='102428' not_taken='0' cnt='102428' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='101' live='96' memory='34928' stamp='0.317'/>
</parse>
<phase_done name='parse' nodes='102' live='62' stamp='0.317'/>
</phase>
<phase name='optimizer' nodes='102' live='62' stamp='0.317'>
<phase name='ccp' nodes='102' live='62' stamp='0.317'>
<phase_done name='ccp' nodes='102' live='62' stamp='0.317'/>
</phase>
<phase name='idealLoop' nodes='102' live='62' stamp='0.317'>
<phase_done name='idealLoop' nodes='102' live='62' stamp='0.317'/>
</phase>
<phase_done name='optimizer' nodes='106' live='63' stamp='0.317'/>
</phase>
<phase name='matcher' nodes='106' live='63' stamp='0.317'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.318'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.318'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.318'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.318'>
<phase_done name='output' nodes='93' live='85' stamp='0.322'/>
</phase>
<code_cache total_blobs='255' nmethods='8' adapters='160' free_code_cache='250546816'/>
<task_done success='1' nmsize='216' count='102525' stamp='0.327'/>
</task>
<task compile_id='16' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='9989' iicount='9989' stamp='0.366'>
<phase name='parse' nodes='3' live='3' stamp='0.366'>
<klass id='820' name='java/util/TreeMap$Entry' flags='24'/>
<klass id='819' name='java/util/TreeMap' flags='1'/>
<method id='821' holder='819' name='parentOf' return='820' arguments='820' flags='10' bytes='13' iicount='10020'/>
<parse method='821' uses='10020' stamp='0.366'>
<bc code='199' bci='1'/>
<branch target_bci='8' taken='10020' not_taken='0' cnt='10020' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='43' live='41' memory='25800' stamp='0.366'/>
</parse>
<phase_done name='parse' nodes='44' live='25' stamp='0.366'/>
</phase>
<phase name='optimizer' nodes='44' live='25' stamp='0.366'>
<phase name='ccp' nodes='44' live='25' stamp='0.366'>
<phase_done name='ccp' nodes='44' live='25' stamp='0.366'/>
</phase>
<phase name='idealLoop' nodes='44' live='24' stamp='0.366'>
<phase_done name='idealLoop' nodes='44' live='24' stamp='0.366'/>
</phase>
<phase_done name='optimizer' nodes='44' live='24' stamp='0.366'/>
</phase>
<phase name='matcher' nodes='44' live='24' stamp='0.366'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.366'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.366'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='33' live='30' stamp='0.366'/>
</phase>
<phase name='output' nodes='33' live='30' stamp='0.366'>
<phase_done name='output' nodes='39' live='36' stamp='0.366'/>
</phase>
<code_cache total_blobs='267' nmethods='14' adapters='166' free_code_cache='250536128'/>
<task_done success='1' nmsize='88' count='10514' stamp='0.369'/>
</task>
<task compile_id='33' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='6427' iicount='6427' stamp='0.590'>
<phase name='parse' nodes='3' live='3' stamp='0.591'>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='704' name='char'/>
<method id='819' holder='780' name='append' return='780' arguments='704' flags='1' bytes='29' iicount='6428'/>
<parse method='819' uses='6428' stamp='0.607'>
<bc code='183' bci='7'/>
<type id='711' name='void'/>
<type id='709' name='int'/>
<method id='821' holder='780' name='ensureCapacityInternal' return='711' arguments='709' flags='2' bytes='16' iicount='7238'/>
<call method='821' count='5946' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='821' uses='6428' stamp='0.607'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='15' taken='7035' not_taken='203' cnt='7238' prob='0.971954'/>
<bc code='182' bci='12'/>
<method id='822' holder='780' name='expandCapacity' return='711' arguments='709' flags='0' bytes='50' iicount='357'/>
<dependency type='unique_concrete_method' ctxk='780' x='822'/>
<call method='822' count='189' prof_factor='0.888091' inline='1'/>
<klass id='739' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='822' bci='26' reason='unloaded' action='reinterpret' index='141' klass='739'/>
<inline_success reason='inline (hot)'/>
<parse method='822' uses='181' stamp='0.608'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='187' bci='26'/>
<uncommon_trap bci='26' reason='unloaded' action='reinterpret' index='141'/>
<bc code='184' bci='43'/>
<klass id='808' name='[C' flags='1041'/>
<klass id='824' name='java/util/Arrays' flags='1'/>
<method id='825' holder='824' name='copyOf' return='808' arguments='808 709' flags='9' bytes='19' iicount='423'/>
<call method='825' count='-1' prof_factor='0.507003' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='825' uses='-1' stamp='0.608'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='827' name='java/lang/Math' flags='17'/>
<method id='828' holder='827' name='min' return='709' arguments='709 709' flags='9' bytes='11' compile_id='9' compiler='C1' level='3' iicount='2358'/>
<call method='828' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<klass id='722' name='java/lang/System' flags='17'/>
<method id='829' holder='722' name='arraycopy' return='711' arguments='716 709 716 709 709' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2689'/>
<call method='829' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='325' live='320' memory='77768' stamp='0.608'/>
</parse>
<parse_done nodes='340' live='334' memory='80504' stamp='0.625'/>
</parse>
<parse_done nodes='348' live='341' memory='82896' stamp='0.625'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='396' live='386' memory='91320' stamp='0.625'/>
</parse>
<phase_done name='parse' nodes='398' live='250' stamp='0.626'/>
</phase>
<phase name='optimizer' nodes='398' live='250' stamp='0.626'>
<phase name='escapeAnalysis' nodes='399' live='233' stamp='0.626'>
<phase name='connectionGraph' nodes='400' live='234' stamp='0.626'>
<phase_done name='connectionGraph' nodes='400' live='234' stamp='0.626'/>
</phase>
<phase_done name='escapeAnalysis' nodes='400' live='234' stamp='0.626'/>
</phase>
<phase name='ccp' nodes='400' live='234' stamp='0.626'>
<phase_done name='ccp' nodes='400' live='234' stamp='0.626'/>
</phase>
<phase name='idealLoop' nodes='400' live='233' stamp='0.626'>
<phase_done name='idealLoop' nodes='428' live='228' stamp='0.626'/>
</phase>
<phase name='idealLoop' nodes='428' live='228' stamp='0.626'>
<phase_done name='idealLoop' nodes='428' live='228' stamp='0.627'/>
</phase>
<phase_done name='optimizer' nodes='489' live='269' stamp='0.627'/>
</phase>
<phase name='matcher' nodes='489' live='269' stamp='0.627'>
<phase_done name='matcher' nodes='266' live='266' stamp='0.627'/>
</phase>
<phase name='regalloc' nodes='329' live='328' stamp='0.628'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='421' live='386' stamp='0.630'/>
</phase>
<phase name='output' nodes='421' live='386' stamp='0.630'>
<phase_done name='output' nodes='437' live='398' stamp='0.631'/>
</phase>
<dependency type='unique_concrete_method' ctxk='780' x='822'/>
<code_cache total_blobs='292' nmethods='33' adapters='171' free_code_cache='250493312'/>
<task_done success='1' nmsize='792' count='6458' inlined_bytes='96' stamp='0.676'/>
</task>
</compilation_log>
<hotspot_log_done stamp='1.045'/>
</hotspot_log>
