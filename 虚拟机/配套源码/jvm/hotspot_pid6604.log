<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='6604' time_ms='1560609646760'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.91-b14
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.91-b14) for windows-amd64 JRE (1.8.0_91-b14), built on Apr  1 2016 00:58:32 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-Dvisualvm.id=151742038687212 -XX:+UnlockDiagnosticVMOptions -XX:+LogCompilation -XX:+PrintAssembly -javaagent:D:\ideaIU-2019.1.win\lib\idea_rt.jar=51628:D:\ideaIU-2019.1.win\bin -Dfile.encoding=UTF-8 
</args>
<command>
cn.itcast.jvm.t4.Demo4_2
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.91-b14
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_91\jre\lib\endorsed
sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_91\jre\bin
java.library.path=C:\Program Files\Java\jdk1.8.0_91\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\ideaIU-2019.1.win\bin\;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Program Files (x86)\NetSarang\Xftp 6\;c:\program files\graphicsmagick-1.3.31-q8;C:\oraclexe\app\oracle\product\11.2.0\server\bin;D:\apache-maven-3.5.2\bin;C:\Program Files\Java\jdk-11\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Git\cmd;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\ffmpeg\bin;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\WINDOWS\System32\OpenSSH\;D:\nodejs\;C:\Program Files\TortoiseSVN\bin;C:\Users\lenovo\AppData\Local\Programs\Python\Python37\Scripts\;C:\Users\lenovo\AppData\Local\Programs\Python\Python37\;C:\Program Files\Docker Toolbox;C:\Users\lenovo\AppData\Local\atom\bin;C:\Users\lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\lenovo\AppData\Roaming\npm;C:\Users\lenovo\AppData\Local\Programs\Microsoft VS Code\bin;E:\mysql-5.5\bin;;.
java.home=C:\Program Files\Java\jdk1.8.0_91\jre
java.class.path=C:\Program Files\Java\jdk1.8.0_91\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\rt.jar;E:\git\jvm\out\production\jvm;E:\git\jvm\lib\jackson-core-2.3.3.jar;E:\git\jvm\lib\jackson-databind-2.3.3.jar;E:\git\jvm\lib\jackson-annotations-2.3.3.jar
sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_91\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_91\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
visualvm.id=151742038687212
file.encoding=UTF-8
sun.java.command=cn.itcast.jvm.t4.Demo4_2
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='22072'/>
<thread_logfile thread='22072' filename='C:\Users\lenovo\AppData\Local\Temp\\hs_c22072_pid6604.log'/>
<writer thread='21592'/>
<thread_logfile thread='21592' filename='C:\Users\lenovo\AppData\Local\Temp\\hs_c21592_pid6604.log'/>
<writer thread='12552'/>
Loaded disassembler from C:\Program Files\Java\jdk1.8.0_91\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x0000000002a7e8d0:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
  # {method} {0x000000001b6596a8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x0000000002a7ea40: mov    0x8(%rdx),%r10d
  0x0000000002a7ea44: shl    $0x3,%r10
  0x0000000002a7ea48: cmp    %r10,%rax
  0x0000000002a7ea4b: je     0x0000000002a7ea58
  0x0000000002a7ea51: jmpq   0x0000000002a55f60  ;   {runtime_call}
  0x0000000002a7ea56: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002a7ea58: mov    %eax,-0x6000(%rsp)
  0x0000000002a7ea5f: push   %rbp
  0x0000000002a7ea60: mov    %rsp,%rbp
  0x0000000002a7ea63: sub    $0x80,%rsp
  0x0000000002a7ea6a: mov    %rsi,0x30(%rsp)
  0x0000000002a7ea6f: mov    %rdi,0x28(%rsp)
  0x0000000002a7ea74: mov    %r9,0x48(%rsp)
  0x0000000002a7ea79: cmp    $0x0,%r9
  0x0000000002a7ea7d: lea    0x48(%rsp),%rax
  0x0000000002a7ea82: cmove  0x48(%rsp),%rax
  0x0000000002a7ea88: mov    %rax,0x20(%rsp)
  0x0000000002a7ea8d: mov    %r8,%r9
  0x0000000002a7ea90: mov    %rdx,0x38(%rsp)
  0x0000000002a7ea95: cmp    $0x0,%rdx
  0x0000000002a7ea99: lea    0x38(%rsp),%r8
  0x0000000002a7ea9e: cmove  0x38(%rsp),%r8
  0x0000000002a7eaa4: movabs $0x76b400c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002a7eaae: mov    %r14,0x68(%rsp)
  0x0000000002a7eab3: lea    0x68(%rsp),%r14
  0x0000000002a7eab8: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x0000000002a7eabb: movabs $0x2a7eabb,%r10    ;   {section_word}
  0x0000000002a7eac5: mov    %r10,0x1e0(%r15)
  0x0000000002a7eacc: mov    %rsp,0x1d8(%r15)
  0x0000000002a7ead3: cmpb   $0x0,0x7257555d(%rip)        # 0x0000000074ff4037
                                                ;   {external_word}
  0x0000000002a7eada: je     0x0000000002a7eb22
  0x0000000002a7eae0: push   %rdx
  0x0000000002a7eae1: push   %r8
  0x0000000002a7eae3: push   %r9
  0x0000000002a7eae5: movabs $0x1b6596a0,%rdx   ;   {metadata({method} {0x000000001b6596a8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002a7eaef: mov    %r15,%rcx
  0x0000000002a7eaf2: sub    $0x20,%rsp
  0x0000000002a7eaf6: test   $0xf,%esp
  0x0000000002a7eafc: je     0x0000000002a7eb14
  0x0000000002a7eb02: sub    $0x8,%rsp
  0x0000000002a7eb06: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002a7eb0b: add    $0x8,%rsp
  0x0000000002a7eb0f: jmpq   0x0000000002a7eb19
  0x0000000002a7eb14: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002a7eb19: add    $0x20,%rsp
  0x0000000002a7eb1d: pop    %r9
  0x0000000002a7eb1f: pop    %r8
  0x0000000002a7eb21: pop    %rdx
  0x0000000002a7eb22: lea    0x1f8(%r15),%rcx
  0x0000000002a7eb29: movl   $0x4,0x270(%r15)
  0x0000000002a7eb34: callq  0x00000000500307fe  ;   {runtime_call}
  0x0000000002a7eb39: vzeroupper 
  0x0000000002a7eb3c: movl   $0x5,0x270(%r15)
  0x0000000002a7eb47: mov    %r15d,%ecx
  0x0000000002a7eb4a: shr    $0x4,%ecx
  0x0000000002a7eb4d: and    $0xffc,%ecx
  0x0000000002a7eb53: movabs $0x9d0000,%r10     ;   {external_word}
  0x0000000002a7eb5d: mov    %ecx,(%r10,%rcx,1)
  0x0000000002a7eb61: cmpl   $0x0,0x725760a5(%rip)        # 0x0000000074ff4c10
                                                ;   {external_word}
  0x0000000002a7eb6b: jne    0x0000000002a7eb7f
  0x0000000002a7eb71: cmpl   $0x0,0x30(%r15)
  0x0000000002a7eb79: je     0x0000000002a7eb98
  0x0000000002a7eb7f: mov    %r15,%rcx
  0x0000000002a7eb82: mov    %rsp,%r12
  0x0000000002a7eb85: sub    $0x20,%rsp
  0x0000000002a7eb89: and    $0xfffffffffffffff0,%rsp
  0x0000000002a7eb8d: callq  0x0000000074a31270  ;   {runtime_call}
  0x0000000002a7eb92: mov    %r12,%rsp
  0x0000000002a7eb95: xor    %r12,%r12
  0x0000000002a7eb98: movl   $0x8,0x270(%r15)
  0x0000000002a7eba3: cmpl   $0x1,0x29c(%r15)
  0x0000000002a7ebae: je     0x0000000002a7ec3e
  0x0000000002a7ebb4: cmpb   $0x0,0x7257547c(%rip)        # 0x0000000074ff4037
                                                ;   {external_word}
  0x0000000002a7ebbb: je     0x0000000002a7ebf9
  0x0000000002a7ebc1: movabs $0x1b6596a0,%rdx   ;   {metadata({method} {0x000000001b6596a8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002a7ebcb: mov    %r15,%rcx
  0x0000000002a7ebce: sub    $0x20,%rsp
  0x0000000002a7ebd2: test   $0xf,%esp
  0x0000000002a7ebd8: je     0x0000000002a7ebf0
  0x0000000002a7ebde: sub    $0x8,%rsp
  0x0000000002a7ebe2: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002a7ebe7: add    $0x8,%rsp
  0x0000000002a7ebeb: jmpq   0x0000000002a7ebf5
  0x0000000002a7ebf0: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002a7ebf5: add    $0x20,%rsp
  0x0000000002a7ebf9: movabs $0x0,%r10
  0x0000000002a7ec03: mov    %r10,0x1d8(%r15)
  0x0000000002a7ec0a: movabs $0x0,%r10
  0x0000000002a7ec14: mov    %r10,0x1e0(%r15)
  0x0000000002a7ec1b: mov    0x38(%r15),%rcx
  0x0000000002a7ec1f: movl   $0x0,0x100(%rcx)
  0x0000000002a7ec29: leaveq 
  0x0000000002a7ec2a: cmpq   $0x0,0x8(%r15)
  0x0000000002a7ec32: jne    0x0000000002a7ec39
  0x0000000002a7ec38: retq   
  0x0000000002a7ec39: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002a7ec3e: mov    %rsp,%r12
  0x0000000002a7ec41: sub    $0x20,%rsp
  0x0000000002a7ec45: and    $0xfffffffffffffff0,%rsp
  0x0000000002a7ec49: callq  0x0000000074a1ae00  ;   {runtime_call}
  0x0000000002a7ec4e: mov    %r12,%rsp
  0x0000000002a7ec51: xor    %r12,%r12
  0x0000000002a7ec54: jmpq   0x0000000002a7ebb4
  0x0000000002a7ec59: hlt    
  0x0000000002a7ec5a: hlt    
  0x0000000002a7ec5b: hlt    
  0x0000000002a7ec5c: hlt    
  0x0000000002a7ec5d: hlt    
  0x0000000002a7ec5e: hlt    
  0x0000000002a7ec5f: hlt    
<nmethod compile_id='1' compile_kind='c2n' level='0' entry='0x0000000002a7ea40' size='912' address='0x0000000002a7e8d0' relocation_offset='288' consts_offset='912' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='2689' iicount='2689' stamp='0.276'/>
<writer thread='18216'/>
<thread_logfile thread='18216' filename='C:\Users\lenovo\AppData\Local\Temp\\hs_c18216_pid6604.log'/>
<writer thread='12552'/>
<task_queued compile_id='2' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='256' iicount='256' level='3' stamp='0.281' comment='tiered' hot_count='256'/>
<task_queued compile_id='3' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4480' iicount='4480' level='3' stamp='0.281' comment='tiered' hot_count='4480'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b12b10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b6b7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002b12c80: mov    0x8(%rdx),%r10d
  0x0000000002b12c84: shl    $0x3,%r10
  0x0000000002b12c88: cmp    %rax,%r10
  0x0000000002b12c8b: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b12c91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b12c9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b12ca0: mov    %eax,-0x6000(%rsp)
  0x0000000002b12ca7: push   %rbp
  0x0000000002b12ca8: sub    $0x40,%rsp
  0x0000000002b12cac: mov    %rdx,%r8
  0x0000000002b12caf: movabs $0x1b8b5bd0,%rbx   ;   {metadata(method data for {method} {0x000000001b6b7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b12cb9: mov    0xdc(%rbx),%edx
  0x0000000002b12cbf: add    $0x8,%edx
  0x0000000002b12cc2: mov    %edx,0xdc(%rbx)
  0x0000000002b12cc8: movabs $0x1b6b7420,%rbx   ;   {metadata({method} {0x000000001b6b7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b12cd2: and    $0x1ff8,%edx
  0x0000000002b12cd8: cmp    $0x0,%edx
  0x0000000002b12cdb: je     0x0000000002b12e15  ;*aload_0
                                                ; - java.lang.StringBuilder::&lt;init&gt;@0 (line 89)

  0x0000000002b12ce1: mov    %r8,%rbx
  0x0000000002b12ce4: movabs $0x1b8b5bd0,%rdx   ;   {metadata(method data for {method} {0x000000001b6b7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b12cee: addq   $0x1,0x108(%rdx)
  0x0000000002b12cf6: movabs $0x1b8b69a0,%rbx   ;   {metadata(method data for {method} {0x000000001b6b3810} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b12d00: mov    0xdc(%rbx),%edx
  0x0000000002b12d06: add    $0x8,%edx
  0x0000000002b12d09: mov    %edx,0xdc(%rbx)
  0x0000000002b12d0f: movabs $0x1b6b3808,%rbx   ;   {metadata({method} {0x000000001b6b3810} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b12d19: and    $0x7ffff8,%edx
  0x0000000002b12d1f: cmp    $0x0,%edx
  0x0000000002b12d22: je     0x0000000002b12e2c
  0x0000000002b12d28: mov    %r8,%rbx
  0x0000000002b12d2b: movabs $0x1b8b69a0,%rdx   ;   {metadata(method data for {method} {0x000000001b6b3810} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b12d35: addq   $0x1,0x108(%rdx)
  0x0000000002b12d3d: movabs $0x1b771918,%rbx   ;   {metadata(method data for {method} {0x000000001b640488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002b12d47: mov    0xdc(%rbx),%edx
  0x0000000002b12d4d: add    $0x8,%edx
  0x0000000002b12d50: mov    %edx,0xdc(%rbx)
  0x0000000002b12d56: movabs $0x1b640480,%rbx   ;   {metadata({method} {0x000000001b640488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002b12d60: and    $0x7ffff8,%edx
  0x0000000002b12d66: cmp    $0x0,%edx
  0x0000000002b12d69: je     0x0000000002b12e43
  0x0000000002b12d6f: mov    $0x10,%ebx
  0x0000000002b12d74: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002b12d7e: movslq %ebx,%rbx
  0x0000000002b12d81: mov    %rbx,%rdi
  0x0000000002b12d84: cmp    $0xffffff,%rbx
  0x0000000002b12d8b: ja     0x0000000002b12e5a
  0x0000000002b12d91: movabs $0x17,%rsi
  0x0000000002b12d9b: lea    (%rsi,%rbx,2),%rsi
  0x0000000002b12d9f: and    $0xfffffffffffffff8,%rsi
  0x0000000002b12da3: mov    0x60(%r15),%rax
  0x0000000002b12da7: lea    (%rax,%rsi,1),%rsi
  0x0000000002b12dab: cmp    0x70(%r15),%rsi
  0x0000000002b12daf: ja     0x0000000002b12e5a
  0x0000000002b12db5: mov    %rsi,0x60(%r15)
  0x0000000002b12db9: sub    %rax,%rsi
  0x0000000002b12dbc: movq   $0x1,(%rax)
  0x0000000002b12dc3: mov    %rdx,%rcx
  0x0000000002b12dc6: shr    $0x3,%rcx
  0x0000000002b12dca: mov    %ecx,0x8(%rax)
  0x0000000002b12dcd: mov    %ebx,0xc(%rax)
  0x0000000002b12dd0: sub    $0x10,%rsi
  0x0000000002b12dd4: je     0x0000000002b12deb
  0x0000000002b12dda: xor    %rbx,%rbx
  0x0000000002b12ddd: shr    $0x3,%rsi
  0x0000000002b12de1: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002b12de6: dec    %rsi
  0x0000000002b12de9: jne    0x0000000002b12de1  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x0000000002b12deb: mov    %rax,%r10
  0x0000000002b12dee: shr    $0x3,%r10
  0x0000000002b12df2: mov    %r10d,0x10(%r8)
  0x0000000002b12df6: shr    $0x9,%r8
  0x0000000002b12dfa: movabs $0xe7c2000,%rsi
  0x0000000002b12e04: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x0000000002b12e09: add    $0x40,%rsp
  0x0000000002b12e0d: pop    %rbp
  0x0000000002b12e0e: test   %eax,-0x2152d14(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b12e14: retq   
  0x0000000002b12e15: mov    %rbx,0x8(%rsp)
  0x0000000002b12e1a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b12e22: callq  0x0000000002b13560  ; OopMap{r8=Oop off=423}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ;   {runtime_call}
  0x0000000002b12e27: jmpq   0x0000000002b12ce1
  0x0000000002b12e2c: mov    %rbx,0x8(%rsp)
  0x0000000002b12e31: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b12e39: callq  0x0000000002b13560  ; OopMap{r8=Oop off=446}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000002b12e3e: jmpq   0x0000000002b12d28
  0x0000000002b12e43: mov    %rbx,0x8(%rsp)
  0x0000000002b12e48: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b12e50: callq  0x0000000002b13560  ; OopMap{r8=Oop off=469}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000002b12e55: jmpq   0x0000000002b12d6f
  0x0000000002b12e5a: callq  0x0000000002a7ffc0  ; OopMap{r8=Oop off=479}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000002b12e5f: jmp    0x0000000002b12deb
  0x0000000002b12e61: nop
  0x0000000002b12e62: nop
  0x0000000002b12e63: mov    0x2a8(%r15),%rax
  0x0000000002b12e6a: movabs $0x0,%r10
  0x0000000002b12e74: mov    %r10,0x2a8(%r15)
  0x0000000002b12e7b: movabs $0x0,%r10
  0x0000000002b12e85: mov    %r10,0x2b0(%r15)
  0x0000000002b12e8c: add    $0x40,%rsp
  0x0000000002b12e90: pop    %rbp
  0x0000000002b12e91: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b12e96: hlt    
  0x0000000002b12e97: hlt    
  0x0000000002b12e98: hlt    
  0x0000000002b12e99: hlt    
  0x0000000002b12e9a: hlt    
  0x0000000002b12e9b: hlt    
  0x0000000002b12e9c: hlt    
  0x0000000002b12e9d: hlt    
  0x0000000002b12e9e: hlt    
  0x0000000002b12e9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b12ea0: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b12ea5: mov    %rsp,-0x28(%rsp)
  0x0000000002b12eaa: sub    $0x80,%rsp
  0x0000000002b12eb1: mov    %rax,0x78(%rsp)
  0x0000000002b12eb6: mov    %rcx,0x70(%rsp)
  0x0000000002b12ebb: mov    %rdx,0x68(%rsp)
  0x0000000002b12ec0: mov    %rbx,0x60(%rsp)
  0x0000000002b12ec5: mov    %rbp,0x50(%rsp)
  0x0000000002b12eca: mov    %rsi,0x48(%rsp)
  0x0000000002b12ecf: mov    %rdi,0x40(%rsp)
  0x0000000002b12ed4: mov    %r8,0x38(%rsp)
  0x0000000002b12ed9: mov    %r9,0x30(%rsp)
  0x0000000002b12ede: mov    %r10,0x28(%rsp)
  0x0000000002b12ee3: mov    %r11,0x20(%rsp)
  0x0000000002b12ee8: mov    %r12,0x18(%rsp)
  0x0000000002b12eed: mov    %r13,0x10(%rsp)
  0x0000000002b12ef2: mov    %r14,0x8(%rsp)
  0x0000000002b12ef7: mov    %r15,(%rsp)
  0x0000000002b12efb: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b12f05: movabs $0x2b12ea5,%rdx    ;   {internal_word}
  0x0000000002b12f0f: mov    %rsp,%r8
  0x0000000002b12f12: and    $0xfffffffffffffff0,%rsp
  0x0000000002b12f16: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b12f1b: hlt    
[Deopt Handler Code]
  0x0000000002b12f1c: movabs $0x2b12f1c,%r10    ;   {section_word}
  0x0000000002b12f26: push   %r10
  0x0000000002b12f28: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b12f2d: hlt    
  0x0000000002b12f2e: hlt    
  0x0000000002b12f2f: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x0000000002b12c80' size='1312' address='0x0000000002b12b10' relocation_offset='288' insts_offset='368' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1160' dependencies_offset='1304' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='260' iicount='260' stamp='0.289'/>
<writer thread='26472'/>
<task_queued compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='757' backedge_count='14336' iicount='757' level='3' stamp='0.289' comment='tiered' hot_count='757'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b12550:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b644fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b126c0: mov    0x8(%rdx),%r10d
  0x0000000002b126c4: shl    $0x3,%r10
  0x0000000002b126c8: cmp    %rax,%r10
  0x0000000002b126cb: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b126d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b126dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b126e0: mov    %eax,-0x6000(%rsp)
  0x0000000002b126e7: push   %rbp
  0x0000000002b126e8: sub    $0x30,%rsp
  0x0000000002b126ec: movabs $0x1b822548,%rax   ;   {metadata(method data for {method} {0x000000001b644fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b126f6: mov    0xdc(%rax),%esi
  0x0000000002b126fc: add    $0x8,%esi
  0x0000000002b126ff: mov    %esi,0xdc(%rax)
  0x0000000002b12705: movabs $0x1b644fb0,%rax   ;   {metadata({method} {0x000000001b644fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1270f: and    $0x1ff8,%esi
  0x0000000002b12715: cmp    $0x0,%esi
  0x0000000002b12718: je     0x0000000002b12851  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x0000000002b1271e: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x0000000002b12721: cmp    $0x0,%eax
  0x0000000002b12724: movabs $0x1b822548,%rsi   ;   {metadata(method data for {method} {0x000000001b644fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1272e: movabs $0x108,%rdi
  0x0000000002b12738: jne    0x0000000002b12748
  0x0000000002b1273e: movabs $0x118,%rdi
  0x0000000002b12748: mov    (%rsi,%rdi,1),%rbx
  0x0000000002b1274c: lea    0x1(%rbx),%rbx
  0x0000000002b12750: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002b12754: jne    0x0000000002b12845  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x0000000002b1275a: mov    0xc(%rdx),%esi
  0x0000000002b1275d: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x0000000002b12761: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x0000000002b12868
  0x0000000002b12764: cmp    $0x0,%edi
  0x0000000002b12767: movabs $0x1b822548,%rbx   ;   {metadata(method data for {method} {0x000000001b644fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b12771: movabs $0x128,%rcx
  0x0000000002b1277b: jle    0x0000000002b1278b
  0x0000000002b12781: movabs $0x138,%rcx
  0x0000000002b1278b: mov    (%rbx,%rcx,1),%r8
  0x0000000002b1278f: lea    0x1(%r8),%r8
  0x0000000002b12793: mov    %r8,(%rbx,%rcx,1)
  0x0000000002b12797: jle    0x0000000002b12845  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x0000000002b1279d: mov    $0x0,%ebx
  0x0000000002b127a2: jmpq   0x0000000002b1280a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x0000000002b127a7: nop
  0x0000000002b127a8: movslq %ebx,%rcx
  0x0000000002b127ab: movzwl 0x10(%rsi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002b127b0: mov    %rax,%r8
  0x0000000002b127b3: shl    $0x5,%eax
  0x0000000002b127b6: sub    %r8d,%eax
  0x0000000002b127b9: add    %ecx,%eax
  0x0000000002b127bb: inc    %ebx
  0x0000000002b127bd: movabs $0x1b822548,%rcx   ;   {metadata(method data for {method} {0x000000001b644fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b127c7: mov    0xe0(%rcx),%r8d
  0x0000000002b127ce: add    $0x8,%r8d
  0x0000000002b127d2: mov    %r8d,0xe0(%rcx)
  0x0000000002b127d9: movabs $0x1b644fb0,%rcx   ;   {metadata({method} {0x000000001b644fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b127e3: and    $0xfff8,%r8d
  0x0000000002b127ea: cmp    $0x0,%r8d
  0x0000000002b127ee: je     0x0000000002b1286d  ; OopMap{rsi=Oop rdx=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000002b127f4: test   %eax,-0x21526fa(%rip)        # 0x00000000009c0100
                                                ;   {poll}
  0x0000000002b127fa: movabs $0x1b822548,%rcx   ;   {metadata(method data for {method} {0x000000001b644fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b12804: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000002b1280a: cmp    %edi,%ebx
  0x0000000002b1280c: movabs $0x1b822548,%rcx   ;   {metadata(method data for {method} {0x000000001b644fb8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b12816: movabs $0x148,%r8
  0x0000000002b12820: jge    0x0000000002b12830
  0x0000000002b12826: movabs $0x158,%r8
  0x0000000002b12830: mov    (%rcx,%r8,1),%r9
  0x0000000002b12834: lea    0x1(%r9),%r9
  0x0000000002b12838: mov    %r9,(%rcx,%r8,1)
  0x0000000002b1283c: jl     0x0000000002b127a8  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002b12842: mov    %eax,0x10(%rdx)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x0000000002b12845: add    $0x30,%rsp
  0x0000000002b12849: pop    %rbp
  0x0000000002b1284a: test   %eax,-0x2152750(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b12850: retq   
  0x0000000002b12851: mov    %rax,0x8(%rsp)
  0x0000000002b12856: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1285e: callq  0x0000000002b13560  ; OopMap{rdx=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x0000000002b12863: jmpq   0x0000000002b1271e
  0x0000000002b12868: callq  0x0000000002a80dc0  ; OopMap{rdx=Oop rsi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x0000000002b1286d: mov    %rcx,0x8(%rsp)
  0x0000000002b12872: movq   $0x2d,(%rsp)
  0x0000000002b1287a: callq  0x0000000002b13560  ; OopMap{rsi=Oop rdx=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x0000000002b1287f: jmpq   0x0000000002b127f4
  0x0000000002b12884: nop
  0x0000000002b12885: nop
  0x0000000002b12886: mov    0x2a8(%r15),%rax
  0x0000000002b1288d: movabs $0x0,%r10
  0x0000000002b12897: mov    %r10,0x2a8(%r15)
  0x0000000002b1289e: movabs $0x0,%r10
  0x0000000002b128a8: mov    %r10,0x2b0(%r15)
  0x0000000002b128af: add    $0x30,%rsp
  0x0000000002b128b3: pop    %rbp
  0x0000000002b128b4: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b128b9: hlt    
  0x0000000002b128ba: hlt    
  0x0000000002b128bb: hlt    
  0x0000000002b128bc: hlt    
  0x0000000002b128bd: hlt    
  0x0000000002b128be: hlt    
  0x0000000002b128bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b128c0: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b128c5: mov    %rsp,-0x28(%rsp)
  0x0000000002b128ca: sub    $0x80,%rsp
  0x0000000002b128d1: mov    %rax,0x78(%rsp)
  0x0000000002b128d6: mov    %rcx,0x70(%rsp)
  0x0000000002b128db: mov    %rdx,0x68(%rsp)
  0x0000000002b128e0: mov    %rbx,0x60(%rsp)
  0x0000000002b128e5: mov    %rbp,0x50(%rsp)
  0x0000000002b128ea: mov    %rsi,0x48(%rsp)
  0x0000000002b128ef: mov    %rdi,0x40(%rsp)
  0x0000000002b128f4: mov    %r8,0x38(%rsp)
  0x0000000002b128f9: mov    %r9,0x30(%rsp)
  0x0000000002b128fe: mov    %r10,0x28(%rsp)
  0x0000000002b12903: mov    %r11,0x20(%rsp)
  0x0000000002b12908: mov    %r12,0x18(%rsp)
  0x0000000002b1290d: mov    %r13,0x10(%rsp)
  0x0000000002b12912: mov    %r14,0x8(%rsp)
  0x0000000002b12917: mov    %r15,(%rsp)
  0x0000000002b1291b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b12925: movabs $0x2b128c5,%rdx    ;   {internal_word}
  0x0000000002b1292f: mov    %rsp,%r8
  0x0000000002b12932: and    $0xfffffffffffffff0,%rsp
  0x0000000002b12936: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b1293b: hlt    
[Deopt Handler Code]
  0x0000000002b1293c: movabs $0x2b1293c,%r10    ;   {section_word}
  0x0000000002b12946: push   %r10
  0x0000000002b12948: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b1294d: hlt    
  0x0000000002b1294e: hlt    
  0x0000000002b1294f: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x0000000002b126c0' size='1448' address='0x0000000002b12550' relocation_offset='288' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='757' backedge_count='14372' iicount='757' stamp='0.297'/>
Decoding compiled method 0x0000000002b12210:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b640488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000002b12360: mov    0x8(%rdx),%r10d
  0x0000000002b12364: shl    $0x3,%r10
  0x0000000002b12368: cmp    %rax,%r10
  0x0000000002b1236b: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b12371: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b1237c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b12380: mov    %eax,-0x6000(%rsp)
  0x0000000002b12387: push   %rbp
  0x0000000002b12388: sub    $0x50,%rsp
  0x0000000002b1238c: movabs $0x1b771918,%rcx   ;   {metadata(method data for {method} {0x000000001b640488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002b12396: mov    0xdc(%rcx),%esi
  0x0000000002b1239c: add    $0x8,%esi
  0x0000000002b1239f: mov    %esi,0xdc(%rcx)
  0x0000000002b123a5: movabs $0x1b640480,%rcx   ;   {metadata({method} {0x000000001b640488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002b123af: and    $0x1ff8,%esi
  0x0000000002b123b5: cmp    $0x0,%esi
  0x0000000002b123b8: je     0x0000000002b123d7
  0x0000000002b123be: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000002b123c1: mov    %rdx,0x40(%rsp)
  0x0000000002b123c6: callq  0x0000000002a80b20  ; OopMap{[64]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000002b123cb: add    $0x50,%rsp
  0x0000000002b123cf: pop    %rbp
  0x0000000002b123d0: test   %eax,-0x21522d6(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b123d6: retq   
  0x0000000002b123d7: mov    %rcx,0x8(%rsp)
  0x0000000002b123dc: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b123e4: callq  0x0000000002b13560  ; OopMap{rdx=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x0000000002b123e9: jmp    0x0000000002b123be
  0x0000000002b123eb: nop
  0x0000000002b123ec: nop
  0x0000000002b123ed: mov    0x2a8(%r15),%rax
  0x0000000002b123f4: movabs $0x0,%r10
  0x0000000002b123fe: mov    %r10,0x2a8(%r15)
  0x0000000002b12405: movabs $0x0,%r10
  0x0000000002b1240f: mov    %r10,0x2b0(%r15)
  0x0000000002b12416: add    $0x50,%rsp
  0x0000000002b1241a: pop    %rbp
  0x0000000002b1241b: jmpq   0x0000000002a81920  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x0000000002b12420: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b12425: mov    %rsp,-0x28(%rsp)
  0x0000000002b1242a: sub    $0x80,%rsp
  0x0000000002b12431: mov    %rax,0x78(%rsp)
  0x0000000002b12436: mov    %rcx,0x70(%rsp)
  0x0000000002b1243b: mov    %rdx,0x68(%rsp)
  0x0000000002b12440: mov    %rbx,0x60(%rsp)
  0x0000000002b12445: mov    %rbp,0x50(%rsp)
  0x0000000002b1244a: mov    %rsi,0x48(%rsp)
  0x0000000002b1244f: mov    %rdi,0x40(%rsp)
  0x0000000002b12454: mov    %r8,0x38(%rsp)
  0x0000000002b12459: mov    %r9,0x30(%rsp)
  0x0000000002b1245e: mov    %r10,0x28(%rsp)
  0x0000000002b12463: mov    %r11,0x20(%rsp)
  0x0000000002b12468: mov    %r12,0x18(%rsp)
  0x0000000002b1246d: mov    %r13,0x10(%rsp)
  0x0000000002b12472: mov    %r14,0x8(%rsp)
  0x0000000002b12477: mov    %r15,(%rsp)
  0x0000000002b1247b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b12485: movabs $0x2b12425,%rdx    ;   {internal_word}
  0x0000000002b1248f: mov    %rsp,%r8
  0x0000000002b12492: and    $0xfffffffffffffff0,%rsp
  0x0000000002b12496: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b1249b: hlt    
[Deopt Handler Code]
  0x0000000002b1249c: movabs $0x2b1249c,%r10    ;   {section_word}
  0x0000000002b124a6: push   %r10
  0x0000000002b124a8: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b124ad: hlt    
  0x0000000002b124ae: hlt    
  0x0000000002b124af: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x0000000002b12360' size='800' address='0x0000000002b12210' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='792' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4505' iicount='4505' stamp='0.301'/>
<writer thread='26472'/>
<task_queued compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='640' backedge_count='2957' iicount='640' level='3' stamp='0.303' comment='tiered' hot_count='640'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='12552'/>
<task_queued compile_id='6' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='0.303' comment='tiered' hot_count='128'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b141d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b14360: mov    0x8(%rdx),%r10d
  0x0000000002b14364: shl    $0x3,%r10
  0x0000000002b14368: cmp    %rax,%r10
  0x0000000002b1436b: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b14371: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b1437c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b14380: mov    %eax,-0x6000(%rsp)
  0x0000000002b14387: push   %rbp
  0x0000000002b14388: sub    $0x30,%rsp
  0x0000000002b1438c: movabs $0x1b870550,%rax   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b14396: mov    0xdc(%rax),%esi
  0x0000000002b1439c: add    $0x8,%esi
  0x0000000002b1439f: mov    %esi,0xdc(%rax)
  0x0000000002b143a5: movabs $0x1b6445d0,%rax   ;   {metadata({method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b143af: and    $0x1ff8,%esi
  0x0000000002b143b5: cmp    $0x0,%esi
  0x0000000002b143b8: je     0x0000000002b1478e  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x0000000002b143be: cmp    %r8,%rdx
  0x0000000002b143c1: movabs $0x1b870550,%rax   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b143cb: movabs $0x108,%rsi
  0x0000000002b143d5: jne    0x0000000002b143e5
  0x0000000002b143db: movabs $0x118,%rsi
  0x0000000002b143e5: mov    (%rax,%rsi,1),%rdi
  0x0000000002b143e9: lea    0x1(%rdi),%rdi
  0x0000000002b143ed: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b143f1: je     0x0000000002b1477d  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x0000000002b143f7: cmp    $0x0,%r8
  0x0000000002b143fb: jne    0x0000000002b14416
  0x0000000002b143fd: movabs $0x1b870550,%rdi   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b14407: orl    $0x100,0x120(%rdi)
  0x0000000002b14411: jmpq   0x0000000002b144d8
  0x0000000002b14416: movabs $0x7c00016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002b14420: mov    0x8(%r8),%esi
  0x0000000002b14424: shl    $0x3,%rsi
  0x0000000002b14428: cmp    %rsi,%rbx
  0x0000000002b1442b: jne    0x0000000002b144bc
  0x0000000002b14431: movabs $0x1b870550,%rdi   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1443b: mov    0x8(%r8),%ebx
  0x0000000002b1443f: shl    $0x3,%rbx
  0x0000000002b14443: cmp    0x130(%rdi),%rbx
  0x0000000002b1444a: jne    0x0000000002b14459
  0x0000000002b1444c: addq   $0x1,0x138(%rdi)
  0x0000000002b14454: jmpq   0x0000000002b144dd
  0x0000000002b14459: cmp    0x140(%rdi),%rbx
  0x0000000002b14460: jne    0x0000000002b1446f
  0x0000000002b14462: addq   $0x1,0x148(%rdi)
  0x0000000002b1446a: jmpq   0x0000000002b144dd
  0x0000000002b1446f: cmpq   $0x0,0x130(%rdi)
  0x0000000002b1447a: jne    0x0000000002b14493
  0x0000000002b1447c: mov    %rbx,0x130(%rdi)
  0x0000000002b14483: movq   $0x1,0x138(%rdi)
  0x0000000002b1448e: jmpq   0x0000000002b144dd
  0x0000000002b14493: cmpq   $0x0,0x140(%rdi)
  0x0000000002b1449e: jne    0x0000000002b144b7
  0x0000000002b144a0: mov    %rbx,0x140(%rdi)
  0x0000000002b144a7: movq   $0x1,0x148(%rdi)
  0x0000000002b144b2: jmpq   0x0000000002b144dd
  0x0000000002b144b7: jmpq   0x0000000002b144dd
  0x0000000002b144bc: movabs $0x1b870550,%rdi   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b144c6: subq   $0x1,0x128(%rdi)
  0x0000000002b144ce: jmpq   0x0000000002b144d8
  0x0000000002b144d3: jmpq   0x0000000002b144dd
  0x0000000002b144d8: xor    %rax,%rax
  0x0000000002b144db: jmp    0x0000000002b144e7
  0x0000000002b144dd: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000002b144e7: cmp    $0x0,%eax
  0x0000000002b144ea: movabs $0x1b870550,%rax   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b144f4: movabs $0x158,%rsi
  0x0000000002b144fe: je     0x0000000002b1450e
  0x0000000002b14504: movabs $0x168,%rsi
  0x0000000002b1450e: mov    (%rax,%rsi,1),%rdi
  0x0000000002b14512: lea    0x1(%rdi),%rdi
  0x0000000002b14516: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b1451a: je     0x0000000002b1476c  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x0000000002b14520: cmp    $0x0,%r8
  0x0000000002b14524: jne    0x0000000002b1453f
  0x0000000002b14526: movabs $0x1b870550,%rdi   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b14530: orl    $0x100,0x170(%rdi)
  0x0000000002b1453a: jmpq   0x0000000002b14601
  0x0000000002b1453f: movabs $0x7c00016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002b14549: mov    0x8(%r8),%esi
  0x0000000002b1454d: shl    $0x3,%rsi
  0x0000000002b14551: cmp    %rsi,%rbx
  0x0000000002b14554: jne    0x0000000002b145e5
  0x0000000002b1455a: movabs $0x1b870550,%rdi   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b14564: mov    0x8(%r8),%ebx
  0x0000000002b14568: shl    $0x3,%rbx
  0x0000000002b1456c: cmp    0x180(%rdi),%rbx
  0x0000000002b14573: jne    0x0000000002b14582
  0x0000000002b14575: addq   $0x1,0x188(%rdi)
  0x0000000002b1457d: jmpq   0x0000000002b14601
  0x0000000002b14582: cmp    0x190(%rdi),%rbx
  0x0000000002b14589: jne    0x0000000002b14598
  0x0000000002b1458b: addq   $0x1,0x198(%rdi)
  0x0000000002b14593: jmpq   0x0000000002b14601
  0x0000000002b14598: cmpq   $0x0,0x180(%rdi)
  0x0000000002b145a3: jne    0x0000000002b145bc
  0x0000000002b145a5: mov    %rbx,0x180(%rdi)
  0x0000000002b145ac: movq   $0x1,0x188(%rdi)
  0x0000000002b145b7: jmpq   0x0000000002b14601
  0x0000000002b145bc: cmpq   $0x0,0x190(%rdi)
  0x0000000002b145c7: jne    0x0000000002b145e0
  0x0000000002b145c9: mov    %rbx,0x190(%rdi)
  0x0000000002b145d0: movq   $0x1,0x198(%rdi)
  0x0000000002b145db: jmpq   0x0000000002b14601
  0x0000000002b145e0: jmpq   0x0000000002b14601
  0x0000000002b145e5: movabs $0x1b870550,%rdi   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b145ef: subq   $0x1,0x178(%rdi)
  0x0000000002b145f7: jmpq   0x0000000002b147a5
  0x0000000002b145fc: jmpq   0x0000000002b14601
  0x0000000002b14601: mov    %r8,%rax           ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x0000000002b14604: mov    0xc(%rdx),%esi
  0x0000000002b14607: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x0000000002b1460b: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x0000000002b147ae
  0x0000000002b1460e: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000002b147b3
  0x0000000002b14611: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x0000000002b14615: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x0000000002b147b8
  0x0000000002b14618: cmp    %ebx,%edi
  0x0000000002b1461a: movabs $0x1b870550,%rbx   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b14624: movabs $0x1a8,%rdx
  0x0000000002b1462e: jne    0x0000000002b1463e
  0x0000000002b14634: movabs $0x1b8,%rdx
  0x0000000002b1463e: mov    (%rbx,%rdx,1),%rcx
  0x0000000002b14642: lea    0x1(%rcx),%rcx
  0x0000000002b14646: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002b1464a: jne    0x0000000002b1476c  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x0000000002b14650: mov    $0x0,%ebx
  0x0000000002b14655: jmpq   0x0000000002b14707  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x0000000002b1465a: nopw   0x0(%rax,%rax,1)
  0x0000000002b14660: movslq %ebx,%rdi
  0x0000000002b14663: cmp    0xc(%rsi),%ebx
  0x0000000002b14666: jae    0x0000000002b147bd
  0x0000000002b1466c: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002b14671: movslq %ebx,%rcx
  0x0000000002b14674: cmp    0xc(%rax),%ebx
  0x0000000002b14677: jae    0x0000000002b147c6
  0x0000000002b1467d: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002b14682: cmp    %ecx,%edi
  0x0000000002b14684: movabs $0x1b870550,%rdi   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1468e: movabs $0x1e8,%rcx
  0x0000000002b14698: je     0x0000000002b146a8
  0x0000000002b1469e: movabs $0x1f8,%rcx
  0x0000000002b146a8: mov    (%rdi,%rcx,1),%r8
  0x0000000002b146ac: lea    0x1(%r8),%r8
  0x0000000002b146b0: mov    %r8,(%rdi,%rcx,1)
  0x0000000002b146b4: jne    0x0000000002b1474a  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002b146ba: inc    %ebx
  0x0000000002b146bc: movabs $0x1b870550,%rdi   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b146c6: mov    0xe0(%rdi),%ecx
  0x0000000002b146cc: add    $0x8,%ecx
  0x0000000002b146cf: mov    %ecx,0xe0(%rdi)
  0x0000000002b146d5: movabs $0x1b6445d0,%rdi   ;   {metadata({method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b146df: and    $0xfff8,%ecx
  0x0000000002b146e5: cmp    $0x0,%ecx
  0x0000000002b146e8: je     0x0000000002b147cf  ; OopMap{rax=Oop rsi=Oop off=910}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000002b146ee: test   %eax,-0x21545f4(%rip)        # 0x00000000009c0100
                                                ;   {poll}
  0x0000000002b146f4: movabs $0x1b870550,%rdi   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b146fe: incl   0x208(%rdi)
  0x0000000002b14704: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000002b14707: mov    %rdi,%rdx
  0x0000000002b1470a: dec    %edx
  0x0000000002b1470c: cmp    $0x0,%edi
  0x0000000002b1470f: movabs $0x1b870550,%rdi   ;   {metadata(method data for {method} {0x000000001b6445d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b14719: movabs $0x1c8,%rcx
  0x0000000002b14723: je     0x0000000002b14733
  0x0000000002b14729: movabs $0x1d8,%rcx
  0x0000000002b14733: mov    (%rdi,%rcx,1),%r8
  0x0000000002b14737: lea    0x1(%r8),%r8
  0x0000000002b1473b: mov    %r8,(%rdi,%rcx,1)
  0x0000000002b1473f: je     0x0000000002b1475b
  0x0000000002b14745: jmpq   0x0000000002b14660  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000002b1474a: mov    $0x0,%eax
  0x0000000002b1474f: add    $0x30,%rsp
  0x0000000002b14753: pop    %rbp
  0x0000000002b14754: test   %eax,-0x215465a(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b1475a: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x0000000002b1475b: mov    $0x1,%eax
  0x0000000002b14760: add    $0x30,%rsp
  0x0000000002b14764: pop    %rbp
  0x0000000002b14765: test   %eax,-0x215466b(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b1476b: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x0000000002b1476c: mov    $0x0,%eax
  0x0000000002b14771: add    $0x30,%rsp
  0x0000000002b14775: pop    %rbp
  0x0000000002b14776: test   %eax,-0x215467c(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b1477c: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x0000000002b1477d: mov    $0x1,%eax
  0x0000000002b14782: add    $0x30,%rsp
  0x0000000002b14786: pop    %rbp
  0x0000000002b14787: test   %eax,-0x215468d(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b1478d: retq   
  0x0000000002b1478e: mov    %rax,0x8(%rsp)
  0x0000000002b14793: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1479b: callq  0x0000000002b13560  ; OopMap{rdx=Oop r8=Oop off=1088}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x0000000002b147a0: jmpq   0x0000000002b143be
  0x0000000002b147a5: mov    %r8,(%rsp)
  0x0000000002b147a9: callq  0x0000000002b0fc80  ; OopMap{rdx=Oop off=1102}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x0000000002b147ae: callq  0x0000000002a80dc0  ; OopMap{rax=Oop rsi=Oop off=1107}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x0000000002b147b3: callq  0x0000000002a80dc0  ; OopMap{rsi=Oop off=1112}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x0000000002b147b8: callq  0x0000000002a80dc0  ; OopMap{rsi=Oop rax=Oop off=1117}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x0000000002b147bd: mov    %rbx,(%rsp)
  0x0000000002b147c1: callq  0x0000000002a81480  ; OopMap{rax=Oop rsi=Oop off=1126}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x0000000002b147c6: mov    %rbx,(%rsp)
  0x0000000002b147ca: callq  0x0000000002a81480  ; OopMap{rax=Oop rsi=Oop off=1135}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x0000000002b147cf: mov    %rdi,0x8(%rsp)
  0x0000000002b147d4: movq   $0x4a,(%rsp)
  0x0000000002b147dc: callq  0x0000000002b13560  ; OopMap{rax=Oop rsi=Oop off=1153}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x0000000002b147e1: jmpq   0x0000000002b146ee
  0x0000000002b147e6: nop
  0x0000000002b147e7: nop
  0x0000000002b147e8: mov    0x2a8(%r15),%rax
  0x0000000002b147ef: movabs $0x0,%r10
  0x0000000002b147f9: mov    %r10,0x2a8(%r15)
  0x0000000002b14800: movabs $0x0,%r10
  0x0000000002b1480a: mov    %r10,0x2b0(%r15)
  0x0000000002b14811: add    $0x30,%rsp
  0x0000000002b14815: pop    %rbp
  0x0000000002b14816: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b1481b: hlt    
  0x0000000002b1481c: hlt    
  0x0000000002b1481d: hlt    
  0x0000000002b1481e: hlt    
  0x0000000002b1481f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b14820: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b14825: mov    %rsp,-0x28(%rsp)
  0x0000000002b1482a: sub    $0x80,%rsp
  0x0000000002b14831: mov    %rax,0x78(%rsp)
  0x0000000002b14836: mov    %rcx,0x70(%rsp)
  0x0000000002b1483b: mov    %rdx,0x68(%rsp)
  0x0000000002b14840: mov    %rbx,0x60(%rsp)
  0x0000000002b14845: mov    %rbp,0x50(%rsp)
  0x0000000002b1484a: mov    %rsi,0x48(%rsp)
  0x0000000002b1484f: mov    %rdi,0x40(%rsp)
  0x0000000002b14854: mov    %r8,0x38(%rsp)
  0x0000000002b14859: mov    %r9,0x30(%rsp)
  0x0000000002b1485e: mov    %r10,0x28(%rsp)
  0x0000000002b14863: mov    %r11,0x20(%rsp)
  0x0000000002b14868: mov    %r12,0x18(%rsp)
  0x0000000002b1486d: mov    %r13,0x10(%rsp)
  0x0000000002b14872: mov    %r14,0x8(%rsp)
  0x0000000002b14877: mov    %r15,(%rsp)
  0x0000000002b1487b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b14885: movabs $0x2b14825,%rdx    ;   {internal_word}
  0x0000000002b1488f: mov    %rsp,%r8
  0x0000000002b14892: and    $0xfffffffffffffff0,%rsp
  0x0000000002b14896: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b1489b: hlt    
[Deopt Handler Code]
  0x0000000002b1489c: movabs $0x2b1489c,%r10    ;   {section_word}
  0x0000000002b148a6: push   %r10
  0x0000000002b148a8: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b148ad: hlt    
  0x0000000002b148ae: hlt    
  0x0000000002b148af: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x0000000002b14360' size='2504' address='0x0000000002b141d0' relocation_offset='288' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='678' backedge_count='3227' iicount='678' stamp='0.319'/>
Decoding compiled method 0x0000000002b13e50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b8310f0} &apos;getSnapshotTransformerList&apos; &apos;()[Lsun/instrument/TransformerManager$TransformerInfo;&apos; in &apos;sun/instrument/TransformerManager&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b13fa0: mov    0x8(%rdx),%r10d
  0x0000000002b13fa4: shl    $0x3,%r10
  0x0000000002b13fa8: cmp    %rax,%r10
  0x0000000002b13fab: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b13fb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b13fbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b13fc0: mov    %eax,-0x6000(%rsp)
  0x0000000002b13fc7: push   %rbp
  0x0000000002b13fc8: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@0 (line 166)

  0x0000000002b13fcc: mov    0x10(%rdx),%eax
  0x0000000002b13fcf: shl    $0x3,%rax          ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1 (line 166)

  0x0000000002b13fd3: add    $0x30,%rsp
  0x0000000002b13fd7: pop    %rbp
  0x0000000002b13fd8: test   %eax,-0x2153ede(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b13fde: retq   
  0x0000000002b13fdf: nop
  0x0000000002b13fe0: nop
  0x0000000002b13fe1: mov    0x2a8(%r15),%rax
  0x0000000002b13fe8: movabs $0x0,%r10
  0x0000000002b13ff2: mov    %r10,0x2a8(%r15)
  0x0000000002b13ff9: movabs $0x0,%r10
  0x0000000002b14003: mov    %r10,0x2b0(%r15)
  0x0000000002b1400a: add    $0x30,%rsp
  0x0000000002b1400e: pop    %rbp
  0x0000000002b1400f: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b14014: hlt    
  0x0000000002b14015: hlt    
  0x0000000002b14016: hlt    
  0x0000000002b14017: hlt    
  0x0000000002b14018: hlt    
  0x0000000002b14019: hlt    
  0x0000000002b1401a: hlt    
  0x0000000002b1401b: hlt    
  0x0000000002b1401c: hlt    
  0x0000000002b1401d: hlt    
  0x0000000002b1401e: hlt    
  0x0000000002b1401f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b14020: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b14025: mov    %rsp,-0x28(%rsp)
  0x0000000002b1402a: sub    $0x80,%rsp
  0x0000000002b14031: mov    %rax,0x78(%rsp)
  0x0000000002b14036: mov    %rcx,0x70(%rsp)
  0x0000000002b1403b: mov    %rdx,0x68(%rsp)
  0x0000000002b14040: mov    %rbx,0x60(%rsp)
  0x0000000002b14045: mov    %rbp,0x50(%rsp)
  0x0000000002b1404a: mov    %rsi,0x48(%rsp)
  0x0000000002b1404f: mov    %rdi,0x40(%rsp)
  0x0000000002b14054: mov    %r8,0x38(%rsp)
  0x0000000002b14059: mov    %r9,0x30(%rsp)
  0x0000000002b1405e: mov    %r10,0x28(%rsp)
  0x0000000002b14063: mov    %r11,0x20(%rsp)
  0x0000000002b14068: mov    %r12,0x18(%rsp)
  0x0000000002b1406d: mov    %r13,0x10(%rsp)
  0x0000000002b14072: mov    %r14,0x8(%rsp)
  0x0000000002b14077: mov    %r15,(%rsp)
  0x0000000002b1407b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b14085: movabs $0x2b14025,%rdx    ;   {internal_word}
  0x0000000002b1408f: mov    %rsp,%r8
  0x0000000002b14092: and    $0xfffffffffffffff0,%rsp
  0x0000000002b14096: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b1409b: hlt    
[Deopt Handler Code]
  0x0000000002b1409c: movabs $0x2b1409c,%r10    ;   {section_word}
  0x0000000002b140a6: push   %r10
  0x0000000002b140a8: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b140ad: hlt    
  0x0000000002b140ae: hlt    
  0x0000000002b140af: hlt    
<nmethod compile_id='6' compiler='C1' level='1' entry='0x0000000002b13fa0' size='704' address='0x0000000002b13e50' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='130' iicount='130' stamp='0.322'/>
<writer thread='12552'/>
<task_queued compile_id='7' method='java/lang/String charAt (I)C' bytes='29' count='102400' iicount='102400' stamp='0.325' comment='tiered' hot_count='102400'/>
<task_queued compile_id='8' method='java/lang/Math min (II)I' bytes='11' count='1792' iicount='1792' level='3' stamp='0.325' comment='tiered' hot_count='1792'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b1d950:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b7328d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002b1daa0: mov    %eax,-0x6000(%rsp)
  0x0000000002b1daa7: push   %rbp
  0x0000000002b1daa8: sub    $0x30,%rsp
  0x0000000002b1daac: movabs $0x1b82bd30,%rax   ;   {metadata(method data for {method} {0x000000001b7328d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b1dab6: mov    0xdc(%rax),%esi
  0x0000000002b1dabc: add    $0x8,%esi
  0x0000000002b1dabf: mov    %esi,0xdc(%rax)
  0x0000000002b1dac5: movabs $0x1b7328d0,%rax   ;   {metadata({method} {0x000000001b7328d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b1dacf: and    $0x1ff8,%esi
  0x0000000002b1dad5: cmp    $0x0,%esi
  0x0000000002b1dad8: je     0x0000000002b1db3e  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x0000000002b1dade: cmp    %r8d,%edx
  0x0000000002b1dae1: movabs $0x1b82bd30,%rax   ;   {metadata(method data for {method} {0x000000001b7328d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b1daeb: movabs $0x108,%rsi
  0x0000000002b1daf5: jg     0x0000000002b1db05
  0x0000000002b1dafb: movabs $0x118,%rsi
  0x0000000002b1db05: mov    (%rax,%rsi,1),%rdi
  0x0000000002b1db09: lea    0x1(%rdi),%rdi
  0x0000000002b1db0d: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b1db11: jg     0x0000000002b1db2c  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x0000000002b1db17: movabs $0x1b82bd30,%rax   ;   {metadata(method data for {method} {0x000000001b7328d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b1db21: incl   0x128(%rax)
  0x0000000002b1db27: jmpq   0x0000000002b1db2f  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x0000000002b1db2c: mov    %r8,%rdx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x0000000002b1db2f: mov    %rdx,%rax
  0x0000000002b1db32: add    $0x30,%rsp
  0x0000000002b1db36: pop    %rbp
  0x0000000002b1db37: test   %eax,-0x215da3d(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b1db3d: retq   
  0x0000000002b1db3e: mov    %rax,0x8(%rsp)
  0x0000000002b1db43: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1db4b: callq  0x0000000002b13560  ; OopMap{off=176}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x0000000002b1db50: jmp    0x0000000002b1dade
  0x0000000002b1db52: nop
  0x0000000002b1db53: nop
  0x0000000002b1db54: mov    0x2a8(%r15),%rax
  0x0000000002b1db5b: movabs $0x0,%r10
  0x0000000002b1db65: mov    %r10,0x2a8(%r15)
  0x0000000002b1db6c: movabs $0x0,%r10
  0x0000000002b1db76: mov    %r10,0x2b0(%r15)
  0x0000000002b1db7d: add    $0x30,%rsp
  0x0000000002b1db81: pop    %rbp
  0x0000000002b1db82: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b1db87: hlt    
  0x0000000002b1db88: hlt    
  0x0000000002b1db89: hlt    
  0x0000000002b1db8a: hlt    
  0x0000000002b1db8b: hlt    
  0x0000000002b1db8c: hlt    
  0x0000000002b1db8d: hlt    
  0x0000000002b1db8e: hlt    
  0x0000000002b1db8f: hlt    
  0x0000000002b1db90: hlt    
  0x0000000002b1db91: hlt    
  0x0000000002b1db92: hlt    
  0x0000000002b1db93: hlt    
  0x0000000002b1db94: hlt    
  0x0000000002b1db95: hlt    
  0x0000000002b1db96: hlt    
  0x0000000002b1db97: hlt    
  0x0000000002b1db98: hlt    
  0x0000000002b1db99: hlt    
  0x0000000002b1db9a: hlt    
  0x0000000002b1db9b: hlt    
  0x0000000002b1db9c: hlt    
  0x0000000002b1db9d: hlt    
  0x0000000002b1db9e: hlt    
  0x0000000002b1db9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b1dba0: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b1dba5: mov    %rsp,-0x28(%rsp)
  0x0000000002b1dbaa: sub    $0x80,%rsp
  0x0000000002b1dbb1: mov    %rax,0x78(%rsp)
  0x0000000002b1dbb6: mov    %rcx,0x70(%rsp)
  0x0000000002b1dbbb: mov    %rdx,0x68(%rsp)
  0x0000000002b1dbc0: mov    %rbx,0x60(%rsp)
  0x0000000002b1dbc5: mov    %rbp,0x50(%rsp)
  0x0000000002b1dbca: mov    %rsi,0x48(%rsp)
  0x0000000002b1dbcf: mov    %rdi,0x40(%rsp)
  0x0000000002b1dbd4: mov    %r8,0x38(%rsp)
  0x0000000002b1dbd9: mov    %r9,0x30(%rsp)
  0x0000000002b1dbde: mov    %r10,0x28(%rsp)
  0x0000000002b1dbe3: mov    %r11,0x20(%rsp)
  0x0000000002b1dbe8: mov    %r12,0x18(%rsp)
  0x0000000002b1dbed: mov    %r13,0x10(%rsp)
  0x0000000002b1dbf2: mov    %r14,0x8(%rsp)
  0x0000000002b1dbf7: mov    %r15,(%rsp)
  0x0000000002b1dbfb: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b1dc05: movabs $0x2b1dba5,%rdx    ;   {internal_word}
  0x0000000002b1dc0f: mov    %rsp,%r8
  0x0000000002b1dc12: and    $0xfffffffffffffff0,%rsp
  0x0000000002b1dc16: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b1dc1b: hlt    
[Deopt Handler Code]
  0x0000000002b1dc1c: movabs $0x2b1dc1c,%r10    ;   {section_word}
  0x0000000002b1dc26: push   %r10
  0x0000000002b1dc28: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b1dc2d: hlt    
  0x0000000002b1dc2e: hlt    
  0x0000000002b1dc2f: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x0000000002b1daa0' size='904' address='0x0000000002b1d950' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' method='java/lang/Math min (II)I' bytes='11' count='1800' iicount='1800' stamp='0.330'/>
<writer thread='12552'/>
<task_queued compile_id='9' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4608' iicount='4608' level='1' stamp='0.330' comment='tiered' hot_count='4608'/>
<writer thread='22072'/>
Decoding compiled method 0x0000000002b209d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b643d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002b20b20: mov    0x8(%rdx),%r10d
  0x0000000002b20b24: shl    $0x3,%r10
  0x0000000002b20b28: cmp    %r10,%rax
  0x0000000002b20b2b: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b20b31: data16 xchg %ax,%ax
  0x0000000002b20b34: nopl   0x0(%rax,%rax,1)
  0x0000000002b20b3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b20b40: mov    %eax,-0x6000(%rsp)
  0x0000000002b20b47: push   %rbp
  0x0000000002b20b48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x0000000002b20b4c: test   %r8d,%r8d
  0x0000000002b20b4f: jl     0x0000000002b20b8d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002b20b51: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x0000000002b20b55: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000002b20bb5
  0x0000000002b20b5a: cmp    %ebp,%r8d
  0x0000000002b20b5d: jge    0x0000000002b20ba1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002b20b5f: cmp    %ebp,%r8d
  0x0000000002b20b62: jae    0x0000000002b20b7a
  0x0000000002b20b64: shl    $0x3,%r10
  0x0000000002b20b68: movzwl 0x10(%r10,%r8,2),%eax
  0x0000000002b20b6e: add    $0x20,%rsp
  0x0000000002b20b72: pop    %rbp
  0x0000000002b20b73: test   %eax,-0x2160b79(%rip)        # 0x00000000009c0000
                                                ;   {poll_return}
  0x0000000002b20b79: retq   
  0x0000000002b20b7a: mov    $0xffffffe4,%edx
  0x0000000002b20b7f: mov    %r8d,%ebp
  0x0000000002b20b82: mov    %r10d,(%rsp)
  0x0000000002b20b86: nop
  0x0000000002b20b87: callq  0x0000000002a557a0  ; OopMap{[0]=NarrowOop off=108}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x0000000002b20b8c: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x0000000002b20b8d: mov    %rdx,%rbp
  0x0000000002b20b90: mov    %r8d,0x4(%rsp)
  0x0000000002b20b95: mov    $0xffffff65,%edx
  0x0000000002b20b9a: nop
  0x0000000002b20b9b: callq  0x0000000002a557a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x0000000002b20ba0: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002b20ba1: mov    %rdx,(%rsp)
  0x0000000002b20ba5: mov    %r8d,0xc(%rsp)
  0x0000000002b20baa: mov    $0xffffff65,%edx
  0x0000000002b20baf: callq  0x0000000002a557a0  ; OopMap{[0]=Oop off=148}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x0000000002b20bb4: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002b20bb5: mov    $0xfffffff6,%edx
  0x0000000002b20bba: nop
  0x0000000002b20bbb: callq  0x0000000002a557a0  ; OopMap{off=160}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000002b20bc0: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x0000000002b20bc1: hlt    
  0x0000000002b20bc2: hlt    
  0x0000000002b20bc3: hlt    
  0x0000000002b20bc4: hlt    
  0x0000000002b20bc5: hlt    
  0x0000000002b20bc6: hlt    
  0x0000000002b20bc7: hlt    
  0x0000000002b20bc8: hlt    
  0x0000000002b20bc9: hlt    
  0x0000000002b20bca: hlt    
  0x0000000002b20bcb: hlt    
  0x0000000002b20bcc: hlt    
  0x0000000002b20bcd: hlt    
  0x0000000002b20bce: hlt    
  0x0000000002b20bcf: hlt    
  0x0000000002b20bd0: hlt    
  0x0000000002b20bd1: hlt    
  0x0000000002b20bd2: hlt    
  0x0000000002b20bd3: hlt    
  0x0000000002b20bd4: hlt    
  0x0000000002b20bd5: hlt    
  0x0000000002b20bd6: hlt    
  0x0000000002b20bd7: hlt    
  0x0000000002b20bd8: hlt    
  0x0000000002b20bd9: hlt    
  0x0000000002b20bda: hlt    
  0x0000000002b20bdb: hlt    
  0x0000000002b20bdc: hlt    
  0x0000000002b20bdd: hlt    
  0x0000000002b20bde: hlt    
  0x0000000002b20bdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b20be0: jmpq   0x0000000002a7eea0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b20be5: callq  0x0000000002b20bea
  0x0000000002b20bea: subq   $0x5,(%rsp)
  0x0000000002b20bef: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b20bf4: hlt    
  0x0000000002b20bf5: hlt    
  0x0000000002b20bf6: hlt    
  0x0000000002b20bf7: hlt    
<nmethod compile_id='7' compiler='C2' level='4' entry='0x0000000002b20b20' size='928' address='0x0000000002b209d0' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='102525' iicount='102525' stamp='0.336'/>
<writer thread='26472'/>
<task_queued compile_id='10' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='775' iicount='775' level='3' stamp='0.336' comment='tiered' hot_count='768'/>
<task_queued compile_id='11' method='java/lang/String indexOf (II)I' bytes='70' count='527' backedge_count='17408' iicount='527' level='3' stamp='0.336' comment='tiered' hot_count='527'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b206d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b640488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000002b20820: mov    0x8(%rdx),%r10d
  0x0000000002b20824: shl    $0x3,%r10
  0x0000000002b20828: cmp    %rax,%r10
  0x0000000002b2082b: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b20831: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b2083c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b20840: mov    %eax,-0x6000(%rsp)
  0x0000000002b20847: push   %rbp
  0x0000000002b20848: sub    $0x50,%rsp
  0x0000000002b2084c: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000002b2084f: mov    %rdx,0x40(%rsp)
  0x0000000002b20854: callq  0x0000000002a80b20  ; OopMap{[64]=Oop off=57}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000002b20859: add    $0x50,%rsp
  0x0000000002b2085d: pop    %rbp
  0x0000000002b2085e: test   %eax,-0x2160764(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b20864: retq   
  0x0000000002b20865: nop
  0x0000000002b20866: nop
  0x0000000002b20867: mov    0x2a8(%r15),%rax
  0x0000000002b2086e: movabs $0x0,%r10
  0x0000000002b20878: mov    %r10,0x2a8(%r15)
  0x0000000002b2087f: movabs $0x0,%r10
  0x0000000002b20889: mov    %r10,0x2b0(%r15)
  0x0000000002b20890: add    $0x50,%rsp
  0x0000000002b20894: pop    %rbp
  0x0000000002b20895: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b2089a: hlt    
  0x0000000002b2089b: hlt    
  0x0000000002b2089c: hlt    
  0x0000000002b2089d: hlt    
  0x0000000002b2089e: hlt    
  0x0000000002b2089f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b208a0: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b208a5: mov    %rsp,-0x28(%rsp)
  0x0000000002b208aa: sub    $0x80,%rsp
  0x0000000002b208b1: mov    %rax,0x78(%rsp)
  0x0000000002b208b6: mov    %rcx,0x70(%rsp)
  0x0000000002b208bb: mov    %rdx,0x68(%rsp)
  0x0000000002b208c0: mov    %rbx,0x60(%rsp)
  0x0000000002b208c5: mov    %rbp,0x50(%rsp)
  0x0000000002b208ca: mov    %rsi,0x48(%rsp)
  0x0000000002b208cf: mov    %rdi,0x40(%rsp)
  0x0000000002b208d4: mov    %r8,0x38(%rsp)
  0x0000000002b208d9: mov    %r9,0x30(%rsp)
  0x0000000002b208de: mov    %r10,0x28(%rsp)
  0x0000000002b208e3: mov    %r11,0x20(%rsp)
  0x0000000002b208e8: mov    %r12,0x18(%rsp)
  0x0000000002b208ed: mov    %r13,0x10(%rsp)
  0x0000000002b208f2: mov    %r14,0x8(%rsp)
  0x0000000002b208f7: mov    %r15,(%rsp)
  0x0000000002b208fb: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b20905: movabs $0x2b208a5,%rdx    ;   {internal_word}
  0x0000000002b2090f: mov    %rsp,%r8
  0x0000000002b20912: and    $0xfffffffffffffff0,%rsp
  0x0000000002b20916: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b2091b: hlt    
[Deopt Handler Code]
  0x0000000002b2091c: movabs $0x2b2091c,%r10    ;   {section_word}
  0x0000000002b20926: push   %r10
  0x0000000002b20928: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b2092d: hlt    
  0x0000000002b2092e: hlt    
  0x0000000002b2092f: hlt    
<nmethod compile_id='9' compiler='C1' level='1' entry='0x0000000002b20820' size='712' address='0x0000000002b206d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4625' iicount='4625' stamp='0.339'/>
<make_not_entrant thread='18216' compile_id='3' compiler='C1' level='3' stamp='0.339'/>
<writer thread='26472'/>
<task_queued compile_id='12' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='896' iicount='896' level='3' stamp='0.339' comment='tiered' hot_count='896'/>
<task_queued compile_id='13' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='384' iicount='384' level='3' stamp='0.339' comment='tiered' hot_count='384'/>
<task_queued compile_id='14' method='java/lang/String indexOf (I)I' bytes='7' count='512' iicount='512' level='3' stamp='0.339' comment='tiered' hot_count='512'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b1ff50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b645138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002b200e0: mov    0x8(%rdx),%r10d
  0x0000000002b200e4: shl    $0x3,%r10
  0x0000000002b200e8: cmp    %rax,%r10
  0x0000000002b200eb: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b200f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b200fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b20100: mov    %eax,-0x6000(%rsp)
  0x0000000002b20107: push   %rbp
  0x0000000002b20108: sub    $0x30,%rsp
  0x0000000002b2010c: movabs $0x1b82be90,%rax   ;   {metadata(method data for {method} {0x000000001b645138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b20116: mov    0xdc(%rax),%esi
  0x0000000002b2011c: add    $0x8,%esi
  0x0000000002b2011f: mov    %esi,0xdc(%rax)
  0x0000000002b20125: movabs $0x1b645130,%rax   ;   {metadata({method} {0x000000001b645138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b2012f: and    $0x1ff8,%esi
  0x0000000002b20135: cmp    $0x0,%esi
  0x0000000002b20138: je     0x0000000002b20351  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x0000000002b2013e: mov    0xc(%rdx),%eax
  0x0000000002b20141: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x0000000002b20145: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x0000000002b20368
  0x0000000002b20148: cmp    $0x0,%r9d
  0x0000000002b2014c: movabs $0x1b82be90,%rdi   ;   {metadata(method data for {method} {0x000000001b645138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b20156: movabs $0x108,%rbx
  0x0000000002b20160: jge    0x0000000002b20170
  0x0000000002b20166: movabs $0x118,%rbx
  0x0000000002b20170: mov    (%rdi,%rbx,1),%rcx
  0x0000000002b20174: lea    0x1(%rcx),%rcx
  0x0000000002b20178: mov    %rcx,(%rdi,%rbx,1)
  0x0000000002b2017c: jge    0x0000000002b2019e  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000002b20182: movabs $0x1b82be90,%r9    ;   {metadata(method data for {method} {0x000000001b645138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b2018c: incl   0x128(%r9)
  0x0000000002b20193: mov    $0x0,%r9d
  0x0000000002b20199: jmpq   0x0000000002b201d7  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x0000000002b2019e: cmp    %esi,%r9d
  0x0000000002b201a1: movabs $0x1b82be90,%rdi   ;   {metadata(method data for {method} {0x000000001b645138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b201ab: movabs $0x140,%rbx
  0x0000000002b201b5: jl     0x0000000002b201c5
  0x0000000002b201bb: movabs $0x150,%rbx
  0x0000000002b201c5: mov    (%rdi,%rbx,1),%rcx
  0x0000000002b201c9: lea    0x1(%rcx),%rcx
  0x0000000002b201cd: mov    %rcx,(%rdi,%rbx,1)
  0x0000000002b201d1: jge    0x0000000002b20340  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x0000000002b201d7: cmp    $0x10000,%r8d
  0x0000000002b201de: movabs $0x1b82be90,%rdi   ;   {metadata(method data for {method} {0x000000001b645138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b201e8: movabs $0x160,%rbx
  0x0000000002b201f2: jge    0x0000000002b20202
  0x0000000002b201f8: movabs $0x170,%rbx
  0x0000000002b20202: mov    (%rdi,%rbx,1),%rcx
  0x0000000002b20206: lea    0x1(%rcx),%rcx
  0x0000000002b2020a: mov    %rcx,(%rdi,%rbx,1)
  0x0000000002b2020e: jge    0x0000000002b20314
  0x0000000002b20214: jmpq   0x0000000002b202b6  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x0000000002b20219: nopl   0x0(%rax)
  0x0000000002b20220: movslq %r9d,%rdx
  0x0000000002b20223: cmp    0xc(%rax),%r9d
  0x0000000002b20227: jae    0x0000000002b2036d
  0x0000000002b2022d: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002b20232: cmp    %r8d,%edx
  0x0000000002b20235: movabs $0x1b82be90,%rdx   ;   {metadata(method data for {method} {0x000000001b645138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b2023f: movabs $0x1a0,%rdi
  0x0000000002b20249: jne    0x0000000002b20259
  0x0000000002b2024f: movabs $0x1b0,%rdi
  0x0000000002b20259: mov    (%rdx,%rdi,1),%rbx
  0x0000000002b2025d: lea    0x1(%rbx),%rbx
  0x0000000002b20261: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002b20265: je     0x0000000002b202f4  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002b2026b: inc    %r9d
  0x0000000002b2026e: movabs $0x1b82be90,%rdx   ;   {metadata(method data for {method} {0x000000001b645138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b20278: mov    0xe0(%rdx),%edi
  0x0000000002b2027e: add    $0x8,%edi
  0x0000000002b20281: mov    %edi,0xe0(%rdx)
  0x0000000002b20287: movabs $0x1b645130,%rdx   ;   {metadata({method} {0x000000001b645138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b20291: and    $0xfff8,%edi
  0x0000000002b20297: cmp    $0x0,%edi
  0x0000000002b2029a: je     0x0000000002b20376  ; OopMap{rax=Oop off=448}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x0000000002b202a0: test   %eax,-0x21601a6(%rip)        # 0x00000000009c0100
                                                ;   {poll}
  0x0000000002b202a6: movabs $0x1b82be90,%rdx   ;   {metadata(method data for {method} {0x000000001b645138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b202b0: incl   0x1c0(%rdx)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x0000000002b202b6: cmp    %esi,%r9d
  0x0000000002b202b9: movabs $0x1b82be90,%rdx   ;   {metadata(method data for {method} {0x000000001b645138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b202c3: movabs $0x180,%rdi
  0x0000000002b202cd: jge    0x0000000002b202dd
  0x0000000002b202d3: movabs $0x190,%rdi
  0x0000000002b202dd: mov    (%rdx,%rdi,1),%rbx
  0x0000000002b202e1: lea    0x1(%rbx),%rbx
  0x0000000002b202e5: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002b202e9: jge    0x0000000002b20303
  0x0000000002b202ef: jmpq   0x0000000002b20220  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002b202f4: mov    %r9,%rax
  0x0000000002b202f7: add    $0x30,%rsp
  0x0000000002b202fb: pop    %rbp
  0x0000000002b202fc: test   %eax,-0x2160202(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b20302: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x0000000002b20303: mov    $0xffffffff,%eax
  0x0000000002b20308: add    $0x30,%rsp
  0x0000000002b2030c: pop    %rbp
  0x0000000002b2030d: test   %eax,-0x2160213(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b20313: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x0000000002b20314: mov    %rdx,%rsi
  0x0000000002b20317: movabs $0x1b82be90,%rdi   ;   {metadata(method data for {method} {0x000000001b645138} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b20321: addq   $0x1,0x1d8(%rdi)
  0x0000000002b20329: nop
  0x0000000002b2032a: nop
  0x0000000002b2032b: nop
  0x0000000002b2032c: nop
  0x0000000002b2032d: nop
  0x0000000002b2032e: nop
  0x0000000002b2032f: callq  0x0000000002a561a0  ; OopMap{off=596}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x0000000002b20334: add    $0x30,%rsp
  0x0000000002b20338: pop    %rbp
  0x0000000002b20339: test   %eax,-0x216023f(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b2033f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x0000000002b20340: mov    $0xffffffff,%eax
  0x0000000002b20345: add    $0x30,%rsp
  0x0000000002b20349: pop    %rbp
  0x0000000002b2034a: test   %eax,-0x2160250(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b20350: retq   
  0x0000000002b20351: mov    %rax,0x8(%rsp)
  0x0000000002b20356: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b2035e: callq  0x0000000002b13560  ; OopMap{rdx=Oop off=643}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x0000000002b20363: jmpq   0x0000000002b2013e
  0x0000000002b20368: callq  0x0000000002a80dc0  ; OopMap{rdx=Oop rax=Oop off=653}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x0000000002b2036d: mov    %r9,(%rsp)
  0x0000000002b20371: callq  0x0000000002a81480  ; OopMap{rax=Oop off=662}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000000002b20376: mov    %rdx,0x8(%rsp)
  0x0000000002b2037b: movq   $0x3a,(%rsp)
  0x0000000002b20383: callq  0x0000000002b13560  ; OopMap{rax=Oop off=680}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x0000000002b20388: jmpq   0x0000000002b202a0
  0x0000000002b2038d: nop
  0x0000000002b2038e: nop
  0x0000000002b2038f: mov    0x2a8(%r15),%rax
  0x0000000002b20396: movabs $0x0,%r10
  0x0000000002b203a0: mov    %r10,0x2a8(%r15)
  0x0000000002b203a7: movabs $0x0,%r10
  0x0000000002b203b1: mov    %r10,0x2b0(%r15)
  0x0000000002b203b8: add    $0x30,%rsp
  0x0000000002b203bc: pop    %rbp
  0x0000000002b203bd: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b203c2: hlt    
  0x0000000002b203c3: hlt    
  0x0000000002b203c4: hlt    
  0x0000000002b203c5: hlt    
  0x0000000002b203c6: hlt    
  0x0000000002b203c7: hlt    
  0x0000000002b203c8: hlt    
  0x0000000002b203c9: hlt    
  0x0000000002b203ca: hlt    
  0x0000000002b203cb: hlt    
  0x0000000002b203cc: hlt    
  0x0000000002b203cd: hlt    
  0x0000000002b203ce: hlt    
  0x0000000002b203cf: hlt    
  0x0000000002b203d0: hlt    
  0x0000000002b203d1: hlt    
  0x0000000002b203d2: hlt    
  0x0000000002b203d3: hlt    
  0x0000000002b203d4: hlt    
  0x0000000002b203d5: hlt    
  0x0000000002b203d6: hlt    
  0x0000000002b203d7: hlt    
  0x0000000002b203d8: hlt    
  0x0000000002b203d9: hlt    
  0x0000000002b203da: hlt    
  0x0000000002b203db: hlt    
  0x0000000002b203dc: hlt    
  0x0000000002b203dd: hlt    
  0x0000000002b203de: hlt    
  0x0000000002b203df: hlt    
[Stub Code]
  0x0000000002b203e0: nop                       ;   {no_reloc}
  0x0000000002b203e1: nop
  0x0000000002b203e2: nop
  0x0000000002b203e3: nop
  0x0000000002b203e4: nop
  0x0000000002b203e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b203ef: jmpq   0x0000000002b203ef  ;   {runtime_call}
[Exception Handler]
  0x0000000002b203f4: callq  0x0000000002a7f5a0  ;   {runtime_call}
  0x0000000002b203f9: mov    %rsp,-0x28(%rsp)
  0x0000000002b203fe: sub    $0x80,%rsp
  0x0000000002b20405: mov    %rax,0x78(%rsp)
  0x0000000002b2040a: mov    %rcx,0x70(%rsp)
  0x0000000002b2040f: mov    %rdx,0x68(%rsp)
  0x0000000002b20414: mov    %rbx,0x60(%rsp)
  0x0000000002b20419: mov    %rbp,0x50(%rsp)
  0x0000000002b2041e: mov    %rsi,0x48(%rsp)
  0x0000000002b20423: mov    %rdi,0x40(%rsp)
  0x0000000002b20428: mov    %r8,0x38(%rsp)
  0x0000000002b2042d: mov    %r9,0x30(%rsp)
  0x0000000002b20432: mov    %r10,0x28(%rsp)
  0x0000000002b20437: mov    %r11,0x20(%rsp)
  0x0000000002b2043c: mov    %r12,0x18(%rsp)
  0x0000000002b20441: mov    %r13,0x10(%rsp)
  0x0000000002b20446: mov    %r14,0x8(%rsp)
  0x0000000002b2044b: mov    %r15,(%rsp)
  0x0000000002b2044f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b20459: movabs $0x2b203f9,%rdx    ;   {internal_word}
  0x0000000002b20463: mov    %rsp,%r8
  0x0000000002b20466: and    $0xfffffffffffffff0,%rsp
  0x0000000002b2046a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b2046f: hlt    
[Deopt Handler Code]
  0x0000000002b20470: movabs $0x2b20470,%r10    ;   {section_word}
  0x0000000002b2047a: push   %r10
  0x0000000002b2047c: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b20481: hlt    
  0x0000000002b20482: hlt    
  0x0000000002b20483: hlt    
  0x0000000002b20484: hlt    
  0x0000000002b20485: hlt    
  0x0000000002b20486: hlt    
  0x0000000002b20487: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x0000000002b200e0' size='1880' address='0x0000000002b1ff50' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1344' scopes_pcs_offset='1504' dependencies_offset='1856' nul_chk_table_offset='1864' method='java/lang/String indexOf (II)I' bytes='70' count='836' backedge_count='32256' iicount='836' stamp='0.350'/>
<writer thread='12552'/>
<task_queued compile_id='15' method='java/lang/String length ()I' bytes='6' count='27776' iicount='27776' stamp='0.351' comment='tiered' hot_count='27776'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b1e7d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b643160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002b1e9a0: mov    0x8(%rdx),%r10d
  0x0000000002b1e9a4: shl    $0x3,%r10
  0x0000000002b1e9a8: cmp    %rax,%r10
  0x0000000002b1e9ab: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b1e9b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b1e9bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b1e9c0: mov    %eax,-0x6000(%rsp)
  0x0000000002b1e9c7: push   %rbp
  0x0000000002b1e9c8: sub    $0x60,%rsp
  0x0000000002b1e9cc: movabs $0x1b8665b0,%rsi   ;   {metadata(method data for {method} {0x000000001b643160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1e9d6: mov    0xdc(%rsi),%ebx
  0x0000000002b1e9dc: add    $0x8,%ebx
  0x0000000002b1e9df: mov    %ebx,0xdc(%rsi)
  0x0000000002b1e9e5: movabs $0x1b643158,%rsi   ;   {metadata({method} {0x000000001b643160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1e9ef: and    $0x1ff8,%ebx
  0x0000000002b1e9f5: cmp    $0x0,%ebx
  0x0000000002b1e9f8: je     0x0000000002b1ecce  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x0000000002b1e9fe: mov    %rdx,%rsi
  0x0000000002b1ea01: movabs $0x1b8665b0,%rbx   ;   {metadata(method data for {method} {0x000000001b643160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1ea0b: addq   $0x1,0x108(%rbx)
  0x0000000002b1ea13: movabs $0x1b771918,%rsi   ;   {metadata(method data for {method} {0x000000001b640488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002b1ea1d: mov    0xdc(%rsi),%ebx
  0x0000000002b1ea23: add    $0x8,%ebx
  0x0000000002b1ea26: mov    %ebx,0xdc(%rsi)
  0x0000000002b1ea2c: movabs $0x1b640480,%rsi   ;   {metadata({method} {0x000000001b640488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002b1ea36: and    $0x7ffff8,%ebx
  0x0000000002b1ea3c: cmp    $0x0,%ebx
  0x0000000002b1ea3f: je     0x0000000002b1ece5
  0x0000000002b1ea45: cmp    $0x0,%r9d
  0x0000000002b1ea49: movabs $0x1b8665b0,%rsi   ;   {metadata(method data for {method} {0x000000001b643160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1ea53: movabs $0x118,%rbx
  0x0000000002b1ea5d: jge    0x0000000002b1ea6d
  0x0000000002b1ea63: movabs $0x128,%rbx
  0x0000000002b1ea6d: mov    (%rsi,%rbx,1),%rax
  0x0000000002b1ea71: lea    0x1(%rax),%rax
  0x0000000002b1ea75: mov    %rax,(%rsi,%rbx,1)
  0x0000000002b1ea79: jl     0x0000000002b1ec8e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x0000000002b1ea7f: cmp    $0x0,%edi
  0x0000000002b1ea82: movabs $0x1b8665b0,%rsi   ;   {metadata(method data for {method} {0x000000001b643160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1ea8c: movabs $0x148,%rbx
  0x0000000002b1ea96: jg     0x0000000002b1eaa6
  0x0000000002b1ea9c: movabs $0x158,%rbx
  0x0000000002b1eaa6: mov    (%rsi,%rbx,1),%rax
  0x0000000002b1eaaa: lea    0x1(%rax),%rax
  0x0000000002b1eaae: mov    %rax,(%rsi,%rbx,1)
  0x0000000002b1eab2: jg     0x0000000002b1eb2e  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x0000000002b1eab8: cmp    $0x0,%edi
  0x0000000002b1eabb: movabs $0x1b8665b0,%rsi   ;   {metadata(method data for {method} {0x000000001b643160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1eac5: movabs $0x168,%rbx
  0x0000000002b1eacf: jge    0x0000000002b1eadf
  0x0000000002b1ead5: movabs $0x178,%rbx
  0x0000000002b1eadf: mov    (%rsi,%rbx,1),%rax
  0x0000000002b1eae3: lea    0x1(%rax),%rax
  0x0000000002b1eae7: mov    %rax,(%rsi,%rbx,1)
  0x0000000002b1eaeb: jl     0x0000000002b1ec4e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x0000000002b1eaf1: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x0000000002b1ecfc
  0x0000000002b1eaf5: cmp    %esi,%r9d
  0x0000000002b1eaf8: movabs $0x1b8665b0,%rsi   ;   {metadata(method data for {method} {0x000000001b643160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1eb02: movabs $0x198,%rbx
  0x0000000002b1eb0c: jg     0x0000000002b1eb1c
  0x0000000002b1eb12: movabs $0x1a8,%rbx
  0x0000000002b1eb1c: mov    (%rsi,%rbx,1),%rax
  0x0000000002b1eb20: lea    0x1(%rax),%rax
  0x0000000002b1eb24: mov    %rax,(%rsi,%rbx,1)
  0x0000000002b1eb28: jle    0x0000000002b1ebca  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x0000000002b1eb2e: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000002b1ed01
  0x0000000002b1eb32: sub    %edi,%esi
  0x0000000002b1eb34: cmp    %esi,%r9d
  0x0000000002b1eb37: movabs $0x1b8665b0,%rsi   ;   {metadata(method data for {method} {0x000000001b643160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1eb41: movabs $0x1b8,%rbx
  0x0000000002b1eb4b: jle    0x0000000002b1eb5b
  0x0000000002b1eb51: movabs $0x1c8,%rbx
  0x0000000002b1eb5b: mov    (%rsi,%rbx,1),%rax
  0x0000000002b1eb5f: lea    0x1(%rax),%rax
  0x0000000002b1eb63: mov    %rax,(%rsi,%rbx,1)
  0x0000000002b1eb67: jg     0x0000000002b1ec04  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x0000000002b1eb6d: mov    %rdx,0x38(%rsp)
  0x0000000002b1eb72: movabs $0x1b8665b0,%rsi   ;   {metadata(method data for {method} {0x000000001b643160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1eb7c: addq   $0x1,0x1e8(%rsi)
  0x0000000002b1eb84: add    %r9d,%edi
  0x0000000002b1eb87: mov    %r8,%rdx
  0x0000000002b1eb8a: mov    %r9,%r8
  0x0000000002b1eb8d: mov    %rdi,%r9           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x0000000002b1eb90: nop
  0x0000000002b1eb91: nop
  0x0000000002b1eb92: nop
  0x0000000002b1eb93: nop
  0x0000000002b1eb94: nop
  0x0000000002b1eb95: nop
  0x0000000002b1eb96: nop
  0x0000000002b1eb97: callq  0x0000000002a56620  ; OopMap{[56]=Oop off=508}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x0000000002b1eb9c: mov    0x38(%rsp),%rdx
  0x0000000002b1eba1: mov    %rax,%r10
  0x0000000002b1eba4: shr    $0x3,%r10
  0x0000000002b1eba8: mov    %r10d,0xc(%rdx)
  0x0000000002b1ebac: shr    $0x9,%rdx
  0x0000000002b1ebb0: movabs $0xe7c2000,%rax
  0x0000000002b1ebba: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x0000000002b1ebbe: add    $0x60,%rsp
  0x0000000002b1ebc2: pop    %rbp
  0x0000000002b1ebc3: test   %eax,-0x215eac9(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b1ebc9: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x0000000002b1ebca: movabs $0x76b40aaa8,%rax  ;   {oop(&quot;&quot;)}
  0x0000000002b1ebd4: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000002b1ed06
  0x0000000002b1ebd7: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x0000000002b1ebdb: mov    %rax,%r10
  0x0000000002b1ebde: shr    $0x3,%r10
  0x0000000002b1ebe2: mov    %r10d,0xc(%rdx)
  0x0000000002b1ebe6: shr    $0x9,%rdx
  0x0000000002b1ebea: movabs $0xe7c2000,%rax
  0x0000000002b1ebf4: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x0000000002b1ebf8: add    $0x60,%rsp
  0x0000000002b1ebfc: pop    %rbp
  0x0000000002b1ebfd: test   %eax,-0x215eb03(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b1ec03: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x0000000002b1ec04: nopl   0x0(%rax)
  0x0000000002b1ec08: jmpq   0x0000000002b1ed1a  ;   {no_reloc}
  0x0000000002b1ec0d: add    %al,(%rax)
  0x0000000002b1ec0f: add    %al,(%rax)
  0x0000000002b1ec11: add    %ch,%cl
  0x0000000002b1ec13: or     $0x4c000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x0000000002b1ec18: mov    %eax,%eax
  0x0000000002b1ec1a: movabs $0x1b8665b0,%rdx   ;   {metadata(method data for {method} {0x000000001b643160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1ec24: addq   $0x1,0x1d8(%rdx)
  0x0000000002b1ec2c: add    %r9d,%edi
  0x0000000002b1ec2f: mov    %rdi,%r8
  0x0000000002b1ec32: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x0000000002b1ec35: mov    %rax,0x40(%rsp)
  0x0000000002b1ec3a: nop
  0x0000000002b1ec3b: nop
  0x0000000002b1ec3c: nop
  0x0000000002b1ec3d: nop
  0x0000000002b1ec3e: nop
  0x0000000002b1ec3f: callq  0x0000000002a561a0  ; OopMap{[64]=Oop off=676}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x0000000002b1ec44: mov    0x40(%rsp),%rax
  0x0000000002b1ec49: jmpq   0x0000000002b1eda8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x0000000002b1ec4e: xchg   %ax,%ax
  0x0000000002b1ec50: jmpq   0x0000000002b1ed40  ;   {no_reloc}
  0x0000000002b1ec55: add    %al,(%rax)
  0x0000000002b1ec57: add    %al,(%rax)
  0x0000000002b1ec59: add    %ch,%cl
  0x0000000002b1ec5b: jmp    0x0000000002b1ec5d
  0x0000000002b1ec5d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x0000000002b1ec5f: mov    %rax,%r8
  0x0000000002b1ec62: movabs $0x1b8665b0,%rdx   ;   {metadata(method data for {method} {0x000000001b643160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1ec6c: addq   $0x1,0x188(%rdx)
  0x0000000002b1ec74: mov    %rdi,%r8
  0x0000000002b1ec77: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x0000000002b1ec7a: mov    %rax,0x48(%rsp)
  0x0000000002b1ec7f: callq  0x0000000002a561a0  ; OopMap{[72]=Oop off=740}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x0000000002b1ec84: mov    0x48(%rsp),%rax
  0x0000000002b1ec89: jmpq   0x0000000002b1eda8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x0000000002b1ec8e: xchg   %ax,%ax
  0x0000000002b1ec90: jmpq   0x0000000002b1ed66  ;   {no_reloc}
  0x0000000002b1ec95: add    %al,(%rax)
  0x0000000002b1ec97: add    %al,(%rax)
  0x0000000002b1ec99: add    %ch,%cl
  0x0000000002b1ec9b: roll   (%rax)
  0x0000000002b1ec9d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x0000000002b1ec9f: mov    %rax,%r8
  0x0000000002b1eca2: movabs $0x1b8665b0,%rdx   ;   {metadata(method data for {method} {0x000000001b643160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1ecac: addq   $0x1,0x138(%rdx)
  0x0000000002b1ecb4: mov    %r9,%r8
  0x0000000002b1ecb7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x0000000002b1ecba: mov    %rax,0x50(%rsp)
  0x0000000002b1ecbf: callq  0x0000000002a561a0  ; OopMap{[80]=Oop off=804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000002b1ecc4: mov    0x50(%rsp),%rax
  0x0000000002b1ecc9: jmpq   0x0000000002b1eda8
  0x0000000002b1ecce: mov    %rsi,0x8(%rsp)
  0x0000000002b1ecd3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1ecdb: callq  0x0000000002b13560  ; OopMap{rdx=Oop r8=Oop off=832}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000002b1ece0: jmpq   0x0000000002b1e9fe
  0x0000000002b1ece5: mov    %rsi,0x8(%rsp)
  0x0000000002b1ecea: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1ecf2: callq  0x0000000002b13560  ; OopMap{rdx=Oop r8=Oop off=855}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x0000000002b1ecf7: jmpq   0x0000000002b1ea45
  0x0000000002b1ecfc: callq  0x0000000002a80dc0  ; OopMap{rdx=Oop r8=Oop off=865}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x0000000002b1ed01: callq  0x0000000002a80dc0  ; OopMap{rdx=Oop r8=Oop off=870}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x0000000002b1ed06: callq  0x0000000002a80dc0  ; OopMap{rdx=Oop off=875}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x0000000002b1ed0b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002b1ed15: mov    $0xa050f00,%eax
  0x0000000002b1ed1a: callq  0x0000000002b10560  ; OopMap{off=895}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002b1ed1f: jmpq   0x0000000002b1ec08
  0x0000000002b1ed24: mov    %rdx,%rdx
  0x0000000002b1ed27: callq  0x0000000002a808a0  ; OopMap{off=908}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002b1ed2c: jmpq   0x0000000002b1ec17
  0x0000000002b1ed31: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002b1ed3b: mov    $0xa050f00,%eax
  0x0000000002b1ed40: callq  0x0000000002b10560  ; OopMap{off=933}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002b1ed45: jmpq   0x0000000002b1ec50
  0x0000000002b1ed4a: mov    %rdx,%rdx
  0x0000000002b1ed4d: callq  0x0000000002a808a0  ; OopMap{off=946}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002b1ed52: jmpq   0x0000000002b1ec5f
  0x0000000002b1ed57: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002b1ed61: mov    $0xa050f00,%eax
  0x0000000002b1ed66: callq  0x0000000002b10560  ; OopMap{off=971}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002b1ed6b: jmpq   0x0000000002b1ec90
  0x0000000002b1ed70: mov    %rdx,%rdx
  0x0000000002b1ed73: callq  0x0000000002a808a0  ; OopMap{off=984}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002b1ed78: jmpq   0x0000000002b1ec9f
  0x0000000002b1ed7d: nop
  0x0000000002b1ed7e: nop
  0x0000000002b1ed7f: mov    0x2a8(%r15),%rax
  0x0000000002b1ed86: movabs $0x0,%r10
  0x0000000002b1ed90: mov    %r10,0x2a8(%r15)
  0x0000000002b1ed97: movabs $0x0,%r10
  0x0000000002b1eda1: mov    %r10,0x2b0(%r15)
  0x0000000002b1eda8: add    $0x60,%rsp
  0x0000000002b1edac: pop    %rbp
  0x0000000002b1edad: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b1edb2: hlt    
  0x0000000002b1edb3: hlt    
  0x0000000002b1edb4: hlt    
  0x0000000002b1edb5: hlt    
  0x0000000002b1edb6: hlt    
  0x0000000002b1edb7: hlt    
  0x0000000002b1edb8: hlt    
  0x0000000002b1edb9: hlt    
  0x0000000002b1edba: hlt    
  0x0000000002b1edbb: hlt    
  0x0000000002b1edbc: hlt    
  0x0000000002b1edbd: hlt    
  0x0000000002b1edbe: hlt    
  0x0000000002b1edbf: hlt    
[Stub Code]
  0x0000000002b1edc0: nop                       ;   {no_reloc}
  0x0000000002b1edc1: nop
  0x0000000002b1edc2: nop
  0x0000000002b1edc3: nop
  0x0000000002b1edc4: nop
  0x0000000002b1edc5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1edcf: jmpq   0x0000000002b1edcf  ;   {runtime_call}
  0x0000000002b1edd4: nop
  0x0000000002b1edd5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1eddf: jmpq   0x0000000002b1eddf  ;   {runtime_call}
  0x0000000002b1ede4: nop
  0x0000000002b1ede5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1edef: jmpq   0x0000000002b1edef  ;   {runtime_call}
  0x0000000002b1edf4: nop
  0x0000000002b1edf5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1edff: jmpq   0x0000000002b1edff  ;   {runtime_call}
[Exception Handler]
  0x0000000002b1ee04: callq  0x0000000002a7f5a0  ;   {runtime_call}
  0x0000000002b1ee09: mov    %rsp,-0x28(%rsp)
  0x0000000002b1ee0e: sub    $0x80,%rsp
  0x0000000002b1ee15: mov    %rax,0x78(%rsp)
  0x0000000002b1ee1a: mov    %rcx,0x70(%rsp)
  0x0000000002b1ee1f: mov    %rdx,0x68(%rsp)
  0x0000000002b1ee24: mov    %rbx,0x60(%rsp)
  0x0000000002b1ee29: mov    %rbp,0x50(%rsp)
  0x0000000002b1ee2e: mov    %rsi,0x48(%rsp)
  0x0000000002b1ee33: mov    %rdi,0x40(%rsp)
  0x0000000002b1ee38: mov    %r8,0x38(%rsp)
  0x0000000002b1ee3d: mov    %r9,0x30(%rsp)
  0x0000000002b1ee42: mov    %r10,0x28(%rsp)
  0x0000000002b1ee47: mov    %r11,0x20(%rsp)
  0x0000000002b1ee4c: mov    %r12,0x18(%rsp)
  0x0000000002b1ee51: mov    %r13,0x10(%rsp)
  0x0000000002b1ee56: mov    %r14,0x8(%rsp)
  0x0000000002b1ee5b: mov    %r15,(%rsp)
  0x0000000002b1ee5f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b1ee69: movabs $0x2b1ee09,%rdx    ;   {internal_word}
  0x0000000002b1ee73: mov    %rsp,%r8
  0x0000000002b1ee76: and    $0xfffffffffffffff0,%rsp
  0x0000000002b1ee7a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b1ee7f: hlt    
[Deopt Handler Code]
  0x0000000002b1ee80: movabs $0x2b1ee80,%r10    ;   {section_word}
  0x0000000002b1ee8a: push   %r10
  0x0000000002b1ee8c: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b1ee91: hlt    
  0x0000000002b1ee92: hlt    
  0x0000000002b1ee93: hlt    
  0x0000000002b1ee94: hlt    
  0x0000000002b1ee95: hlt    
  0x0000000002b1ee96: hlt    
  0x0000000002b1ee97: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x0000000002b1e9a0' size='2704' address='0x0000000002b1e7d0' relocation_offset='288' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='914' iicount='914' stamp='0.368'/>
<writer thread='21592'/>
Decoding compiled method 0x0000000002b1e550:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b643c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000002b1e680: mov    0x8(%rdx),%r10d
  0x0000000002b1e684: shl    $0x3,%r10
  0x0000000002b1e688: cmp    %r10,%rax
  0x0000000002b1e68b: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b1e691: data16 xchg %ax,%ax
  0x0000000002b1e694: nopl   0x0(%rax,%rax,1)
  0x0000000002b1e69c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b1e6a0: mov    %eax,-0x6000(%rsp)
  0x0000000002b1e6a7: push   %rbp
  0x0000000002b1e6a8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x0000000002b1e6ac: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x0000000002b1e6b0: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x0000000002b1e6c1
  0x0000000002b1e6b5: add    $0x10,%rsp
  0x0000000002b1e6b9: pop    %rbp
  0x0000000002b1e6ba: test   %eax,-0x215e6c0(%rip)        # 0x00000000009c0000
                                                ;   {poll_return}
  0x0000000002b1e6c0: retq   
  0x0000000002b1e6c1: mov    $0xfffffff6,%edx
  0x0000000002b1e6c6: nop
  0x0000000002b1e6c7: callq  0x0000000002a557a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x0000000002b1e6cc: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x0000000002b1e6cd: hlt    
  0x0000000002b1e6ce: hlt    
  0x0000000002b1e6cf: hlt    
  0x0000000002b1e6d0: hlt    
  0x0000000002b1e6d1: hlt    
  0x0000000002b1e6d2: hlt    
  0x0000000002b1e6d3: hlt    
  0x0000000002b1e6d4: hlt    
  0x0000000002b1e6d5: hlt    
  0x0000000002b1e6d6: hlt    
  0x0000000002b1e6d7: hlt    
  0x0000000002b1e6d8: hlt    
  0x0000000002b1e6d9: hlt    
  0x0000000002b1e6da: hlt    
  0x0000000002b1e6db: hlt    
  0x0000000002b1e6dc: hlt    
  0x0000000002b1e6dd: hlt    
  0x0000000002b1e6de: hlt    
  0x0000000002b1e6df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b1e6e0: jmpq   0x0000000002a7eea0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b1e6e5: callq  0x0000000002b1e6ea
  0x0000000002b1e6ea: subq   $0x5,(%rsp)
  0x0000000002b1e6ef: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b1e6f4: hlt    
  0x0000000002b1e6f5: hlt    
  0x0000000002b1e6f6: hlt    
  0x0000000002b1e6f7: hlt    
<nmethod compile_id='15' compiler='C2' level='4' entry='0x0000000002b1e680' size='584' address='0x0000000002b1e550' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='27810' iicount='27810' stamp='0.370'/>
<writer thread='26472'/>
<task_queued compile_id='16' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='9984' iicount='9984' stamp='0.370' comment='tiered' hot_count='9984'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b1e110:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b645050} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002b1e280: mov    0x8(%rdx),%r10d
  0x0000000002b1e284: shl    $0x3,%r10
  0x0000000002b1e288: cmp    %rax,%r10
  0x0000000002b1e28b: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b1e291: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b1e29c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b1e2a0: mov    %eax,-0x6000(%rsp)
  0x0000000002b1e2a7: push   %rbp
  0x0000000002b1e2a8: sub    $0x30,%rsp
  0x0000000002b1e2ac: movabs $0x1b8f4258,%r9    ;   {metadata(method data for {method} {0x000000001b645050} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1e2b6: mov    0xdc(%r9),%esi
  0x0000000002b1e2bd: add    $0x8,%esi
  0x0000000002b1e2c0: mov    %esi,0xdc(%r9)
  0x0000000002b1e2c7: movabs $0x1b645048,%r9    ;   {metadata({method} {0x000000001b645050} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1e2d1: and    $0x1ff8,%esi
  0x0000000002b1e2d7: cmp    $0x0,%esi
  0x0000000002b1e2da: je     0x0000000002b1e388  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x0000000002b1e2e0: mov    %rdx,%r9
  0x0000000002b1e2e3: movabs $0x1b8f4258,%rsi   ;   {metadata(method data for {method} {0x000000001b645050} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1e2ed: mov    0x8(%r9),%r9d
  0x0000000002b1e2f1: shl    $0x3,%r9
  0x0000000002b1e2f5: cmp    0x110(%rsi),%r9
  0x0000000002b1e2fc: jne    0x0000000002b1e30b
  0x0000000002b1e2fe: addq   $0x1,0x118(%rsi)
  0x0000000002b1e306: jmpq   0x0000000002b1e371
  0x0000000002b1e30b: cmp    0x120(%rsi),%r9
  0x0000000002b1e312: jne    0x0000000002b1e321
  0x0000000002b1e314: addq   $0x1,0x128(%rsi)
  0x0000000002b1e31c: jmpq   0x0000000002b1e371
  0x0000000002b1e321: cmpq   $0x0,0x110(%rsi)
  0x0000000002b1e32c: jne    0x0000000002b1e345
  0x0000000002b1e32e: mov    %r9,0x110(%rsi)
  0x0000000002b1e335: movq   $0x1,0x118(%rsi)
  0x0000000002b1e340: jmpq   0x0000000002b1e371
  0x0000000002b1e345: cmpq   $0x0,0x120(%rsi)
  0x0000000002b1e350: jne    0x0000000002b1e369
  0x0000000002b1e352: mov    %r9,0x120(%rsi)
  0x0000000002b1e359: movq   $0x1,0x128(%rsi)
  0x0000000002b1e364: jmpq   0x0000000002b1e371
  0x0000000002b1e369: addq   $0x1,0x108(%rsi)
  0x0000000002b1e371: mov    $0x0,%r9d          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x0000000002b1e377: callq  0x0000000002a561a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x0000000002b1e37c: add    $0x30,%rsp
  0x0000000002b1e380: pop    %rbp
  0x0000000002b1e381: test   %eax,-0x215e287(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b1e387: retq   
  0x0000000002b1e388: mov    %r9,0x8(%rsp)
  0x0000000002b1e38d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1e395: callq  0x0000000002b13560  ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x0000000002b1e39a: jmpq   0x0000000002b1e2e0
  0x0000000002b1e39f: nop
  0x0000000002b1e3a0: nop
  0x0000000002b1e3a1: mov    0x2a8(%r15),%rax
  0x0000000002b1e3a8: movabs $0x0,%r10
  0x0000000002b1e3b2: mov    %r10,0x2a8(%r15)
  0x0000000002b1e3b9: movabs $0x0,%r10
  0x0000000002b1e3c3: mov    %r10,0x2b0(%r15)
  0x0000000002b1e3ca: add    $0x30,%rsp
  0x0000000002b1e3ce: pop    %rbp
  0x0000000002b1e3cf: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b1e3d4: hlt    
  0x0000000002b1e3d5: hlt    
  0x0000000002b1e3d6: hlt    
  0x0000000002b1e3d7: hlt    
  0x0000000002b1e3d8: hlt    
  0x0000000002b1e3d9: hlt    
  0x0000000002b1e3da: hlt    
  0x0000000002b1e3db: hlt    
  0x0000000002b1e3dc: hlt    
  0x0000000002b1e3dd: hlt    
  0x0000000002b1e3de: hlt    
  0x0000000002b1e3df: hlt    
[Stub Code]
  0x0000000002b1e3e0: nop                       ;   {no_reloc}
  0x0000000002b1e3e1: nop
  0x0000000002b1e3e2: nop
  0x0000000002b1e3e3: nop
  0x0000000002b1e3e4: nop
  0x0000000002b1e3e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1e3ef: jmpq   0x0000000002b1e3ef  ;   {runtime_call}
[Exception Handler]
  0x0000000002b1e3f4: callq  0x0000000002a7f5a0  ;   {runtime_call}
  0x0000000002b1e3f9: mov    %rsp,-0x28(%rsp)
  0x0000000002b1e3fe: sub    $0x80,%rsp
  0x0000000002b1e405: mov    %rax,0x78(%rsp)
  0x0000000002b1e40a: mov    %rcx,0x70(%rsp)
  0x0000000002b1e40f: mov    %rdx,0x68(%rsp)
  0x0000000002b1e414: mov    %rbx,0x60(%rsp)
  0x0000000002b1e419: mov    %rbp,0x50(%rsp)
  0x0000000002b1e41e: mov    %rsi,0x48(%rsp)
  0x0000000002b1e423: mov    %rdi,0x40(%rsp)
  0x0000000002b1e428: mov    %r8,0x38(%rsp)
  0x0000000002b1e42d: mov    %r9,0x30(%rsp)
  0x0000000002b1e432: mov    %r10,0x28(%rsp)
  0x0000000002b1e437: mov    %r11,0x20(%rsp)
  0x0000000002b1e43c: mov    %r12,0x18(%rsp)
  0x0000000002b1e441: mov    %r13,0x10(%rsp)
  0x0000000002b1e446: mov    %r14,0x8(%rsp)
  0x0000000002b1e44b: mov    %r15,(%rsp)
  0x0000000002b1e44f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b1e459: movabs $0x2b1e3f9,%rdx    ;   {internal_word}
  0x0000000002b1e463: mov    %rsp,%r8
  0x0000000002b1e466: and    $0xfffffffffffffff0,%rsp
  0x0000000002b1e46a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b1e46f: hlt    
[Deopt Handler Code]
  0x0000000002b1e470: movabs $0x2b1e470,%r10    ;   {section_word}
  0x0000000002b1e47a: push   %r10
  0x0000000002b1e47c: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b1e481: hlt    
  0x0000000002b1e482: hlt    
  0x0000000002b1e483: hlt    
  0x0000000002b1e484: hlt    
  0x0000000002b1e485: hlt    
  0x0000000002b1e486: hlt    
  0x0000000002b1e487: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x0000000002b1e280' size='1040' address='0x0000000002b1e110' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='741' iicount='741' stamp='0.376'/>
<writer thread='22072'/>
Decoding compiled method 0x0000000002b1ded0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b76cc98} &apos;parentOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000002b1e000: mov    %eax,-0x6000(%rsp)
  0x0000000002b1e007: push   %rbp
  0x0000000002b1e008: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.TreeMap::parentOf@-1 (line 2200)

  0x0000000002b1e00c: mov    0x20(%rdx),%r10d   ; implicit exception: dispatches to 0x0000000002b1e023
  0x0000000002b1e010: mov    %r10,%rax
  0x0000000002b1e013: shl    $0x3,%rax          ;*getfield parent
                                                ; - java.util.TreeMap::parentOf@9 (line 2200)

  0x0000000002b1e017: add    $0x20,%rsp
  0x0000000002b1e01b: pop    %rbp
  0x0000000002b1e01c: test   %eax,-0x215e022(%rip)        # 0x00000000009c0000
                                                ;   {poll_return}
  0x0000000002b1e022: retq   
  0x0000000002b1e023: mov    %rdx,(%rsp)
  0x0000000002b1e027: mov    $0xffffff65,%edx
  0x0000000002b1e02c: data16 xchg %ax,%ax
  0x0000000002b1e02f: callq  0x0000000002a557a0  ; OopMap{[0]=Oop off=52}
                                                ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2200)
                                                ;   {runtime_call}
  0x0000000002b1e034: int3                      ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2200)

  0x0000000002b1e035: hlt    
  0x0000000002b1e036: hlt    
  0x0000000002b1e037: hlt    
  0x0000000002b1e038: hlt    
  0x0000000002b1e039: hlt    
  0x0000000002b1e03a: hlt    
  0x0000000002b1e03b: hlt    
  0x0000000002b1e03c: hlt    
  0x0000000002b1e03d: hlt    
  0x0000000002b1e03e: hlt    
  0x0000000002b1e03f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b1e040: jmpq   0x0000000002a7eea0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b1e045: callq  0x0000000002b1e04a
  0x0000000002b1e04a: subq   $0x5,(%rsp)
  0x0000000002b1e04f: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b1e054: hlt    
  0x0000000002b1e055: hlt    
  0x0000000002b1e056: hlt    
  0x0000000002b1e057: hlt    
<nmethod compile_id='16' compiler='C2' level='4' entry='0x0000000002b1e000' size='552' address='0x0000000002b1ded0' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='432' dependencies_offset='528' nul_chk_table_offset='536' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='10041' iicount='10041' stamp='0.379'/>
<writer thread='26472'/>
<task_queued compile_id='17' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='3712' iicount='3712' level='3' stamp='0.379' comment='tiered' hot_count='3712'/>
<task_queued compile_id='18' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='3712' iicount='3712' level='3' stamp='0.379' comment='tiered' hot_count='3712'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b226d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b757558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000002b228e0: mov    %eax,-0x6000(%rsp)
  0x0000000002b228e7: push   %rbp
  0x0000000002b228e8: sub    $0xa0,%rsp
  0x0000000002b228ef: mov    %rdx,%r11
  0x0000000002b228f2: movabs $0x1b846198,%rbx   ;   {metadata(method data for {method} {0x000000001b757558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b228fc: mov    0xdc(%rbx),%edx
  0x0000000002b22902: add    $0x8,%edx
  0x0000000002b22905: mov    %edx,0xdc(%rbx)
  0x0000000002b2290b: movabs $0x1b757550,%rbx   ;   {metadata({method} {0x000000001b757558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b22915: and    $0x1ff8,%edx
  0x0000000002b2291b: cmp    $0x0,%edx
  0x0000000002b2291e: je     0x0000000002b23189  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x0000000002b22924: mov    %r9,%r13
  0x0000000002b22927: sub    %r8d,%r13d
  0x0000000002b2292a: cmp    $0x0,%r13d
  0x0000000002b2292e: movabs $0x1b846198,%rbx   ;   {metadata(method data for {method} {0x000000001b757558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b22938: movabs $0x108,%rdx
  0x0000000002b22942: jge    0x0000000002b22952
  0x0000000002b22948: movabs $0x118,%rdx
  0x0000000002b22952: mov    (%rbx,%rdx,1),%rsi
  0x0000000002b22956: lea    0x1(%rsi),%rsi
  0x0000000002b2295a: mov    %rsi,(%rbx,%rdx,1)
  0x0000000002b2295e: jl     0x0000000002b22b26  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000002b22964: mov    %r13,%rbx
  0x0000000002b22967: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002b22971: movslq %ebx,%rbx
  0x0000000002b22974: mov    %rbx,%rdi
  0x0000000002b22977: cmp    $0xffffff,%rbx
  0x0000000002b2297e: ja     0x0000000002b231a0
  0x0000000002b22984: movabs $0x17,%rsi
  0x0000000002b2298e: lea    (%rsi,%rbx,2),%rsi
  0x0000000002b22992: and    $0xfffffffffffffff8,%rsi
  0x0000000002b22996: mov    0x60(%r15),%rax
  0x0000000002b2299a: lea    (%rax,%rsi,1),%rsi
  0x0000000002b2299e: cmp    0x70(%r15),%rsi
  0x0000000002b229a2: ja     0x0000000002b231a0
  0x0000000002b229a8: mov    %rsi,0x60(%r15)
  0x0000000002b229ac: sub    %rax,%rsi
  0x0000000002b229af: movq   $0x1,(%rax)
  0x0000000002b229b6: mov    %rdx,%rcx
  0x0000000002b229b9: shr    $0x3,%rcx
  0x0000000002b229bd: mov    %ecx,0x8(%rax)
  0x0000000002b229c0: mov    %ebx,0xc(%rax)
  0x0000000002b229c3: sub    $0x10,%rsi
  0x0000000002b229c7: je     0x0000000002b229de
  0x0000000002b229cd: xor    %rbx,%rbx
  0x0000000002b229d0: shr    $0x3,%rsi
  0x0000000002b229d4: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002b229d9: dec    %rsi
  0x0000000002b229dc: jne    0x0000000002b229d4  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000002b229de: mov    0xc(%r11),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x0000000002b231aa
  0x0000000002b229e2: sub    %r8d,%edx
  0x0000000002b229e5: movabs $0x1b846198,%r9    ;   {metadata(method data for {method} {0x000000001b757558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b229ef: addq   $0x1,0x208(%r9)
  0x0000000002b229f7: movabs $0x1b82bd30,%r9    ;   {metadata(method data for {method} {0x000000001b7328d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b22a01: mov    0xdc(%r9),%edi
  0x0000000002b22a08: add    $0x8,%edi
  0x0000000002b22a0b: mov    %edi,0xdc(%r9)
  0x0000000002b22a12: movabs $0x1b7328d0,%r9    ;   {metadata({method} {0x000000001b7328d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b22a1c: and    $0x7ffff8,%edi
  0x0000000002b22a22: cmp    $0x0,%edi
  0x0000000002b22a25: je     0x0000000002b231af
  0x0000000002b22a2b: cmp    %r13d,%edx
  0x0000000002b22a2e: movabs $0x1b82bd30,%r9    ;   {metadata(method data for {method} {0x000000001b7328d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b22a38: movabs $0x108,%rdi
  0x0000000002b22a42: jg     0x0000000002b22a52
  0x0000000002b22a48: movabs $0x118,%rdi
  0x0000000002b22a52: mov    (%r9,%rdi,1),%rsi
  0x0000000002b22a56: lea    0x1(%rsi),%rsi
  0x0000000002b22a5a: mov    %rsi,(%r9,%rdi,1)
  0x0000000002b22a5e: jg     0x0000000002b22a7d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002b22a64: movabs $0x1b82bd30,%r9    ;   {metadata(method data for {method} {0x000000001b7328d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b22a6e: incl   0x128(%r9)
  0x0000000002b22a75: mov    %rdx,%rsi
  0x0000000002b22a78: jmpq   0x0000000002b22a80  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002b22a7d: mov    %r13,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002b22a80: movabs $0x1b846198,%rdx   ;   {metadata(method data for {method} {0x000000001b757558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b22a8a: addq   $0x1,0x218(%rdx)
  0x0000000002b22a92: mov    %r11,%rdx
  0x0000000002b22a95: mov    %rax,%r9
  0x0000000002b22a98: mov    $0x0,%edi
  0x0000000002b22a9d: mov    %rax,0x70(%rsp)
  0x0000000002b22aa2: test   %r8d,%r8d
  0x0000000002b22aa5: jl     0x0000000002b231c6
  0x0000000002b22aab: lea    (%r8,%rsi,1),%rcx
  0x0000000002b22aaf: cmp    0xc(%rdx),%ecx
  0x0000000002b22ab2: ja     0x0000000002b231c6
  0x0000000002b22ab8: lea    (%rdi,%rsi,1),%rcx
  0x0000000002b22abc: cmp    0xc(%r9),%ecx
  0x0000000002b22ac0: ja     0x0000000002b231c6
  0x0000000002b22ac6: test   %esi,%esi
  0x0000000002b22ac8: jl     0x0000000002b231c6
  0x0000000002b22ace: je     0x0000000002b22b12
  0x0000000002b22ad4: movslq %r8d,%r8
  0x0000000002b22ad7: movslq %edi,%rdi
  0x0000000002b22ada: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002b22adf: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002b22ae4: mov    %rsi,%r8
  0x0000000002b22ae7: sub    $0x20,%rsp
  0x0000000002b22aeb: test   $0xf,%esp
  0x0000000002b22af1: je     0x0000000002b22b09
  0x0000000002b22af7: sub    $0x8,%rsp
  0x0000000002b22afb: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002b22b00: add    $0x8,%rsp
  0x0000000002b22b04: jmpq   0x0000000002b22b0e
  0x0000000002b22b09: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002b22b0e: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000002b22b12: mov    0x70(%rsp),%rax
  0x0000000002b22b17: add    $0xa0,%rsp
  0x0000000002b22b1e: pop    %rbp
  0x0000000002b22b1f: test   %eax,-0x2162a25(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b22b25: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x0000000002b22b26: mov    %r9d,0x80(%rsp)
  0x0000000002b22b2e: xchg   %ax,%ax
  0x0000000002b22b30: jmpq   0x0000000002b231e0  ;   {no_reloc}
  0x0000000002b22b35: add    %al,(%rax)
  0x0000000002b22b37: add    %al,(%rax)
  0x0000000002b22b39: add    %cl,-0x75(%rcx)
  0x0000000002b22b3c: rex.RXB (bad) 
  0x0000000002b22b3e: lea    0x20(%rax),%rdi
  0x0000000002b22b42: cmp    0x70(%r15),%rdi
  0x0000000002b22b46: ja     0x0000000002b231ea
  0x0000000002b22b4c: mov    %rdi,0x60(%r15)
  0x0000000002b22b50: mov    0xa8(%rdx),%rcx
  0x0000000002b22b57: mov    %rcx,(%rax)
  0x0000000002b22b5a: mov    %rdx,%rcx
  0x0000000002b22b5d: shr    $0x3,%rcx
  0x0000000002b22b61: mov    %ecx,0x8(%rax)
  0x0000000002b22b64: xor    %rcx,%rcx
  0x0000000002b22b67: mov    %ecx,0xc(%rax)
  0x0000000002b22b6a: xor    %rcx,%rcx
  0x0000000002b22b6d: mov    %rcx,0x10(%rax)
  0x0000000002b22b71: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x0000000002b22b75: data16 xchg %ax,%ax
  0x0000000002b22b78: jmpq   0x0000000002b23206  ;   {no_reloc}
  0x0000000002b22b7d: add    %al,(%rax)
  0x0000000002b22b7f: add    %al,(%rax)
  0x0000000002b22b81: add    %cl,-0x77(%rax)
  0x0000000002b22b84: test   %ah,(%rax,%rcx,4)
  0x0000000002b22b87: add    %al,(%rax)
  0x0000000002b22b89: add    %cl,-0x75(%rcx)
  0x0000000002b22b8c: rex.RXB (bad) 
  0x0000000002b22b8e: lea    0x18(%rax),%rdi
  0x0000000002b22b92: cmp    0x70(%r15),%rdi
  0x0000000002b22b96: ja     0x0000000002b23210
  0x0000000002b22b9c: mov    %rdi,0x60(%r15)
  0x0000000002b22ba0: mov    0xa8(%rdx),%rcx
  0x0000000002b22ba7: mov    %rcx,(%rax)
  0x0000000002b22baa: mov    %rdx,%rcx
  0x0000000002b22bad: shr    $0x3,%rcx
  0x0000000002b22bb1: mov    %ecx,0x8(%rax)
  0x0000000002b22bb4: xor    %rcx,%rcx
  0x0000000002b22bb7: mov    %ecx,0xc(%rax)
  0x0000000002b22bba: xor    %rcx,%rcx
  0x0000000002b22bbd: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x0000000002b22bc1: mov    %rax,%rbx
  0x0000000002b22bc4: movabs $0x1b846198,%rdx   ;   {metadata(method data for {method} {0x000000001b757558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b22bce: addq   $0x1,0x128(%rdx)
  0x0000000002b22bd6: movabs $0x1b8b5bd0,%rbx   ;   {metadata(method data for {method} {0x000000001b6b7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b22be0: mov    0xdc(%rbx),%edx
  0x0000000002b22be6: add    $0x8,%edx
  0x0000000002b22be9: mov    %edx,0xdc(%rbx)
  0x0000000002b22bef: movabs $0x1b6b7420,%rbx   ;   {metadata({method} {0x000000001b6b7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b22bf9: and    $0x7ffff8,%edx
  0x0000000002b22bff: cmp    $0x0,%edx
  0x0000000002b22c02: je     0x0000000002b2321d
  0x0000000002b22c08: mov    %rax,%rbx
  0x0000000002b22c0b: movabs $0x1b8b5bd0,%rdx   ;   {metadata(method data for {method} {0x000000001b6b7428} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b22c15: addq   $0x1,0x108(%rdx)
  0x0000000002b22c1d: movabs $0x1b8b69a0,%rbx   ;   {metadata(method data for {method} {0x000000001b6b3810} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b22c27: mov    0xdc(%rbx),%edx
  0x0000000002b22c2d: add    $0x8,%edx
  0x0000000002b22c30: mov    %edx,0xdc(%rbx)
  0x0000000002b22c36: movabs $0x1b6b3808,%rbx   ;   {metadata({method} {0x000000001b6b3810} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b22c40: and    $0x7ffff8,%edx
  0x0000000002b22c46: cmp    $0x0,%edx
  0x0000000002b22c49: je     0x0000000002b23234
  0x0000000002b22c4f: mov    %rax,%rbx
  0x0000000002b22c52: movabs $0x1b8b69a0,%rdx   ;   {metadata(method data for {method} {0x000000001b6b3810} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b22c5c: addq   $0x1,0x108(%rdx)
  0x0000000002b22c64: movabs $0x1b771918,%rbx   ;   {metadata(method data for {method} {0x000000001b640488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002b22c6e: mov    0xdc(%rbx),%edx
  0x0000000002b22c74: add    $0x8,%edx
  0x0000000002b22c77: mov    %edx,0xdc(%rbx)
  0x0000000002b22c7d: movabs $0x1b640480,%rbx   ;   {metadata({method} {0x000000001b640488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002b22c87: and    $0x7ffff8,%edx
  0x0000000002b22c8d: cmp    $0x0,%edx
  0x0000000002b22c90: je     0x0000000002b2324b
  0x0000000002b22c96: mov    $0x10,%ebx
  0x0000000002b22c9b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002b22ca5: mov    %rax,%r13
  0x0000000002b22ca8: movslq %ebx,%rbx
  0x0000000002b22cab: mov    %rbx,%rdi
  0x0000000002b22cae: cmp    $0xffffff,%rbx
  0x0000000002b22cb5: ja     0x0000000002b23262
  0x0000000002b22cbb: movabs $0x17,%rsi
  0x0000000002b22cc5: lea    (%rsi,%rbx,2),%rsi
  0x0000000002b22cc9: and    $0xfffffffffffffff8,%rsi
  0x0000000002b22ccd: mov    0x60(%r15),%rax
  0x0000000002b22cd1: lea    (%rax,%rsi,1),%rsi
  0x0000000002b22cd5: cmp    0x70(%r15),%rsi
  0x0000000002b22cd9: ja     0x0000000002b23262
  0x0000000002b22cdf: mov    %rsi,0x60(%r15)
  0x0000000002b22ce3: sub    %rax,%rsi
  0x0000000002b22ce6: movq   $0x1,(%rax)
  0x0000000002b22ced: mov    %rdx,%rcx
  0x0000000002b22cf0: shr    $0x3,%rcx
  0x0000000002b22cf4: mov    %ecx,0x8(%rax)
  0x0000000002b22cf7: mov    %ebx,0xc(%rax)
  0x0000000002b22cfa: sub    $0x10,%rsi
  0x0000000002b22cfe: je     0x0000000002b22d15
  0x0000000002b22d04: xor    %rbx,%rbx
  0x0000000002b22d07: shr    $0x3,%rsi
  0x0000000002b22d0b: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002b22d10: dec    %rsi
  0x0000000002b22d13: jne    0x0000000002b22d0b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002b22d15: mov    %rax,%r10
  0x0000000002b22d18: shr    $0x3,%r10
  0x0000000002b22d1c: mov    %r10d,0x10(%r13)
  0x0000000002b22d20: mov    %r13,%rax
  0x0000000002b22d23: shr    $0x9,%rax
  0x0000000002b22d27: movabs $0xe7c2000,%rdx
  0x0000000002b22d31: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002b22d35: mov    %r13,%rax
  0x0000000002b22d38: movabs $0x1b846198,%rdx   ;   {metadata(method data for {method} {0x000000001b757558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b22d42: mov    0x8(%rax),%eax
  0x0000000002b22d45: shl    $0x3,%rax
  0x0000000002b22d49: cmp    0x140(%rdx),%rax
  0x0000000002b22d50: jne    0x0000000002b22d5f
  0x0000000002b22d52: addq   $0x1,0x148(%rdx)
  0x0000000002b22d5a: jmpq   0x0000000002b22dc5
  0x0000000002b22d5f: cmp    0x150(%rdx),%rax
  0x0000000002b22d66: jne    0x0000000002b22d75
  0x0000000002b22d68: addq   $0x1,0x158(%rdx)
  0x0000000002b22d70: jmpq   0x0000000002b22dc5
  0x0000000002b22d75: cmpq   $0x0,0x140(%rdx)
  0x0000000002b22d80: jne    0x0000000002b22d99
  0x0000000002b22d82: mov    %rax,0x140(%rdx)
  0x0000000002b22d89: movq   $0x1,0x148(%rdx)
  0x0000000002b22d94: jmpq   0x0000000002b22dc5
  0x0000000002b22d99: cmpq   $0x0,0x150(%rdx)
  0x0000000002b22da4: jne    0x0000000002b22dbd
  0x0000000002b22da6: mov    %rax,0x150(%rdx)
  0x0000000002b22dad: movq   $0x1,0x158(%rdx)
  0x0000000002b22db8: jmpq   0x0000000002b22dc5
  0x0000000002b22dbd: addq   $0x1,0x138(%rdx)
  0x0000000002b22dc5: movabs $0x1b905848,%rdx   ;   {metadata(method data for {method} {0x000000001b6b7c00} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b22dcf: mov    0xdc(%rdx),%esi
  0x0000000002b22dd5: add    $0x8,%esi
  0x0000000002b22dd8: mov    %esi,0xdc(%rdx)
  0x0000000002b22dde: movabs $0x1b6b7bf8,%rdx   ;   {metadata({method} {0x000000001b6b7c00} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b22de8: and    $0x7ffff8,%esi
  0x0000000002b22dee: cmp    $0x0,%esi
  0x0000000002b22df1: je     0x0000000002b2326c
  0x0000000002b22df7: mov    %r13,%rax
  0x0000000002b22dfa: movabs $0x1b905848,%rdx   ;   {metadata(method data for {method} {0x000000001b6b7c00} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b22e04: addq   $0x1,0x108(%rdx)
  0x0000000002b22e0c: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x0000000002b22e0f: mov    %r13,0x78(%rsp)
  0x0000000002b22e14: nop
  0x0000000002b22e15: nop
  0x0000000002b22e16: nop
  0x0000000002b22e17: callq  0x0000000002a561a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002b22e1c: mov    0x78(%rsp),%rax
  0x0000000002b22e21: movabs $0x1b846198,%r8    ;   {metadata(method data for {method} {0x000000001b757558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b22e2b: mov    0x8(%rax),%eax
  0x0000000002b22e2e: shl    $0x3,%rax
  0x0000000002b22e32: cmp    0x170(%r8),%rax
  0x0000000002b22e39: jne    0x0000000002b22e48
  0x0000000002b22e3b: addq   $0x1,0x178(%r8)
  0x0000000002b22e43: jmpq   0x0000000002b22eae
  0x0000000002b22e48: cmp    0x180(%r8),%rax
  0x0000000002b22e4f: jne    0x0000000002b22e5e
  0x0000000002b22e51: addq   $0x1,0x188(%r8)
  0x0000000002b22e59: jmpq   0x0000000002b22eae
  0x0000000002b22e5e: cmpq   $0x0,0x170(%r8)
  0x0000000002b22e69: jne    0x0000000002b22e82
  0x0000000002b22e6b: mov    %rax,0x170(%r8)
  0x0000000002b22e72: movq   $0x1,0x178(%r8)
  0x0000000002b22e7d: jmpq   0x0000000002b22eae
  0x0000000002b22e82: cmpq   $0x0,0x180(%r8)
  0x0000000002b22e8d: jne    0x0000000002b22ea6
  0x0000000002b22e8f: mov    %rax,0x180(%r8)
  0x0000000002b22e96: movq   $0x1,0x188(%r8)
  0x0000000002b22ea1: jmpq   0x0000000002b22eae
  0x0000000002b22ea6: addq   $0x1,0x168(%r8)
  0x0000000002b22eae: movabs $0x1b870a00,%r8    ;   {metadata(method data for {method} {0x000000001b6b7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b22eb8: mov    0xdc(%r8),%edx
  0x0000000002b22ebf: add    $0x8,%edx
  0x0000000002b22ec2: mov    %edx,0xdc(%r8)
  0x0000000002b22ec9: movabs $0x1b6b7738,%r8    ;   {metadata({method} {0x000000001b6b7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b22ed3: and    $0x7ffff8,%edx
  0x0000000002b22ed9: cmp    $0x0,%edx
  0x0000000002b22edc: je     0x0000000002b23283
  0x0000000002b22ee2: mov    0x78(%rsp),%rax
  0x0000000002b22ee7: movabs $0x1b870a00,%r8    ;   {metadata(method data for {method} {0x000000001b6b7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b22ef1: addq   $0x1,0x108(%r8)
  0x0000000002b22ef9: movabs $0x76b7e0e18,%r8   ;   {oop(&quot; &gt; &quot;)}
  0x0000000002b22f03: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x0000000002b22f08: nop
  0x0000000002b22f09: nop
  0x0000000002b22f0a: nop
  0x0000000002b22f0b: nop
  0x0000000002b22f0c: nop
  0x0000000002b22f0d: nop
  0x0000000002b22f0e: nop
  0x0000000002b22f0f: callq  0x0000000002a561a0  ; OopMap{[120]=Oop [136]=Oop off=1588}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002b22f14: mov    0x78(%rsp),%rax
  0x0000000002b22f19: movabs $0x1b846198,%r8    ;   {metadata(method data for {method} {0x000000001b757558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b22f23: mov    0x8(%rax),%eax
  0x0000000002b22f26: shl    $0x3,%rax
  0x0000000002b22f2a: cmp    0x1a0(%r8),%rax
  0x0000000002b22f31: jne    0x0000000002b22f40
  0x0000000002b22f33: addq   $0x1,0x1a8(%r8)
  0x0000000002b22f3b: jmpq   0x0000000002b22fa6
  0x0000000002b22f40: cmp    0x1b0(%r8),%rax
  0x0000000002b22f47: jne    0x0000000002b22f56
  0x0000000002b22f49: addq   $0x1,0x1b8(%r8)
  0x0000000002b22f51: jmpq   0x0000000002b22fa6
  0x0000000002b22f56: cmpq   $0x0,0x1a0(%r8)
  0x0000000002b22f61: jne    0x0000000002b22f7a
  0x0000000002b22f63: mov    %rax,0x1a0(%r8)
  0x0000000002b22f6a: movq   $0x1,0x1a8(%r8)
  0x0000000002b22f75: jmpq   0x0000000002b22fa6
  0x0000000002b22f7a: cmpq   $0x0,0x1b0(%r8)
  0x0000000002b22f85: jne    0x0000000002b22f9e
  0x0000000002b22f87: mov    %rax,0x1b0(%r8)
  0x0000000002b22f8e: movq   $0x1,0x1b8(%r8)
  0x0000000002b22f99: jmpq   0x0000000002b22fa6
  0x0000000002b22f9e: addq   $0x1,0x198(%r8)
  0x0000000002b22fa6: movabs $0x1b905848,%r8    ;   {metadata(method data for {method} {0x000000001b6b7c00} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b22fb0: mov    0xdc(%r8),%edx
  0x0000000002b22fb7: add    $0x8,%edx
  0x0000000002b22fba: mov    %edx,0xdc(%r8)
  0x0000000002b22fc1: movabs $0x1b6b7bf8,%r8    ;   {metadata({method} {0x000000001b6b7c00} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b22fcb: and    $0x7ffff8,%edx
  0x0000000002b22fd1: cmp    $0x0,%edx
  0x0000000002b22fd4: je     0x0000000002b2329a
  0x0000000002b22fda: mov    0x78(%rsp),%rax
  0x0000000002b22fdf: movabs $0x1b905848,%r8    ;   {metadata(method data for {method} {0x000000001b6b7c00} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b22fe9: addq   $0x1,0x108(%r8)
  0x0000000002b22ff1: mov    0x80(%rsp),%r8d
  0x0000000002b22ff9: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x0000000002b22ffe: nop
  0x0000000002b22fff: callq  0x0000000002a561a0  ; OopMap{[120]=Oop [136]=Oop off=1828}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002b23004: mov    0x78(%rsp),%rax
  0x0000000002b23009: movabs $0x1b846198,%rdx   ;   {metadata(method data for {method} {0x000000001b757558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b23013: mov    0x8(%rax),%eax
  0x0000000002b23016: shl    $0x3,%rax
  0x0000000002b2301a: cmp    0x1d0(%rdx),%rax
  0x0000000002b23021: jne    0x0000000002b23030
  0x0000000002b23023: addq   $0x1,0x1d8(%rdx)
  0x0000000002b2302b: jmpq   0x0000000002b23096
  0x0000000002b23030: cmp    0x1e0(%rdx),%rax
  0x0000000002b23037: jne    0x0000000002b23046
  0x0000000002b23039: addq   $0x1,0x1e8(%rdx)
  0x0000000002b23041: jmpq   0x0000000002b23096
  0x0000000002b23046: cmpq   $0x0,0x1d0(%rdx)
  0x0000000002b23051: jne    0x0000000002b2306a
  0x0000000002b23053: mov    %rax,0x1d0(%rdx)
  0x0000000002b2305a: movq   $0x1,0x1d8(%rdx)
  0x0000000002b23065: jmpq   0x0000000002b23096
  0x0000000002b2306a: cmpq   $0x0,0x1e0(%rdx)
  0x0000000002b23075: jne    0x0000000002b2308e
  0x0000000002b23077: mov    %rax,0x1e0(%rdx)
  0x0000000002b2307e: movq   $0x1,0x1e8(%rdx)
  0x0000000002b23089: jmpq   0x0000000002b23096
  0x0000000002b2308e: addq   $0x1,0x1c8(%rdx)
  0x0000000002b23096: movabs $0x1b906288,%rdx   ;   {metadata(method data for {method} {0x000000001b6b8af0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b230a0: mov    0xdc(%rdx),%esi
  0x0000000002b230a6: add    $0x8,%esi
  0x0000000002b230a9: mov    %esi,0xdc(%rdx)
  0x0000000002b230af: movabs $0x1b6b8ae8,%rdx   ;   {metadata({method} {0x000000001b6b8af0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b230b9: and    $0x7ffff8,%esi
  0x0000000002b230bf: cmp    $0x0,%esi
  0x0000000002b230c2: je     0x0000000002b232b1
  0x0000000002b230c8: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002b230d2: mov    0x60(%r15),%rax
  0x0000000002b230d6: lea    0x18(%rax),%rdi
  0x0000000002b230da: cmp    0x70(%r15),%rdi
  0x0000000002b230de: ja     0x0000000002b232c8
  0x0000000002b230e4: mov    %rdi,0x60(%r15)
  0x0000000002b230e8: mov    0xa8(%rdx),%rcx
  0x0000000002b230ef: mov    %rcx,(%rax)
  0x0000000002b230f2: mov    %rdx,%rcx
  0x0000000002b230f5: shr    $0x3,%rcx
  0x0000000002b230f9: mov    %ecx,0x8(%rax)
  0x0000000002b230fc: xor    %rcx,%rcx
  0x0000000002b230ff: mov    %ecx,0xc(%rax)
  0x0000000002b23102: xor    %rcx,%rcx
  0x0000000002b23105: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002b23109: mov    0x78(%rsp),%r8
  0x0000000002b2310e: mov    0x10(%r8),%r9d
  0x0000000002b23112: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002b23116: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002b2311a: mov    %rax,%r8
  0x0000000002b2311d: movabs $0x1b906288,%rdx   ;   {metadata(method data for {method} {0x000000001b6b8af0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b23127: addq   $0x1,0x108(%rdx)
  0x0000000002b2312f: mov    %r9,%r8
  0x0000000002b23132: mov    $0x0,%r9d
  0x0000000002b23138: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002b2313b: mov    %rax,0x90(%rsp)
  0x0000000002b23143: nop
  0x0000000002b23144: nop
  0x0000000002b23145: nop
  0x0000000002b23146: nop
  0x0000000002b23147: callq  0x0000000002a561a0  ; OopMap{[136]=Oop [144]=Oop off=2156}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002b2314c: mov    0x88(%rsp),%rax
  0x0000000002b23154: movabs $0x1b846198,%r8    ;   {metadata(method data for {method} {0x000000001b757558} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b2315e: addq   $0x1,0x1f8(%r8)
  0x0000000002b23166: mov    0x90(%rsp),%r8
  0x0000000002b2316e: mov    0x88(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x0000000002b23176: nop
  0x0000000002b23177: callq  0x0000000002a561a0  ; OopMap{[136]=Oop off=2204}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002b2317c: mov    0x88(%rsp),%rax
  0x0000000002b23184: jmpq   0x0000000002b23300
  0x0000000002b23189: mov    %rbx,0x8(%rsp)
  0x0000000002b2318e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b23196: callq  0x0000000002b13560  ; OopMap{r11=Oop off=2235}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x0000000002b2319b: jmpq   0x0000000002b22924
  0x0000000002b231a0: callq  0x0000000002a7ffc0  ; OopMap{r11=Oop off=2245}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x0000000002b231a5: jmpq   0x0000000002b229de
  0x0000000002b231aa: callq  0x0000000002a80dc0  ; OopMap{r11=Oop rax=Oop off=2255}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x0000000002b231af: mov    %r9,0x8(%rsp)
  0x0000000002b231b4: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b231bc: callq  0x0000000002b13560  ; OopMap{r11=Oop rax=Oop off=2273}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x0000000002b231c1: jmpq   0x0000000002b22a2b
  0x0000000002b231c6: nop
  0x0000000002b231c7: callq  0x0000000002a56620  ; OopMap{[112]=Oop off=2284}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x0000000002b231cc: jmpq   0x0000000002b22b12
  0x0000000002b231d1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002b231db: mov    $0xa050f00,%eax
  0x0000000002b231e0: callq  0x0000000002b10560  ; OopMap{off=2309}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002b231e5: jmpq   0x0000000002b22b30
  0x0000000002b231ea: mov    %rdx,%rdx
  0x0000000002b231ed: callq  0x0000000002b10140  ; OopMap{off=2322}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002b231f2: jmpq   0x0000000002b22b75
  0x0000000002b231f7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002b23201: mov    $0xa050f00,%eax
  0x0000000002b23206: callq  0x0000000002b10560  ; OopMap{rax=Oop off=2347}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002b2320b: jmpq   0x0000000002b22b78
  0x0000000002b23210: mov    %rdx,%rdx
  0x0000000002b23213: callq  0x0000000002b10140  ; OopMap{[136]=Oop off=2360}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002b23218: jmpq   0x0000000002b22bc1
  0x0000000002b2321d: mov    %rbx,0x8(%rsp)
  0x0000000002b23222: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b2322a: callq  0x0000000002b13560  ; OopMap{[136]=Oop rax=Oop off=2383}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002b2322f: jmpq   0x0000000002b22c08
  0x0000000002b23234: mov    %rbx,0x8(%rsp)
  0x0000000002b23239: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b23241: callq  0x0000000002b13560  ; OopMap{[136]=Oop rax=Oop off=2406}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002b23246: jmpq   0x0000000002b22c4f
  0x0000000002b2324b: mov    %rbx,0x8(%rsp)
  0x0000000002b23250: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b23258: callq  0x0000000002b13560  ; OopMap{[136]=Oop rax=Oop off=2429}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002b2325d: jmpq   0x0000000002b22c96
  0x0000000002b23262: callq  0x0000000002a7ffc0  ; OopMap{[136]=Oop r13=Oop off=2439}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002b23267: jmpq   0x0000000002b22d15
  0x0000000002b2326c: mov    %rdx,0x8(%rsp)
  0x0000000002b23271: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b23279: callq  0x0000000002b13560  ; OopMap{[136]=Oop r13=Oop off=2462}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x0000000002b2327e: jmpq   0x0000000002b22df7
  0x0000000002b23283: mov    %r8,0x8(%rsp)
  0x0000000002b23288: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b23290: callq  0x0000000002b13560  ; OopMap{[120]=Oop [136]=Oop off=2485}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x0000000002b23295: jmpq   0x0000000002b22ee2
  0x0000000002b2329a: mov    %r8,0x8(%rsp)
  0x0000000002b2329f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b232a7: callq  0x0000000002b13560  ; OopMap{[120]=Oop [136]=Oop off=2508}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x0000000002b232ac: jmpq   0x0000000002b22fda
  0x0000000002b232b1: mov    %rdx,0x8(%rsp)
  0x0000000002b232b6: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b232be: callq  0x0000000002b13560  ; OopMap{[120]=Oop [136]=Oop off=2531}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002b232c3: jmpq   0x0000000002b230c8
  0x0000000002b232c8: mov    %rdx,%rdx
  0x0000000002b232cb: callq  0x0000000002b10140  ; OopMap{[120]=Oop [136]=Oop off=2544}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002b232d0: jmpq   0x0000000002b23109
  0x0000000002b232d5: nop
  0x0000000002b232d6: nop
  0x0000000002b232d7: mov    0x2a8(%r15),%rax
  0x0000000002b232de: movabs $0x0,%r10
  0x0000000002b232e8: mov    %r10,0x2a8(%r15)
  0x0000000002b232ef: movabs $0x0,%r10
  0x0000000002b232f9: mov    %r10,0x2b0(%r15)
  0x0000000002b23300: add    $0xa0,%rsp
  0x0000000002b23307: pop    %rbp
  0x0000000002b23308: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b2330d: hlt    
  0x0000000002b2330e: hlt    
  0x0000000002b2330f: hlt    
  0x0000000002b23310: hlt    
  0x0000000002b23311: hlt    
  0x0000000002b23312: hlt    
  0x0000000002b23313: hlt    
  0x0000000002b23314: hlt    
  0x0000000002b23315: hlt    
  0x0000000002b23316: hlt    
  0x0000000002b23317: hlt    
  0x0000000002b23318: hlt    
  0x0000000002b23319: hlt    
  0x0000000002b2331a: hlt    
  0x0000000002b2331b: hlt    
  0x0000000002b2331c: hlt    
  0x0000000002b2331d: hlt    
  0x0000000002b2331e: hlt    
  0x0000000002b2331f: hlt    
[Stub Code]
  0x0000000002b23320: nop                       ;   {no_reloc}
  0x0000000002b23321: nop
  0x0000000002b23322: nop
  0x0000000002b23323: nop
  0x0000000002b23324: nop
  0x0000000002b23325: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b2332f: jmpq   0x0000000002b2332f  ;   {runtime_call}
  0x0000000002b23334: nop
  0x0000000002b23335: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b2333f: jmpq   0x0000000002b2333f  ;   {runtime_call}
  0x0000000002b23344: nop
  0x0000000002b23345: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b2334f: jmpq   0x0000000002b2334f  ;   {runtime_call}
  0x0000000002b23354: nop
  0x0000000002b23355: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b2335f: jmpq   0x0000000002b2335f  ;   {runtime_call}
  0x0000000002b23364: nop
  0x0000000002b23365: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b2336f: jmpq   0x0000000002b2336f  ;   {runtime_call}
  0x0000000002b23374: nop
  0x0000000002b23375: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b2337f: jmpq   0x0000000002b2337f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b23384: callq  0x0000000002a7f5a0  ;   {runtime_call}
  0x0000000002b23389: mov    %rsp,-0x28(%rsp)
  0x0000000002b2338e: sub    $0x80,%rsp
  0x0000000002b23395: mov    %rax,0x78(%rsp)
  0x0000000002b2339a: mov    %rcx,0x70(%rsp)
  0x0000000002b2339f: mov    %rdx,0x68(%rsp)
  0x0000000002b233a4: mov    %rbx,0x60(%rsp)
  0x0000000002b233a9: mov    %rbp,0x50(%rsp)
  0x0000000002b233ae: mov    %rsi,0x48(%rsp)
  0x0000000002b233b3: mov    %rdi,0x40(%rsp)
  0x0000000002b233b8: mov    %r8,0x38(%rsp)
  0x0000000002b233bd: mov    %r9,0x30(%rsp)
  0x0000000002b233c2: mov    %r10,0x28(%rsp)
  0x0000000002b233c7: mov    %r11,0x20(%rsp)
  0x0000000002b233cc: mov    %r12,0x18(%rsp)
  0x0000000002b233d1: mov    %r13,0x10(%rsp)
  0x0000000002b233d6: mov    %r14,0x8(%rsp)
  0x0000000002b233db: mov    %r15,(%rsp)
  0x0000000002b233df: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b233e9: movabs $0x2b23389,%rdx    ;   {internal_word}
  0x0000000002b233f3: mov    %rsp,%r8
  0x0000000002b233f6: and    $0xfffffffffffffff0,%rsp
  0x0000000002b233fa: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b233ff: hlt    
[Deopt Handler Code]
  0x0000000002b23400: movabs $0x2b23400,%r10    ;   {section_word}
  0x0000000002b2340a: push   %r10
  0x0000000002b2340c: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b23411: hlt    
  0x0000000002b23412: hlt    
  0x0000000002b23413: hlt    
  0x0000000002b23414: hlt    
  0x0000000002b23415: hlt    
  0x0000000002b23416: hlt    
  0x0000000002b23417: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x0000000002b228e0' size='4856' address='0x0000000002b226d0' relocation_offset='288' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='1026' iicount='1026' stamp='0.413'/>
Decoding compiled method 0x0000000002b222d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b811dc8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002b22420: mov    0x8(%rdx),%r10d
  0x0000000002b22424: shl    $0x3,%r10
  0x0000000002b22428: cmp    %rax,%r10
  0x0000000002b2242b: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b22431: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b2243c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b22440: mov    %eax,-0x6000(%rsp)
  0x0000000002b22447: push   %rbp
  0x0000000002b22448: sub    $0x30,%rsp
  0x0000000002b2244c: movabs $0x1b813708,%rax   ;   {metadata(method data for {method} {0x000000001b811dc8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002b22456: mov    0xdc(%rax),%esi
  0x0000000002b2245c: add    $0x8,%esi
  0x0000000002b2245f: mov    %esi,0xdc(%rax)
  0x0000000002b22465: movabs $0x1b811dc0,%rax   ;   {metadata({method} {0x000000001b811dc8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002b2246f: and    $0x1ff8,%esi
  0x0000000002b22475: cmp    $0x0,%esi
  0x0000000002b22478: je     0x0000000002b224ac  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x0000000002b2247e: and    $0xffff,%r8d
  0x0000000002b22485: movabs $0x76b48c4e8,%rax  ;   {oop([I)}
  0x0000000002b2248f: movslq %r8d,%rsi
  0x0000000002b22492: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x0000000002b224c0
  0x0000000002b22496: jae    0x0000000002b224ca
  0x0000000002b2249c: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x0000000002b224a0: add    $0x30,%rsp
  0x0000000002b224a4: pop    %rbp
  0x0000000002b224a5: test   %eax,-0x21623ab(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b224ab: retq   
  0x0000000002b224ac: mov    %rax,0x8(%rsp)
  0x0000000002b224b1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b224b9: callq  0x0000000002b13560  ; OopMap{rdx=Oop off=158}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x0000000002b224be: jmp    0x0000000002b2247e
  0x0000000002b224c0: callq  0x0000000002a80dc0  ; OopMap{rax=Oop off=165}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002b224c5: callq  0x0000000002a80dc0  ; OopMap{rax=Oop off=170}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002b224ca: mov    %r8,(%rsp)
  0x0000000002b224ce: callq  0x0000000002a81480  ; OopMap{rax=Oop off=179}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002b224d3: nop
  0x0000000002b224d4: nop
  0x0000000002b224d5: mov    0x2a8(%r15),%rax
  0x0000000002b224dc: movabs $0x0,%r10
  0x0000000002b224e6: mov    %r10,0x2a8(%r15)
  0x0000000002b224ed: movabs $0x0,%r10
  0x0000000002b224f7: mov    %r10,0x2b0(%r15)
  0x0000000002b224fe: add    $0x30,%rsp
  0x0000000002b22502: pop    %rbp
  0x0000000002b22503: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b22508: hlt    
  0x0000000002b22509: hlt    
  0x0000000002b2250a: hlt    
  0x0000000002b2250b: hlt    
  0x0000000002b2250c: hlt    
  0x0000000002b2250d: hlt    
  0x0000000002b2250e: hlt    
  0x0000000002b2250f: hlt    
  0x0000000002b22510: hlt    
  0x0000000002b22511: hlt    
  0x0000000002b22512: hlt    
  0x0000000002b22513: hlt    
  0x0000000002b22514: hlt    
  0x0000000002b22515: hlt    
  0x0000000002b22516: hlt    
  0x0000000002b22517: hlt    
  0x0000000002b22518: hlt    
  0x0000000002b22519: hlt    
  0x0000000002b2251a: hlt    
  0x0000000002b2251b: hlt    
  0x0000000002b2251c: hlt    
  0x0000000002b2251d: hlt    
  0x0000000002b2251e: hlt    
  0x0000000002b2251f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b22520: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b22525: mov    %rsp,-0x28(%rsp)
  0x0000000002b2252a: sub    $0x80,%rsp
  0x0000000002b22531: mov    %rax,0x78(%rsp)
  0x0000000002b22536: mov    %rcx,0x70(%rsp)
  0x0000000002b2253b: mov    %rdx,0x68(%rsp)
  0x0000000002b22540: mov    %rbx,0x60(%rsp)
  0x0000000002b22545: mov    %rbp,0x50(%rsp)
  0x0000000002b2254a: mov    %rsi,0x48(%rsp)
  0x0000000002b2254f: mov    %rdi,0x40(%rsp)
  0x0000000002b22554: mov    %r8,0x38(%rsp)
  0x0000000002b22559: mov    %r9,0x30(%rsp)
  0x0000000002b2255e: mov    %r10,0x28(%rsp)
  0x0000000002b22563: mov    %r11,0x20(%rsp)
  0x0000000002b22568: mov    %r12,0x18(%rsp)
  0x0000000002b2256d: mov    %r13,0x10(%rsp)
  0x0000000002b22572: mov    %r14,0x8(%rsp)
  0x0000000002b22577: mov    %r15,(%rsp)
  0x0000000002b2257b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b22585: movabs $0x2b22525,%rdx    ;   {internal_word}
  0x0000000002b2258f: mov    %rsp,%r8
  0x0000000002b22592: and    $0xfffffffffffffff0,%rsp
  0x0000000002b22596: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b2259b: hlt    
[Deopt Handler Code]
  0x0000000002b2259c: movabs $0x2b2259c,%r10    ;   {section_word}
  0x0000000002b225a6: push   %r10
  0x0000000002b225a8: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b225ad: hlt    
  0x0000000002b225ae: hlt    
  0x0000000002b225af: hlt    
<nmethod compile_id='18' compiler='C1' level='3' entry='0x0000000002b22420' size='952' address='0x0000000002b222d0' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='792' dependencies_offset='920' nul_chk_table_offset='928' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4036' iicount='4036' stamp='0.418'/>
Decoding compiled method 0x0000000002b21810:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b811708} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002b219c0: mov    %eax,-0x6000(%rsp)
  0x0000000002b219c7: push   %rbp
  0x0000000002b219c8: sub    $0x30,%rsp
  0x0000000002b219cc: movabs $0x1b8132d8,%rax   ;   {metadata(method data for {method} {0x000000001b811708} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002b219d6: mov    0xdc(%rax),%esi
  0x0000000002b219dc: add    $0x8,%esi
  0x0000000002b219df: mov    %esi,0xdc(%rax)
  0x0000000002b219e5: movabs $0x1b811700,%rax   ;   {metadata({method} {0x000000001b811708} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002b219ef: and    $0x1ff8,%esi
  0x0000000002b219f5: cmp    $0x0,%esi
  0x0000000002b219f8: je     0x0000000002b21b7c  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x0000000002b219fe: mov    %rdx,%rax
  0x0000000002b21a01: shr    $0x8,%eax
  0x0000000002b21a04: cmp    $0x0,%eax
  0x0000000002b21a07: movabs $0x1b8132d8,%rax   ;   {metadata(method data for {method} {0x000000001b811708} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002b21a11: movabs $0x108,%rsi
  0x0000000002b21a1b: jne    0x0000000002b21a2b
  0x0000000002b21a21: movabs $0x118,%rsi
  0x0000000002b21a2b: mov    (%rax,%rsi,1),%rdi
  0x0000000002b21a2f: lea    0x1(%rdi),%rdi
  0x0000000002b21a33: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b21a37: je     0x0000000002b21b66  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x0000000002b21a3d: shr    $0x10,%edx
  0x0000000002b21a40: cmp    $0x0,%edx
  0x0000000002b21a43: je     0x0000000002b21b3e
  0x0000000002b21a49: cmp    $0x1,%edx
  0x0000000002b21a4c: je     0x0000000002b21b16
  0x0000000002b21a52: cmp    $0x2,%edx
  0x0000000002b21a55: je     0x0000000002b21aee
  0x0000000002b21a5b: cmp    $0xe,%edx
  0x0000000002b21a5e: je     0x0000000002b21ac6
  0x0000000002b21a64: cmp    $0xf,%edx
  0x0000000002b21a67: je     0x0000000002b21a76
  0x0000000002b21a6d: cmp    $0x10,%edx
  0x0000000002b21a70: jne    0x0000000002b21a9e  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x0000000002b21a76: xchg   %ax,%ax
  0x0000000002b21a78: jmpq   0x0000000002b21bf0  ;   {no_reloc}
  0x0000000002b21a7d: add    %al,(%rax)
  0x0000000002b21a7f: add    %al,(%rax)
  0x0000000002b21a81: add    %ah,0xf(%rsi)
  0x0000000002b21a84: (bad)  
  0x0000000002b21a85: add    %r8b,(%rax)
  0x0000000002b21a88: jmpq   0x0000000002b21c0a  ; implicit exception: dispatches to 0x0000000002b21bfa
  0x0000000002b21a8d: nop
  0x0000000002b21a8e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x0000000002b21a92: add    $0x30,%rsp
  0x0000000002b21a96: pop    %rbp
  0x0000000002b21a97: test   %eax,-0x216199d(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b21a9d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x0000000002b21a9e: xchg   %ax,%ax
  0x0000000002b21aa0: jmpq   0x0000000002b21c71  ;   {no_reloc}
  0x0000000002b21aa5: add    %al,(%rax)
  0x0000000002b21aa7: add    %al,(%rax)
  0x0000000002b21aa9: add    %ah,0xf(%rsi)
  0x0000000002b21aac: (bad)  
  0x0000000002b21aad: add    %r8b,(%rax)
  0x0000000002b21ab0: jmpq   0x0000000002b21c8b  ; implicit exception: dispatches to 0x0000000002b21c7b
  0x0000000002b21ab5: nop
  0x0000000002b21ab6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x0000000002b21aba: add    $0x30,%rsp
  0x0000000002b21abe: pop    %rbp
  0x0000000002b21abf: test   %eax,-0x21619c5(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b21ac5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x0000000002b21ac6: xchg   %ax,%ax
  0x0000000002b21ac8: jmpq   0x0000000002b21cf2  ;   {no_reloc}
  0x0000000002b21acd: add    %al,(%rax)
  0x0000000002b21acf: add    %al,(%rax)
  0x0000000002b21ad1: add    %ah,0xf(%rsi)
  0x0000000002b21ad4: (bad)  
  0x0000000002b21ad5: add    %r8b,(%rax)
  0x0000000002b21ad8: jmpq   0x0000000002b21d0c  ; implicit exception: dispatches to 0x0000000002b21cfc
  0x0000000002b21add: nop
  0x0000000002b21ade: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x0000000002b21ae2: add    $0x30,%rsp
  0x0000000002b21ae6: pop    %rbp
  0x0000000002b21ae7: test   %eax,-0x21619ed(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b21aed: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x0000000002b21aee: xchg   %ax,%ax
  0x0000000002b21af0: jmpq   0x0000000002b21d73  ;   {no_reloc}
  0x0000000002b21af5: add    %al,(%rax)
  0x0000000002b21af7: add    %al,(%rax)
  0x0000000002b21af9: add    %ah,0xf(%rsi)
  0x0000000002b21afc: (bad)  
  0x0000000002b21afd: add    %r8b,(%rax)
  0x0000000002b21b00: jmpq   0x0000000002b21d8d  ; implicit exception: dispatches to 0x0000000002b21d7d
  0x0000000002b21b05: nop
  0x0000000002b21b06: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x0000000002b21b0a: add    $0x30,%rsp
  0x0000000002b21b0e: pop    %rbp
  0x0000000002b21b0f: test   %eax,-0x2161a15(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b21b15: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x0000000002b21b16: xchg   %ax,%ax
  0x0000000002b21b18: jmpq   0x0000000002b21df4  ;   {no_reloc}
  0x0000000002b21b1d: add    %al,(%rax)
  0x0000000002b21b1f: add    %al,(%rax)
  0x0000000002b21b21: add    %ah,0xf(%rsi)
  0x0000000002b21b24: (bad)  
  0x0000000002b21b25: add    %r8b,(%rax)
  0x0000000002b21b28: jmpq   0x0000000002b21e0e  ; implicit exception: dispatches to 0x0000000002b21dfe
  0x0000000002b21b2d: nop
  0x0000000002b21b2e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x0000000002b21b32: add    $0x30,%rsp
  0x0000000002b21b36: pop    %rbp
  0x0000000002b21b37: test   %eax,-0x2161a3d(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b21b3d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x0000000002b21b3e: xchg   %ax,%ax
  0x0000000002b21b40: jmpq   0x0000000002b21e75  ;   {no_reloc}
  0x0000000002b21b45: add    %al,(%rax)
  0x0000000002b21b47: add    %al,(%rax)
  0x0000000002b21b49: add    %ah,0xf(%rsi)
  0x0000000002b21b4c: (bad)  
  0x0000000002b21b4d: add    %r8b,(%rax)
  0x0000000002b21b50: jmpq   0x0000000002b21e8f  ; implicit exception: dispatches to 0x0000000002b21e7f
  0x0000000002b21b55: nop
  0x0000000002b21b56: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x0000000002b21b5a: add    $0x30,%rsp
  0x0000000002b21b5e: pop    %rbp
  0x0000000002b21b5f: test   %eax,-0x2161a65(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b21b65: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x0000000002b21b66: movabs $0x76b48c4d8,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002b21b70: add    $0x30,%rsp
  0x0000000002b21b74: pop    %rbp
  0x0000000002b21b75: test   %eax,-0x2161a7b(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b21b7b: retq   
  0x0000000002b21b7c: mov    %rax,0x8(%rsp)
  0x0000000002b21b81: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b21b89: callq  0x0000000002b13560  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x0000000002b21b8e: jmpq   0x0000000002b219fe
  0x0000000002b21b93: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002b21b9d: push   %rax
  0x0000000002b21b9e: push   %rbx
  0x0000000002b21b9f: mov    0x48(%rax),%rbx
  0x0000000002b21ba3: push   %rdi
  0x0000000002b21ba4: push   %rsi
  0x0000000002b21ba5: push   %rdx
  0x0000000002b21ba6: push   %rcx
  0x0000000002b21ba7: push   %r8
  0x0000000002b21ba9: push   %r9
  0x0000000002b21bab: push   %r10
  0x0000000002b21bad: mov    %rsp,%r10
  0x0000000002b21bb0: and    $0xfffffffffffffff0,%rsp
  0x0000000002b21bb4: push   %r10
  0x0000000002b21bb6: push   %r11
  0x0000000002b21bb8: mov    $0x7,%ecx
  0x0000000002b21bbd: movabs $0x7ffbdd104c90,%r10  ;   {runtime_call}
  0x0000000002b21bc7: callq  *%r10
  0x0000000002b21bca: pop    %r11
  0x0000000002b21bcc: pop    %rsp
  0x0000000002b21bcd: pop    %r10
  0x0000000002b21bcf: pop    %r9
  0x0000000002b21bd1: pop    %r8
  0x0000000002b21bd3: pop    %rcx
  0x0000000002b21bd4: pop    %rdx
  0x0000000002b21bd5: pop    %rsi
  0x0000000002b21bd6: pop    %rdi
  0x0000000002b21bd7: cmp    0x118(%rbx),%rax
  0x0000000002b21bde: pop    %rbx
  0x0000000002b21bdf: pop    %rax
  0x0000000002b21be0: jne    0x0000000002b21bf0
  0x0000000002b21be6: jmpq   0x0000000002b21a82
  0x0000000002b21beb: mov    $0xa535d00,%eax
  0x0000000002b21bf0: callq  0x0000000002b109a0  ; OopMap{off=565}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002b21bf5: jmpq   0x0000000002b21a78
  0x0000000002b21bfa: callq  0x0000000002a80dc0  ; OopMap{rax=Oop off=575}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002b21bff: mov    0x0(%rax),%eax
  0x0000000002b21c05: mov    $0x6050b00,%eax
  0x0000000002b21c0a: callq  0x0000000002b0eb60  ; OopMap{rax=Oop off=591}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002b21c0f: jmpq   0x0000000002b21a88
  0x0000000002b21c14: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002b21c1e: push   %rax
  0x0000000002b21c1f: push   %rbx
  0x0000000002b21c20: mov    0x48(%rax),%rbx
  0x0000000002b21c24: push   %rdi
  0x0000000002b21c25: push   %rsi
  0x0000000002b21c26: push   %rdx
  0x0000000002b21c27: push   %rcx
  0x0000000002b21c28: push   %r8
  0x0000000002b21c2a: push   %r9
  0x0000000002b21c2c: push   %r10
  0x0000000002b21c2e: mov    %rsp,%r10
  0x0000000002b21c31: and    $0xfffffffffffffff0,%rsp
  0x0000000002b21c35: push   %r10
  0x0000000002b21c37: push   %r11
  0x0000000002b21c39: mov    $0x7,%ecx
  0x0000000002b21c3e: movabs $0x7ffbdd104c90,%r10  ;   {runtime_call}
  0x0000000002b21c48: callq  *%r10
  0x0000000002b21c4b: pop    %r11
  0x0000000002b21c4d: pop    %rsp
  0x0000000002b21c4e: pop    %r10
  0x0000000002b21c50: pop    %r9
  0x0000000002b21c52: pop    %r8
  0x0000000002b21c54: pop    %rcx
  0x0000000002b21c55: pop    %rdx
  0x0000000002b21c56: pop    %rsi
  0x0000000002b21c57: pop    %rdi
  0x0000000002b21c58: cmp    0x118(%rbx),%rax
  0x0000000002b21c5f: pop    %rbx
  0x0000000002b21c60: pop    %rax
  0x0000000002b21c61: jne    0x0000000002b21c71
  0x0000000002b21c67: jmpq   0x0000000002b21aaa
  0x0000000002b21c6c: mov    $0xa535d00,%eax
  0x0000000002b21c71: callq  0x0000000002b109a0  ; OopMap{off=694}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002b21c76: jmpq   0x0000000002b21aa0
  0x0000000002b21c7b: callq  0x0000000002a80dc0  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002b21c80: mov    0x0(%rax),%eax
  0x0000000002b21c86: mov    $0x6050b00,%eax
  0x0000000002b21c8b: callq  0x0000000002b0eb60  ; OopMap{rax=Oop off=720}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002b21c90: jmpq   0x0000000002b21ab0
  0x0000000002b21c95: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002b21c9f: push   %rax
  0x0000000002b21ca0: push   %rbx
  0x0000000002b21ca1: mov    0x48(%rax),%rbx
  0x0000000002b21ca5: push   %rdi
  0x0000000002b21ca6: push   %rsi
  0x0000000002b21ca7: push   %rdx
  0x0000000002b21ca8: push   %rcx
  0x0000000002b21ca9: push   %r8
  0x0000000002b21cab: push   %r9
  0x0000000002b21cad: push   %r10
  0x0000000002b21caf: mov    %rsp,%r10
  0x0000000002b21cb2: and    $0xfffffffffffffff0,%rsp
  0x0000000002b21cb6: push   %r10
  0x0000000002b21cb8: push   %r11
  0x0000000002b21cba: mov    $0x7,%ecx
  0x0000000002b21cbf: movabs $0x7ffbdd104c90,%r10  ;   {runtime_call}
  0x0000000002b21cc9: callq  *%r10
  0x0000000002b21ccc: pop    %r11
  0x0000000002b21cce: pop    %rsp
  0x0000000002b21ccf: pop    %r10
  0x0000000002b21cd1: pop    %r9
  0x0000000002b21cd3: pop    %r8
  0x0000000002b21cd5: pop    %rcx
  0x0000000002b21cd6: pop    %rdx
  0x0000000002b21cd7: pop    %rsi
  0x0000000002b21cd8: pop    %rdi
  0x0000000002b21cd9: cmp    0x118(%rbx),%rax
  0x0000000002b21ce0: pop    %rbx
  0x0000000002b21ce1: pop    %rax
  0x0000000002b21ce2: jne    0x0000000002b21cf2
  0x0000000002b21ce8: jmpq   0x0000000002b21ad2
  0x0000000002b21ced: mov    $0xa535d00,%eax
  0x0000000002b21cf2: callq  0x0000000002b109a0  ; OopMap{off=823}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002b21cf7: jmpq   0x0000000002b21ac8
  0x0000000002b21cfc: callq  0x0000000002a80dc0  ; OopMap{rax=Oop off=833}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002b21d01: mov    0x0(%rax),%eax
  0x0000000002b21d07: mov    $0x6050b00,%eax
  0x0000000002b21d0c: callq  0x0000000002b0eb60  ; OopMap{rax=Oop off=849}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002b21d11: jmpq   0x0000000002b21ad8
  0x0000000002b21d16: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002b21d20: push   %rax
  0x0000000002b21d21: push   %rbx
  0x0000000002b21d22: mov    0x48(%rax),%rbx
  0x0000000002b21d26: push   %rdi
  0x0000000002b21d27: push   %rsi
  0x0000000002b21d28: push   %rdx
  0x0000000002b21d29: push   %rcx
  0x0000000002b21d2a: push   %r8
  0x0000000002b21d2c: push   %r9
  0x0000000002b21d2e: push   %r10
  0x0000000002b21d30: mov    %rsp,%r10
  0x0000000002b21d33: and    $0xfffffffffffffff0,%rsp
  0x0000000002b21d37: push   %r10
  0x0000000002b21d39: push   %r11
  0x0000000002b21d3b: mov    $0x7,%ecx
  0x0000000002b21d40: movabs $0x7ffbdd104c90,%r10  ;   {runtime_call}
  0x0000000002b21d4a: callq  *%r10
  0x0000000002b21d4d: pop    %r11
  0x0000000002b21d4f: pop    %rsp
  0x0000000002b21d50: pop    %r10
  0x0000000002b21d52: pop    %r9
  0x0000000002b21d54: pop    %r8
  0x0000000002b21d56: pop    %rcx
  0x0000000002b21d57: pop    %rdx
  0x0000000002b21d58: pop    %rsi
  0x0000000002b21d59: pop    %rdi
  0x0000000002b21d5a: cmp    0x118(%rbx),%rax
  0x0000000002b21d61: pop    %rbx
  0x0000000002b21d62: pop    %rax
  0x0000000002b21d63: jne    0x0000000002b21d73
  0x0000000002b21d69: jmpq   0x0000000002b21afa
  0x0000000002b21d6e: mov    $0xa535d00,%eax
  0x0000000002b21d73: callq  0x0000000002b109a0  ; OopMap{off=952}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002b21d78: jmpq   0x0000000002b21af0
  0x0000000002b21d7d: callq  0x0000000002a80dc0  ; OopMap{rax=Oop off=962}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002b21d82: mov    0x0(%rax),%eax
  0x0000000002b21d88: mov    $0x6050b00,%eax
  0x0000000002b21d8d: callq  0x0000000002b0eb60  ; OopMap{rax=Oop off=978}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002b21d92: jmpq   0x0000000002b21b00
  0x0000000002b21d97: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002b21da1: push   %rax
  0x0000000002b21da2: push   %rbx
  0x0000000002b21da3: mov    0x48(%rax),%rbx
  0x0000000002b21da7: push   %rdi
  0x0000000002b21da8: push   %rsi
  0x0000000002b21da9: push   %rdx
  0x0000000002b21daa: push   %rcx
  0x0000000002b21dab: push   %r8
  0x0000000002b21dad: push   %r9
  0x0000000002b21daf: push   %r10
  0x0000000002b21db1: mov    %rsp,%r10
  0x0000000002b21db4: and    $0xfffffffffffffff0,%rsp
  0x0000000002b21db8: push   %r10
  0x0000000002b21dba: push   %r11
  0x0000000002b21dbc: mov    $0x7,%ecx
  0x0000000002b21dc1: movabs $0x7ffbdd104c90,%r10  ;   {runtime_call}
  0x0000000002b21dcb: callq  *%r10
  0x0000000002b21dce: pop    %r11
  0x0000000002b21dd0: pop    %rsp
  0x0000000002b21dd1: pop    %r10
  0x0000000002b21dd3: pop    %r9
  0x0000000002b21dd5: pop    %r8
  0x0000000002b21dd7: pop    %rcx
  0x0000000002b21dd8: pop    %rdx
  0x0000000002b21dd9: pop    %rsi
  0x0000000002b21dda: pop    %rdi
  0x0000000002b21ddb: cmp    0x118(%rbx),%rax
  0x0000000002b21de2: pop    %rbx
  0x0000000002b21de3: pop    %rax
  0x0000000002b21de4: jne    0x0000000002b21df4
  0x0000000002b21dea: jmpq   0x0000000002b21b22
  0x0000000002b21def: mov    $0xa535d00,%eax
  0x0000000002b21df4: callq  0x0000000002b109a0  ; OopMap{off=1081}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002b21df9: jmpq   0x0000000002b21b18
  0x0000000002b21dfe: callq  0x0000000002a80dc0  ; OopMap{rax=Oop off=1091}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002b21e03: mov    0x0(%rax),%eax
  0x0000000002b21e09: mov    $0x6050b00,%eax
  0x0000000002b21e0e: callq  0x0000000002b0eb60  ; OopMap{rax=Oop off=1107}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002b21e13: jmpq   0x0000000002b21b28
  0x0000000002b21e18: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002b21e22: push   %rax
  0x0000000002b21e23: push   %rbx
  0x0000000002b21e24: mov    0x48(%rax),%rbx
  0x0000000002b21e28: push   %rdi
  0x0000000002b21e29: push   %rsi
  0x0000000002b21e2a: push   %rdx
  0x0000000002b21e2b: push   %rcx
  0x0000000002b21e2c: push   %r8
  0x0000000002b21e2e: push   %r9
  0x0000000002b21e30: push   %r10
  0x0000000002b21e32: mov    %rsp,%r10
  0x0000000002b21e35: and    $0xfffffffffffffff0,%rsp
  0x0000000002b21e39: push   %r10
  0x0000000002b21e3b: push   %r11
  0x0000000002b21e3d: mov    $0x7,%ecx
  0x0000000002b21e42: movabs $0x7ffbdd104c90,%r10  ;   {runtime_call}
  0x0000000002b21e4c: callq  *%r10
  0x0000000002b21e4f: pop    %r11
  0x0000000002b21e51: pop    %rsp
  0x0000000002b21e52: pop    %r10
  0x0000000002b21e54: pop    %r9
  0x0000000002b21e56: pop    %r8
  0x0000000002b21e58: pop    %rcx
  0x0000000002b21e59: pop    %rdx
  0x0000000002b21e5a: pop    %rsi
  0x0000000002b21e5b: pop    %rdi
  0x0000000002b21e5c: cmp    0x118(%rbx),%rax
  0x0000000002b21e63: pop    %rbx
  0x0000000002b21e64: pop    %rax
  0x0000000002b21e65: jne    0x0000000002b21e75
  0x0000000002b21e6b: jmpq   0x0000000002b21b4a
  0x0000000002b21e70: mov    $0xa535d00,%eax
  0x0000000002b21e75: callq  0x0000000002b109a0  ; OopMap{off=1210}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002b21e7a: jmpq   0x0000000002b21b40
  0x0000000002b21e7f: callq  0x0000000002a80dc0  ; OopMap{rax=Oop off=1220}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002b21e84: mov    0x0(%rax),%eax
  0x0000000002b21e8a: mov    $0x6050b00,%eax
  0x0000000002b21e8f: callq  0x0000000002b0eb60  ; OopMap{rax=Oop off=1236}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002b21e94: jmpq   0x0000000002b21b50
  0x0000000002b21e99: nop
  0x0000000002b21e9a: nop
  0x0000000002b21e9b: mov    0x2a8(%r15),%rax
  0x0000000002b21ea2: movabs $0x0,%r10
  0x0000000002b21eac: mov    %r10,0x2a8(%r15)
  0x0000000002b21eb3: movabs $0x0,%r10
  0x0000000002b21ebd: mov    %r10,0x2b0(%r15)
  0x0000000002b21ec4: add    $0x30,%rsp
  0x0000000002b21ec8: pop    %rbp
  0x0000000002b21ec9: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b21ece: hlt    
  0x0000000002b21ecf: hlt    
  0x0000000002b21ed0: hlt    
  0x0000000002b21ed1: hlt    
  0x0000000002b21ed2: hlt    
  0x0000000002b21ed3: hlt    
  0x0000000002b21ed4: hlt    
  0x0000000002b21ed5: hlt    
  0x0000000002b21ed6: hlt    
  0x0000000002b21ed7: hlt    
  0x0000000002b21ed8: hlt    
  0x0000000002b21ed9: hlt    
  0x0000000002b21eda: hlt    
  0x0000000002b21edb: hlt    
  0x0000000002b21edc: hlt    
  0x0000000002b21edd: hlt    
  0x0000000002b21ede: hlt    
  0x0000000002b21edf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b21ee0: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b21ee5: mov    %rsp,-0x28(%rsp)
  0x0000000002b21eea: sub    $0x80,%rsp
  0x0000000002b21ef1: mov    %rax,0x78(%rsp)
  0x0000000002b21ef6: mov    %rcx,0x70(%rsp)
  0x0000000002b21efb: mov    %rdx,0x68(%rsp)
  0x0000000002b21f00: mov    %rbx,0x60(%rsp)
  0x0000000002b21f05: mov    %rbp,0x50(%rsp)
  0x0000000002b21f0a: mov    %rsi,0x48(%rsp)
  0x0000000002b21f0f: mov    %rdi,0x40(%rsp)
  0x0000000002b21f14: mov    %r8,0x38(%rsp)
  0x0000000002b21f19: mov    %r9,0x30(%rsp)
  0x0000000002b21f1e: mov    %r10,0x28(%rsp)
  0x0000000002b21f23: mov    %r11,0x20(%rsp)
  0x0000000002b21f28: mov    %r12,0x18(%rsp)
  0x0000000002b21f2d: mov    %r13,0x10(%rsp)
  0x0000000002b21f32: mov    %r14,0x8(%rsp)
  0x0000000002b21f37: mov    %r15,(%rsp)
  0x0000000002b21f3b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b21f45: movabs $0x2b21ee5,%rdx    ;   {internal_word}
  0x0000000002b21f4f: mov    %rsp,%r8
  0x0000000002b21f52: and    $0xfffffffffffffff0,%rsp
  0x0000000002b21f56: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b21f5b: hlt    
[Deopt Handler Code]
  0x0000000002b21f5c: movabs $0x2b21f5c,%r10    ;   {section_word}
  0x0000000002b21f66: push   %r10
  0x0000000002b21f68: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b21f6d: hlt    
  0x0000000002b21f6e: hlt    
  0x0000000002b21f6f: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x0000000002b219c0' size='2680' address='0x0000000002b21810' relocation_offset='288' insts_offset='432' stub_offset='1744' scopes_data_offset='1896' scopes_pcs_offset='2040' dependencies_offset='2616' nul_chk_table_offset='2624' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='4036' iicount='4036' stamp='0.440'/>
<writer thread='26472'/>
<task_queued compile_id='19' method='java/lang/Character toUpperCase (C)C' bytes='6' count='384' iicount='384' level='3' stamp='0.440' comment='tiered' hot_count='384'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b21350:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b7260d8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b214c0: mov    %eax,-0x6000(%rsp)
  0x0000000002b214c7: push   %rbp
  0x0000000002b214c8: sub    $0x30,%rsp
  0x0000000002b214cc: movabs $0x1b9075d0,%rsi   ;   {metadata(method data for {method} {0x000000001b7260d8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002b214d6: mov    0xdc(%rsi),%edi
  0x0000000002b214dc: add    $0x8,%edi
  0x0000000002b214df: mov    %edi,0xdc(%rsi)
  0x0000000002b214e5: movabs $0x1b7260d0,%rsi   ;   {metadata({method} {0x000000001b7260d8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002b214ef: and    $0x1ff8,%edi
  0x0000000002b214f5: cmp    $0x0,%edi
  0x0000000002b214f8: je     0x0000000002b2160c  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 338)

  0x0000000002b214fe: cmp    $0x0,%rdx
  0x0000000002b21502: movabs $0x1b9075d0,%rsi   ;   {metadata(method data for {method} {0x000000001b7260d8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002b2150c: movabs $0x108,%rdi
  0x0000000002b21516: jne    0x0000000002b21526
  0x0000000002b2151c: movabs $0x118,%rdi
  0x0000000002b21526: mov    (%rsi,%rdi,1),%rbx
  0x0000000002b2152a: lea    0x1(%rbx),%rbx
  0x0000000002b2152e: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002b21532: jne    0x0000000002b21552  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)

  0x0000000002b21538: movabs $0x1b9075d0,%rdx   ;   {metadata(method data for {method} {0x000000001b7260d8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002b21542: incl   0x128(%rdx)
  0x0000000002b21548: mov    $0x0,%esi
  0x0000000002b2154d: jmpq   0x0000000002b215fd  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)

  0x0000000002b21552: cmp    (%rdx),%rax        ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; implicit exception: dispatches to 0x0000000002b21623
  0x0000000002b21555: mov    %rdx,%rsi
  0x0000000002b21558: movabs $0x1b9075d0,%rdi   ;   {metadata(method data for {method} {0x000000001b7260d8} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002b21562: mov    0x8(%rsi),%esi
  0x0000000002b21565: shl    $0x3,%rsi
  0x0000000002b21569: cmp    0x148(%rdi),%rsi
  0x0000000002b21570: jne    0x0000000002b2157f
  0x0000000002b21572: addq   $0x1,0x150(%rdi)
  0x0000000002b2157a: jmpq   0x0000000002b215e5
  0x0000000002b2157f: cmp    0x158(%rdi),%rsi
  0x0000000002b21586: jne    0x0000000002b21595
  0x0000000002b21588: addq   $0x1,0x160(%rdi)
  0x0000000002b21590: jmpq   0x0000000002b215e5
  0x0000000002b21595: cmpq   $0x0,0x148(%rdi)
  0x0000000002b215a0: jne    0x0000000002b215b9
  0x0000000002b215a2: mov    %rsi,0x148(%rdi)
  0x0000000002b215a9: movq   $0x1,0x150(%rdi)
  0x0000000002b215b4: jmpq   0x0000000002b215e5
  0x0000000002b215b9: cmpq   $0x0,0x158(%rdi)
  0x0000000002b215c4: jne    0x0000000002b215dd
  0x0000000002b215c6: mov    %rsi,0x158(%rdi)
  0x0000000002b215cd: movq   $0x1,0x160(%rdi)
  0x0000000002b215d8: jmpq   0x0000000002b215e5
  0x0000000002b215dd: addq   $0x1,0x140(%rdi)
  0x0000000002b215e5: movabs $0xffffffffffffffff,%rax
  0x0000000002b215ef: callq  0x0000000002a563e0  ; OopMap{off=308}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {virtual_call}
  0x0000000002b215f4: mov    %rax,%rsi
  0x0000000002b215f7: shr    $0x10,%esi
  0x0000000002b215fa: xor    %rax,%rsi
  0x0000000002b215fd: mov    %rsi,%rax
  0x0000000002b21600: add    $0x30,%rsp
  0x0000000002b21604: pop    %rbp
  0x0000000002b21605: test   %eax,-0x216150b(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b2160b: retq   
  0x0000000002b2160c: mov    %rsi,0x8(%rsp)
  0x0000000002b21611: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b21619: callq  0x0000000002b13560  ; OopMap{rdx=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ;   {runtime_call}
  0x0000000002b2161e: jmpq   0x0000000002b214fe
  0x0000000002b21623: callq  0x0000000002a80dc0  ; OopMap{rdx=Oop off=360}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {runtime_call}
  0x0000000002b21628: nop
  0x0000000002b21629: nop
  0x0000000002b2162a: mov    0x2a8(%r15),%rax
  0x0000000002b21631: movabs $0x0,%r10
  0x0000000002b2163b: mov    %r10,0x2a8(%r15)
  0x0000000002b21642: movabs $0x0,%r10
  0x0000000002b2164c: mov    %r10,0x2b0(%r15)
  0x0000000002b21653: add    $0x30,%rsp
  0x0000000002b21657: pop    %rbp
  0x0000000002b21658: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b2165d: hlt    
  0x0000000002b2165e: hlt    
  0x0000000002b2165f: hlt    
[Stub Code]
  0x0000000002b21660: nop                       ;   {no_reloc}
  0x0000000002b21661: nop
  0x0000000002b21662: nop
  0x0000000002b21663: nop
  0x0000000002b21664: nop
  0x0000000002b21665: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b2166f: jmpq   0x0000000002b2166f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b21674: callq  0x0000000002a7f5a0  ;   {runtime_call}
  0x0000000002b21679: mov    %rsp,-0x28(%rsp)
  0x0000000002b2167e: sub    $0x80,%rsp
  0x0000000002b21685: mov    %rax,0x78(%rsp)
  0x0000000002b2168a: mov    %rcx,0x70(%rsp)
  0x0000000002b2168f: mov    %rdx,0x68(%rsp)
  0x0000000002b21694: mov    %rbx,0x60(%rsp)
  0x0000000002b21699: mov    %rbp,0x50(%rsp)
  0x0000000002b2169e: mov    %rsi,0x48(%rsp)
  0x0000000002b216a3: mov    %rdi,0x40(%rsp)
  0x0000000002b216a8: mov    %r8,0x38(%rsp)
  0x0000000002b216ad: mov    %r9,0x30(%rsp)
  0x0000000002b216b2: mov    %r10,0x28(%rsp)
  0x0000000002b216b7: mov    %r11,0x20(%rsp)
  0x0000000002b216bc: mov    %r12,0x18(%rsp)
  0x0000000002b216c1: mov    %r13,0x10(%rsp)
  0x0000000002b216c6: mov    %r14,0x8(%rsp)
  0x0000000002b216cb: mov    %r15,(%rsp)
  0x0000000002b216cf: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b216d9: movabs $0x2b21679,%rdx    ;   {internal_word}
  0x0000000002b216e3: mov    %rsp,%r8
  0x0000000002b216e6: and    $0xfffffffffffffff0,%rsp
  0x0000000002b216ea: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b216ef: hlt    
[Deopt Handler Code]
  0x0000000002b216f0: movabs $0x2b216f0,%r10    ;   {section_word}
  0x0000000002b216fa: push   %r10
  0x0000000002b216fc: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b21701: hlt    
  0x0000000002b21702: hlt    
  0x0000000002b21703: hlt    
  0x0000000002b21704: hlt    
  0x0000000002b21705: hlt    
  0x0000000002b21706: hlt    
  0x0000000002b21707: hlt    
<nmethod compile_id='13' compiler='C1' level='3' entry='0x0000000002b214c0' size='1176' address='0x0000000002b21350' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='960' scopes_pcs_offset='1008' dependencies_offset='1152' nul_chk_table_offset='1160' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='443' iicount='443' stamp='0.447'/>
<writer thread='26472'/>
<task_queued compile_id='20' method='java/lang/Character toUpperCase (I)I' bytes='9' count='384' iicount='384' level='3' stamp='0.447' comment='tiered' hot_count='384'/>
<task_queued compile_id='21' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='384' iicount='384' level='3' stamp='0.447' comment='tiered' hot_count='384'/>
<task_queued compile_id='22' method='java/util/TreeMap leftOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='1792' iicount='1792' level='3' stamp='0.447' comment='tiered' hot_count='1792'/>
<task_queued compile_id='23' method='java/util/TreeMap setColor (Ljava/util/TreeMap$Entry;Z)V' bytes='10' count='2432' iicount='2432' level='3' stamp='0.447' comment='tiered' hot_count='2432'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b23a10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b6da248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002b23b80: mov    %eax,-0x6000(%rsp)
  0x0000000002b23b87: push   %rbp
  0x0000000002b23b88: sub    $0x30,%rsp
  0x0000000002b23b8c: movabs $0x1b909ac8,%rsi   ;   {metadata(method data for {method} {0x000000001b6da248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002b23b96: mov    0xdc(%rsi),%edi
  0x0000000002b23b9c: add    $0x8,%edi
  0x0000000002b23b9f: mov    %edi,0xdc(%rsi)
  0x0000000002b23ba5: movabs $0x1b6da240,%rsi   ;   {metadata({method} {0x000000001b6da248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002b23baf: and    $0x1ff8,%edi
  0x0000000002b23bb5: cmp    $0x0,%edi
  0x0000000002b23bb8: je     0x0000000002b23ca0  ;*iload_0
                                                ; - java.lang.Character::toUpperCase@0 (line 6398)

  0x0000000002b23bbe: movabs $0x1b909ac8,%rsi   ;   {metadata(method data for {method} {0x000000001b6da248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002b23bc8: addq   $0x1,0x108(%rsi)
  0x0000000002b23bd0: mov    %rdx,%rsi
  0x0000000002b23bd3: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)

  0x0000000002b23bd6: mov    %esi,0x20(%rsp)
  0x0000000002b23bda: nop
  0x0000000002b23bdb: nop
  0x0000000002b23bdc: nop
  0x0000000002b23bdd: nop
  0x0000000002b23bde: nop
  0x0000000002b23bdf: callq  0x0000000002a56620  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ;   {static_call}
  0x0000000002b23be4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002b23cb7
  0x0000000002b23be7: mov    %rax,%r8
  0x0000000002b23bea: movabs $0x1b909ac8,%rdx   ;   {metadata(method data for {method} {0x000000001b6da248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002b23bf4: mov    0x8(%r8),%r8d
  0x0000000002b23bf8: shl    $0x3,%r8
  0x0000000002b23bfc: cmp    0x120(%rdx),%r8
  0x0000000002b23c03: jne    0x0000000002b23c12
  0x0000000002b23c05: addq   $0x1,0x128(%rdx)
  0x0000000002b23c0d: jmpq   0x0000000002b23c78
  0x0000000002b23c12: cmp    0x130(%rdx),%r8
  0x0000000002b23c19: jne    0x0000000002b23c28
  0x0000000002b23c1b: addq   $0x1,0x138(%rdx)
  0x0000000002b23c23: jmpq   0x0000000002b23c78
  0x0000000002b23c28: cmpq   $0x0,0x120(%rdx)
  0x0000000002b23c33: jne    0x0000000002b23c4c
  0x0000000002b23c35: mov    %r8,0x120(%rdx)
  0x0000000002b23c3c: movq   $0x1,0x128(%rdx)
  0x0000000002b23c47: jmpq   0x0000000002b23c78
  0x0000000002b23c4c: cmpq   $0x0,0x130(%rdx)
  0x0000000002b23c57: jne    0x0000000002b23c70
  0x0000000002b23c59: mov    %r8,0x130(%rdx)
  0x0000000002b23c60: movq   $0x1,0x138(%rdx)
  0x0000000002b23c6b: jmpq   0x0000000002b23c78
  0x0000000002b23c70: addq   $0x1,0x118(%rdx)
  0x0000000002b23c78: mov    0x20(%rsp),%r8d
  0x0000000002b23c7d: mov    %rax,%rdx          ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)

  0x0000000002b23c80: nop
  0x0000000002b23c81: nop
  0x0000000002b23c82: nop
  0x0000000002b23c83: nop
  0x0000000002b23c84: nop
  0x0000000002b23c85: movabs $0xffffffffffffffff,%rax
  0x0000000002b23c8f: callq  0x0000000002a563e0  ; OopMap{off=276}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ;   {virtual_call}
  0x0000000002b23c94: add    $0x30,%rsp
  0x0000000002b23c98: pop    %rbp
  0x0000000002b23c99: test   %eax,-0x2163b9f(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b23c9f: retq   
  0x0000000002b23ca0: mov    %rsi,0x8(%rsp)
  0x0000000002b23ca5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b23cad: callq  0x0000000002b13560  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6398)
                                                ;   {runtime_call}
  0x0000000002b23cb2: jmpq   0x0000000002b23bbe
  0x0000000002b23cb7: callq  0x0000000002a80dc0  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ;   {runtime_call}
  0x0000000002b23cbc: nop
  0x0000000002b23cbd: nop
  0x0000000002b23cbe: mov    0x2a8(%r15),%rax
  0x0000000002b23cc5: movabs $0x0,%r10
  0x0000000002b23ccf: mov    %r10,0x2a8(%r15)
  0x0000000002b23cd6: movabs $0x0,%r10
  0x0000000002b23ce0: mov    %r10,0x2b0(%r15)
  0x0000000002b23ce7: add    $0x30,%rsp
  0x0000000002b23ceb: pop    %rbp
  0x0000000002b23cec: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b23cf1: hlt    
  0x0000000002b23cf2: hlt    
  0x0000000002b23cf3: hlt    
  0x0000000002b23cf4: hlt    
  0x0000000002b23cf5: hlt    
  0x0000000002b23cf6: hlt    
  0x0000000002b23cf7: hlt    
  0x0000000002b23cf8: hlt    
  0x0000000002b23cf9: hlt    
  0x0000000002b23cfa: hlt    
  0x0000000002b23cfb: hlt    
  0x0000000002b23cfc: hlt    
  0x0000000002b23cfd: hlt    
  0x0000000002b23cfe: hlt    
  0x0000000002b23cff: hlt    
[Stub Code]
  0x0000000002b23d00: nop                       ;   {no_reloc}
  0x0000000002b23d01: nop
  0x0000000002b23d02: nop
  0x0000000002b23d03: nop
  0x0000000002b23d04: nop
  0x0000000002b23d05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b23d0f: jmpq   0x0000000002b23d0f  ;   {runtime_call}
  0x0000000002b23d14: nop
  0x0000000002b23d15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b23d1f: jmpq   0x0000000002b23d1f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b23d24: callq  0x0000000002a7f5a0  ;   {runtime_call}
  0x0000000002b23d29: mov    %rsp,-0x28(%rsp)
  0x0000000002b23d2e: sub    $0x80,%rsp
  0x0000000002b23d35: mov    %rax,0x78(%rsp)
  0x0000000002b23d3a: mov    %rcx,0x70(%rsp)
  0x0000000002b23d3f: mov    %rdx,0x68(%rsp)
  0x0000000002b23d44: mov    %rbx,0x60(%rsp)
  0x0000000002b23d49: mov    %rbp,0x50(%rsp)
  0x0000000002b23d4e: mov    %rsi,0x48(%rsp)
  0x0000000002b23d53: mov    %rdi,0x40(%rsp)
  0x0000000002b23d58: mov    %r8,0x38(%rsp)
  0x0000000002b23d5d: mov    %r9,0x30(%rsp)
  0x0000000002b23d62: mov    %r10,0x28(%rsp)
  0x0000000002b23d67: mov    %r11,0x20(%rsp)
  0x0000000002b23d6c: mov    %r12,0x18(%rsp)
  0x0000000002b23d71: mov    %r13,0x10(%rsp)
  0x0000000002b23d76: mov    %r14,0x8(%rsp)
  0x0000000002b23d7b: mov    %r15,(%rsp)
  0x0000000002b23d7f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b23d89: movabs $0x2b23d29,%rdx    ;   {internal_word}
  0x0000000002b23d93: mov    %rsp,%r8
  0x0000000002b23d96: and    $0xfffffffffffffff0,%rsp
  0x0000000002b23d9a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b23d9f: hlt    
[Deopt Handler Code]
  0x0000000002b23da0: movabs $0x2b23da0,%r10    ;   {section_word}
  0x0000000002b23daa: push   %r10
  0x0000000002b23dac: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b23db1: hlt    
  0x0000000002b23db2: hlt    
  0x0000000002b23db3: hlt    
  0x0000000002b23db4: hlt    
  0x0000000002b23db5: hlt    
  0x0000000002b23db6: hlt    
  0x0000000002b23db7: hlt    
<nmethod compile_id='20' compiler='C1' level='3' entry='0x0000000002b23b80' size='1160' address='0x0000000002b23a10' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toUpperCase (I)I' bytes='9' count='688' iicount='688' stamp='0.454'/>
<writer thread='26472'/>
<task_queued compile_id='24' method='java/util/TreeMap rightOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='640' iicount='640' level='3' stamp='0.454' comment='tiered' hot_count='640'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b24850:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b812668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002b249c0: mov    0x8(%rdx),%r10d
  0x0000000002b249c4: shl    $0x3,%r10
  0x0000000002b249c8: cmp    %rax,%r10
  0x0000000002b249cb: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b249d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b249dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b249e0: mov    %eax,-0x6000(%rsp)
  0x0000000002b249e7: push   %rbp
  0x0000000002b249e8: sub    $0x40,%rsp
  0x0000000002b249ec: movabs $0x1b909da8,%rax   ;   {metadata(method data for {method} {0x000000001b812668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002b249f6: mov    0xdc(%rax),%esi
  0x0000000002b249fc: add    $0x8,%esi
  0x0000000002b249ff: mov    %esi,0xdc(%rax)
  0x0000000002b24a05: movabs $0x1b812660,%rax   ;   {metadata({method} {0x000000001b812668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002b24a0f: and    $0x1ff8,%esi
  0x0000000002b24a15: cmp    $0x0,%esi
  0x0000000002b24a18: je     0x0000000002b24b7c  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@0 (line 145)

  0x0000000002b24a1e: movabs $0x1b909da8,%rax   ;   {metadata(method data for {method} {0x000000001b812668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002b24a28: addq   $0x1,0x118(%rax)
  0x0000000002b24a30: movabs $0x1b813708,%rax   ;   {metadata(method data for {method} {0x000000001b811dc8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002b24a3a: mov    0xdc(%rax),%esi
  0x0000000002b24a40: add    $0x8,%esi
  0x0000000002b24a43: mov    %esi,0xdc(%rax)
  0x0000000002b24a49: movabs $0x1b811dc0,%rax   ;   {metadata({method} {0x000000001b811dc8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002b24a53: and    $0x7ffff8,%esi
  0x0000000002b24a59: cmp    $0x0,%esi
  0x0000000002b24a5c: je     0x0000000002b24b93
  0x0000000002b24a62: mov    %r8,%rax
  0x0000000002b24a65: and    $0xffff,%eax
  0x0000000002b24a6b: movabs $0x76b48c4e8,%rsi  ;   {oop([I)}
  0x0000000002b24a75: movslq %eax,%rdi
  0x0000000002b24a78: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x0000000002b24baa
  0x0000000002b24a7b: jae    0x0000000002b24bb4
  0x0000000002b24a81: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)

  0x0000000002b24a85: mov    %rax,%rsi
  0x0000000002b24a88: and    $0x10000,%esi
  0x0000000002b24a8e: cmp    $0x0,%esi
  0x0000000002b24a91: movabs $0x1b909da8,%rsi   ;   {metadata(method data for {method} {0x000000001b812668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002b24a9b: movabs $0x138,%rdi
  0x0000000002b24aa5: je     0x0000000002b24ab5
  0x0000000002b24aab: movabs $0x148,%rdi
  0x0000000002b24ab5: mov    (%rsi,%rdi,1),%rbx
  0x0000000002b24ab9: lea    0x1(%rbx),%rbx
  0x0000000002b24abd: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002b24ac1: je     0x0000000002b24b6d  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@12 (line 148)

  0x0000000002b24ac7: mov    %rax,%rsi
  0x0000000002b24aca: and    $0x7fc0000,%esi
  0x0000000002b24ad0: cmp    $0x7fc0000,%esi
  0x0000000002b24ad6: movabs $0x1b909da8,%rsi   ;   {metadata(method data for {method} {0x000000001b812668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002b24ae0: movabs $0x158,%rdi
  0x0000000002b24aea: je     0x0000000002b24afa
  0x0000000002b24af0: movabs $0x168,%rdi
  0x0000000002b24afa: mov    (%rsi,%rdi,1),%rbx
  0x0000000002b24afe: lea    0x1(%rbx),%rbx
  0x0000000002b24b02: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002b24b06: jne    0x0000000002b24b54  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@21 (line 149)

  0x0000000002b24b0c: cmp    $0xb5,%r8d
  0x0000000002b24b13: movabs $0x1b909da8,%rax   ;   {metadata(method data for {method} {0x000000001b812668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002b24b1d: movabs $0x190,%rsi
  0x0000000002b24b27: jne    0x0000000002b24b37
  0x0000000002b24b2d: movabs $0x1a0,%rsi
  0x0000000002b24b37: mov    (%rax,%rsi,1),%rdi
  0x0000000002b24b3b: lea    0x1(%rdi),%rdi
  0x0000000002b24b3f: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b24b43: jne    0x0000000002b24b6d  ;*if_icmpne
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@44 (line 152)

  0x0000000002b24b49: mov    $0x39c,%r8d
  0x0000000002b24b4f: jmpq   0x0000000002b24b6d  ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@51 (line 156)

  0x0000000002b24b54: shl    $0x5,%eax
  0x0000000002b24b57: sar    $0x17,%eax
  0x0000000002b24b5a: sub    %eax,%r8d
  0x0000000002b24b5d: movabs $0x1b909da8,%rax   ;   {metadata(method data for {method} {0x000000001b812668} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002b24b67: incl   0x178(%rax)        ;*goto
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@37 (line 152)

  0x0000000002b24b6d: mov    %r8,%rax
  0x0000000002b24b70: add    $0x40,%rsp
  0x0000000002b24b74: pop    %rbp
  0x0000000002b24b75: test   %eax,-0x2164a7b(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b24b7b: retq   
  0x0000000002b24b7c: mov    %rax,0x8(%rsp)
  0x0000000002b24b81: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b24b89: callq  0x0000000002b13560  ; OopMap{rdx=Oop off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@-1 (line 145)
                                                ;   {runtime_call}
  0x0000000002b24b8e: jmpq   0x0000000002b24a1e
  0x0000000002b24b93: mov    %rax,0x8(%rsp)
  0x0000000002b24b98: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b24ba0: callq  0x0000000002b13560  ; OopMap{off=485}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002b24ba5: jmpq   0x0000000002b24a62
  0x0000000002b24baa: callq  0x0000000002a80dc0  ; OopMap{rsi=Oop off=495}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002b24baf: callq  0x0000000002a80dc0  ; OopMap{rsi=Oop off=500}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002b24bb4: mov    %rax,(%rsp)
  0x0000000002b24bb8: callq  0x0000000002a81480  ; OopMap{rsi=Oop off=509}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002b24bbd: nop
  0x0000000002b24bbe: nop
  0x0000000002b24bbf: mov    0x2a8(%r15),%rax
  0x0000000002b24bc6: movabs $0x0,%r10
  0x0000000002b24bd0: mov    %r10,0x2a8(%r15)
  0x0000000002b24bd7: movabs $0x0,%r10
  0x0000000002b24be1: mov    %r10,0x2b0(%r15)
  0x0000000002b24be8: add    $0x40,%rsp
  0x0000000002b24bec: pop    %rbp
  0x0000000002b24bed: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b24bf2: hlt    
  0x0000000002b24bf3: hlt    
  0x0000000002b24bf4: hlt    
  0x0000000002b24bf5: hlt    
  0x0000000002b24bf6: hlt    
  0x0000000002b24bf7: hlt    
  0x0000000002b24bf8: hlt    
  0x0000000002b24bf9: hlt    
  0x0000000002b24bfa: hlt    
  0x0000000002b24bfb: hlt    
  0x0000000002b24bfc: hlt    
  0x0000000002b24bfd: hlt    
  0x0000000002b24bfe: hlt    
  0x0000000002b24bff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b24c00: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b24c05: mov    %rsp,-0x28(%rsp)
  0x0000000002b24c0a: sub    $0x80,%rsp
  0x0000000002b24c11: mov    %rax,0x78(%rsp)
  0x0000000002b24c16: mov    %rcx,0x70(%rsp)
  0x0000000002b24c1b: mov    %rdx,0x68(%rsp)
  0x0000000002b24c20: mov    %rbx,0x60(%rsp)
  0x0000000002b24c25: mov    %rbp,0x50(%rsp)
  0x0000000002b24c2a: mov    %rsi,0x48(%rsp)
  0x0000000002b24c2f: mov    %rdi,0x40(%rsp)
  0x0000000002b24c34: mov    %r8,0x38(%rsp)
  0x0000000002b24c39: mov    %r9,0x30(%rsp)
  0x0000000002b24c3e: mov    %r10,0x28(%rsp)
  0x0000000002b24c43: mov    %r11,0x20(%rsp)
  0x0000000002b24c48: mov    %r12,0x18(%rsp)
  0x0000000002b24c4d: mov    %r13,0x10(%rsp)
  0x0000000002b24c52: mov    %r14,0x8(%rsp)
  0x0000000002b24c57: mov    %r15,(%rsp)
  0x0000000002b24c5b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b24c65: movabs $0x2b24c05,%rdx    ;   {internal_word}
  0x0000000002b24c6f: mov    %rsp,%r8
  0x0000000002b24c72: and    $0xfffffffffffffff0,%rsp
  0x0000000002b24c76: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b24c7b: hlt    
[Deopt Handler Code]
  0x0000000002b24c7c: movabs $0x2b24c7c,%r10    ;   {section_word}
  0x0000000002b24c86: push   %r10
  0x0000000002b24c88: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b24c8d: hlt    
  0x0000000002b24c8e: hlt    
  0x0000000002b24c8f: hlt    
<nmethod compile_id='21' compiler='C1' level='3' entry='0x0000000002b249c0' size='1488' address='0x0000000002b24850' relocation_offset='288' insts_offset='368' stub_offset='944' scopes_data_offset='1112' scopes_pcs_offset='1232' dependencies_offset='1456' nul_chk_table_offset='1464' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='746' iicount='746' stamp='0.462'/>
Decoding compiled method 0x0000000002b24e50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b76cdd8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b24fa0: mov    %eax,-0x6000(%rsp)
  0x0000000002b24fa7: push   %rbp
  0x0000000002b24fa8: sub    $0x30,%rsp
  0x0000000002b24fac: movabs $0x1b7717c0,%rax   ;   {metadata(method data for {method} {0x000000001b76cdd8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002b24fb6: mov    0xdc(%rax),%esi
  0x0000000002b24fbc: add    $0x8,%esi
  0x0000000002b24fbf: mov    %esi,0xdc(%rax)
  0x0000000002b24fc5: movabs $0x1b76cdd0,%rax   ;   {metadata({method} {0x000000001b76cdd8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002b24fcf: and    $0x1ff8,%esi
  0x0000000002b24fd5: cmp    $0x0,%esi
  0x0000000002b24fd8: je     0x0000000002b25051  ;*aload_0
                                                ; - java.util.TreeMap::leftOf@0 (line 2209)

  0x0000000002b24fde: cmp    $0x0,%rdx
  0x0000000002b24fe2: movabs $0x1b7717c0,%rax   ;   {metadata(method data for {method} {0x000000001b76cdd8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002b24fec: movabs $0x108,%rsi
  0x0000000002b24ff6: jne    0x0000000002b25006
  0x0000000002b24ffc: movabs $0x118,%rsi
  0x0000000002b25006: mov    (%rax,%rsi,1),%rdi
  0x0000000002b2500a: lea    0x1(%rdi),%rdi
  0x0000000002b2500e: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b25012: jne    0x0000000002b2503e  ;*ifnonnull
                                                ; - java.util.TreeMap::leftOf@1 (line 2209)

  0x0000000002b25018: movabs $0x1b7717c0,%rax   ;   {metadata(method data for {method} {0x000000001b76cdd8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002b25022: incl   0x128(%rax)
  0x0000000002b25028: movabs $0x0,%rax          ;*goto
                                                ; - java.util.TreeMap::leftOf@5 (line 2209)
                                                ;   {oop(NULL)}
  0x0000000002b25032: add    $0x30,%rsp
  0x0000000002b25036: pop    %rbp
  0x0000000002b25037: test   %eax,-0x2164f3d(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b2503d: retq   
  0x0000000002b2503e: mov    0x18(%rdx),%eax    ; implicit exception: dispatches to 0x0000000002b25068
  0x0000000002b25041: shl    $0x3,%rax          ;*getfield left
                                                ; - java.util.TreeMap::leftOf@9 (line 2209)

  0x0000000002b25045: add    $0x30,%rsp
  0x0000000002b25049: pop    %rbp
  0x0000000002b2504a: test   %eax,-0x2164f50(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b25050: retq   
  0x0000000002b25051: mov    %rax,0x8(%rsp)
  0x0000000002b25056: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b2505e: callq  0x0000000002b13560  ; OopMap{rdx=Oop off=195}
                                                ;*synchronization entry
                                                ; - java.util.TreeMap::leftOf@-1 (line 2209)
                                                ;   {runtime_call}
  0x0000000002b25063: jmpq   0x0000000002b24fde
  0x0000000002b25068: callq  0x0000000002a80dc0  ; OopMap{off=205}
                                                ;*getfield left
                                                ; - java.util.TreeMap::leftOf@9 (line 2209)
                                                ;   {runtime_call}
  0x0000000002b2506d: nop
  0x0000000002b2506e: nop
  0x0000000002b2506f: mov    0x2a8(%r15),%rax
  0x0000000002b25076: movabs $0x0,%r10
  0x0000000002b25080: mov    %r10,0x2a8(%r15)
  0x0000000002b25087: movabs $0x0,%r10
  0x0000000002b25091: mov    %r10,0x2b0(%r15)
  0x0000000002b25098: add    $0x30,%rsp
  0x0000000002b2509c: pop    %rbp
  0x0000000002b2509d: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b250a2: hlt    
  0x0000000002b250a3: hlt    
  0x0000000002b250a4: hlt    
  0x0000000002b250a5: hlt    
  0x0000000002b250a6: hlt    
  0x0000000002b250a7: hlt    
  0x0000000002b250a8: hlt    
  0x0000000002b250a9: hlt    
  0x0000000002b250aa: hlt    
  0x0000000002b250ab: hlt    
  0x0000000002b250ac: hlt    
  0x0000000002b250ad: hlt    
  0x0000000002b250ae: hlt    
  0x0000000002b250af: hlt    
  0x0000000002b250b0: hlt    
  0x0000000002b250b1: hlt    
  0x0000000002b250b2: hlt    
  0x0000000002b250b3: hlt    
  0x0000000002b250b4: hlt    
  0x0000000002b250b5: hlt    
  0x0000000002b250b6: hlt    
  0x0000000002b250b7: hlt    
  0x0000000002b250b8: hlt    
  0x0000000002b250b9: hlt    
  0x0000000002b250ba: hlt    
  0x0000000002b250bb: hlt    
  0x0000000002b250bc: hlt    
  0x0000000002b250bd: hlt    
  0x0000000002b250be: hlt    
  0x0000000002b250bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b250c0: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b250c5: mov    %rsp,-0x28(%rsp)
  0x0000000002b250ca: sub    $0x80,%rsp
  0x0000000002b250d1: mov    %rax,0x78(%rsp)
  0x0000000002b250d6: mov    %rcx,0x70(%rsp)
  0x0000000002b250db: mov    %rdx,0x68(%rsp)
  0x0000000002b250e0: mov    %rbx,0x60(%rsp)
  0x0000000002b250e5: mov    %rbp,0x50(%rsp)
  0x0000000002b250ea: mov    %rsi,0x48(%rsp)
  0x0000000002b250ef: mov    %rdi,0x40(%rsp)
  0x0000000002b250f4: mov    %r8,0x38(%rsp)
  0x0000000002b250f9: mov    %r9,0x30(%rsp)
  0x0000000002b250fe: mov    %r10,0x28(%rsp)
  0x0000000002b25103: mov    %r11,0x20(%rsp)
  0x0000000002b25108: mov    %r12,0x18(%rsp)
  0x0000000002b2510d: mov    %r13,0x10(%rsp)
  0x0000000002b25112: mov    %r14,0x8(%rsp)
  0x0000000002b25117: mov    %r15,(%rsp)
  0x0000000002b2511b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b25125: movabs $0x2b250c5,%rdx    ;   {internal_word}
  0x0000000002b2512f: mov    %rsp,%r8
  0x0000000002b25132: and    $0xfffffffffffffff0,%rsp
  0x0000000002b25136: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b2513b: hlt    
[Deopt Handler Code]
  0x0000000002b2513c: movabs $0x2b2513c,%r10    ;   {section_word}
  0x0000000002b25146: push   %r10
  0x0000000002b25148: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b2514d: hlt    
  0x0000000002b2514e: hlt    
  0x0000000002b2514f: hlt    
<nmethod compile_id='22' compiler='C1' level='3' entry='0x0000000002b24fa0' size='976' address='0x0000000002b24e50' relocation_offset='288' insts_offset='336' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='824' dependencies_offset='952' nul_chk_table_offset='960' method='java/util/TreeMap leftOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='1813' iicount='1813' stamp='0.468'/>
Decoding compiled method 0x0000000002b25250:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b6da1b0} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = char
  #           [sp+0x50]  (sp of caller)
  0x0000000002b253c0: mov    %eax,-0x6000(%rsp)
  0x0000000002b253c7: push   %rbp
  0x0000000002b253c8: sub    $0x40,%rsp
  0x0000000002b253cc: movabs $0x1b909c50,%rsi   ;   {metadata(method data for {method} {0x000000001b6da1b0} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002b253d6: mov    0xdc(%rsi),%edi
  0x0000000002b253dc: add    $0x8,%edi
  0x0000000002b253df: mov    %edi,0xdc(%rsi)
  0x0000000002b253e5: movabs $0x1b6da1a8,%rsi   ;   {metadata({method} {0x000000001b6da1b0} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002b253ef: and    $0x1ff8,%edi
  0x0000000002b253f5: cmp    $0x0,%edi
  0x0000000002b253f8: je     0x0000000002b2552c  ;*iload_0
                                                ; - java.lang.Character::toUpperCase@0 (line 6369)

  0x0000000002b253fe: movabs $0x1b909c50,%rsi   ;   {metadata(method data for {method} {0x000000001b6da1b0} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002b25408: addq   $0x1,0x108(%rsi)
  0x0000000002b25410: movabs $0x1b909ac8,%rsi   ;   {metadata(method data for {method} {0x000000001b6da248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002b2541a: mov    0xdc(%rsi),%edi
  0x0000000002b25420: add    $0x8,%edi
  0x0000000002b25423: mov    %edi,0xdc(%rsi)
  0x0000000002b25429: movabs $0x1b6da240,%rsi   ;   {metadata({method} {0x000000001b6da248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002b25433: and    $0x7ffff8,%edi
  0x0000000002b25439: cmp    $0x0,%edi
  0x0000000002b2543c: je     0x0000000002b25543
  0x0000000002b25442: movabs $0x1b909ac8,%rsi   ;   {metadata(method data for {method} {0x000000001b6da248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002b2544c: addq   $0x1,0x108(%rsi)
  0x0000000002b25454: mov    %rdx,%rsi
  0x0000000002b25457: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x0000000002b2545a: mov    %esi,0x28(%rsp)
  0x0000000002b2545e: nop
  0x0000000002b2545f: callq  0x0000000002a56620  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {static_call}
  0x0000000002b25464: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002b2555a
  0x0000000002b25467: mov    %rax,%r8
  0x0000000002b2546a: movabs $0x1b909ac8,%rdx   ;   {metadata(method data for {method} {0x000000001b6da248} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002b25474: mov    0x8(%r8),%r8d
  0x0000000002b25478: shl    $0x3,%r8
  0x0000000002b2547c: cmp    0x120(%rdx),%r8
  0x0000000002b25483: jne    0x0000000002b25492
  0x0000000002b25485: addq   $0x1,0x128(%rdx)
  0x0000000002b2548d: jmpq   0x0000000002b254f8
  0x0000000002b25492: cmp    0x130(%rdx),%r8
  0x0000000002b25499: jne    0x0000000002b254a8
  0x0000000002b2549b: addq   $0x1,0x138(%rdx)
  0x0000000002b254a3: jmpq   0x0000000002b254f8
  0x0000000002b254a8: cmpq   $0x0,0x120(%rdx)
  0x0000000002b254b3: jne    0x0000000002b254cc
  0x0000000002b254b5: mov    %r8,0x120(%rdx)
  0x0000000002b254bc: movq   $0x1,0x128(%rdx)
  0x0000000002b254c7: jmpq   0x0000000002b254f8
  0x0000000002b254cc: cmpq   $0x0,0x130(%rdx)
  0x0000000002b254d7: jne    0x0000000002b254f0
  0x0000000002b254d9: mov    %r8,0x130(%rdx)
  0x0000000002b254e0: movq   $0x1,0x138(%rdx)
  0x0000000002b254eb: jmpq   0x0000000002b254f8
  0x0000000002b254f0: addq   $0x1,0x118(%rdx)
  0x0000000002b254f8: mov    0x28(%rsp),%r8d
  0x0000000002b254fd: mov    %rax,%rdx          ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x0000000002b25500: nop
  0x0000000002b25501: nop
  0x0000000002b25502: nop
  0x0000000002b25503: nop
  0x0000000002b25504: nop
  0x0000000002b25505: movabs $0xffffffffffffffff,%rax
  0x0000000002b2550f: callq  0x0000000002a563e0  ; OopMap{off=340}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {virtual_call}
  0x0000000002b25514: and    $0xffff,%eax
  0x0000000002b2551a: and    $0xffff,%eax
  0x0000000002b25520: add    $0x40,%rsp
  0x0000000002b25524: pop    %rbp
  0x0000000002b25525: test   %eax,-0x216542b(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b2552b: retq   
  0x0000000002b2552c: mov    %rsi,0x8(%rsp)
  0x0000000002b25531: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b25539: callq  0x0000000002b13560  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002b2553e: jmpq   0x0000000002b253fe
  0x0000000002b25543: mov    %rsi,0x8(%rsp)
  0x0000000002b25548: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b25550: callq  0x0000000002b13560  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002b25555: jmpq   0x0000000002b25442
  0x0000000002b2555a: callq  0x0000000002a80dc0  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002b2555f: nop
  0x0000000002b25560: nop
  0x0000000002b25561: mov    0x2a8(%r15),%rax
  0x0000000002b25568: movabs $0x0,%r10
  0x0000000002b25572: mov    %r10,0x2a8(%r15)
  0x0000000002b25579: movabs $0x0,%r10
  0x0000000002b25583: mov    %r10,0x2b0(%r15)
  0x0000000002b2558a: add    $0x40,%rsp
  0x0000000002b2558e: pop    %rbp
  0x0000000002b2558f: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b25594: hlt    
  0x0000000002b25595: hlt    
  0x0000000002b25596: hlt    
  0x0000000002b25597: hlt    
  0x0000000002b25598: hlt    
  0x0000000002b25599: hlt    
  0x0000000002b2559a: hlt    
  0x0000000002b2559b: hlt    
  0x0000000002b2559c: hlt    
  0x0000000002b2559d: hlt    
  0x0000000002b2559e: hlt    
  0x0000000002b2559f: hlt    
[Stub Code]
  0x0000000002b255a0: nop                       ;   {no_reloc}
  0x0000000002b255a1: nop
  0x0000000002b255a2: nop
  0x0000000002b255a3: nop
  0x0000000002b255a4: nop
  0x0000000002b255a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b255af: jmpq   0x0000000002b255af  ;   {runtime_call}
  0x0000000002b255b4: nop
  0x0000000002b255b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b255bf: jmpq   0x0000000002b255bf  ;   {runtime_call}
[Exception Handler]
  0x0000000002b255c4: callq  0x0000000002a7f5a0  ;   {runtime_call}
  0x0000000002b255c9: mov    %rsp,-0x28(%rsp)
  0x0000000002b255ce: sub    $0x80,%rsp
  0x0000000002b255d5: mov    %rax,0x78(%rsp)
  0x0000000002b255da: mov    %rcx,0x70(%rsp)
  0x0000000002b255df: mov    %rdx,0x68(%rsp)
  0x0000000002b255e4: mov    %rbx,0x60(%rsp)
  0x0000000002b255e9: mov    %rbp,0x50(%rsp)
  0x0000000002b255ee: mov    %rsi,0x48(%rsp)
  0x0000000002b255f3: mov    %rdi,0x40(%rsp)
  0x0000000002b255f8: mov    %r8,0x38(%rsp)
  0x0000000002b255fd: mov    %r9,0x30(%rsp)
  0x0000000002b25602: mov    %r10,0x28(%rsp)
  0x0000000002b25607: mov    %r11,0x20(%rsp)
  0x0000000002b2560c: mov    %r12,0x18(%rsp)
  0x0000000002b25611: mov    %r13,0x10(%rsp)
  0x0000000002b25616: mov    %r14,0x8(%rsp)
  0x0000000002b2561b: mov    %r15,(%rsp)
  0x0000000002b2561f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b25629: movabs $0x2b255c9,%rdx    ;   {internal_word}
  0x0000000002b25633: mov    %rsp,%r8
  0x0000000002b25636: and    $0xfffffffffffffff0,%rsp
  0x0000000002b2563a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b2563f: hlt    
[Deopt Handler Code]
  0x0000000002b25640: movabs $0x2b25640,%r10    ;   {section_word}
  0x0000000002b2564a: push   %r10
  0x0000000002b2564c: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b25651: hlt    
  0x0000000002b25652: hlt    
  0x0000000002b25653: hlt    
  0x0000000002b25654: hlt    
  0x0000000002b25655: hlt    
  0x0000000002b25656: hlt    
  0x0000000002b25657: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x0000000002b253c0' size='1304' address='0x0000000002b25250' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1048' scopes_pcs_offset='1120' dependencies_offset='1280' nul_chk_table_offset='1288' method='java/lang/Character toUpperCase (C)C' bytes='6' count='746' iicount='746' stamp='0.476'/>
Decoding compiled method 0x0000000002b25790:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b76cd38} &apos;setColor&apos; &apos;(Ljava/util/TreeMap$Entry;Z)V&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  # parm1:    r8        = boolean
  #           [sp+0x40]  (sp of caller)
  0x0000000002b258e0: mov    %eax,-0x6000(%rsp)
  0x0000000002b258e7: push   %rbp
  0x0000000002b258e8: sub    $0x30,%rsp
  0x0000000002b258ec: movabs $0x1b771678,%rsi   ;   {metadata(method data for {method} {0x000000001b76cd38} &apos;setColor&apos; &apos;(Ljava/util/TreeMap$Entry;Z)V&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002b258f6: mov    0xdc(%rsi),%edi
  0x0000000002b258fc: add    $0x8,%edi
  0x0000000002b258ff: mov    %edi,0xdc(%rsi)
  0x0000000002b25905: movabs $0x1b76cd30,%rsi   ;   {metadata({method} {0x000000001b76cd38} &apos;setColor&apos; &apos;(Ljava/util/TreeMap$Entry;Z)V&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002b2590f: and    $0x1ff8,%edi
  0x0000000002b25915: cmp    $0x0,%edi
  0x0000000002b25918: je     0x0000000002b2596c  ;*aload_0
                                                ; - java.util.TreeMap::setColor@0 (line 2204)

  0x0000000002b2591e: cmp    $0x0,%rdx
  0x0000000002b25922: movabs $0x1b771678,%rsi   ;   {metadata(method data for {method} {0x000000001b76cd38} &apos;setColor&apos; &apos;(Ljava/util/TreeMap$Entry;Z)V&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002b2592c: movabs $0x108,%rdi
  0x0000000002b25936: je     0x0000000002b25946
  0x0000000002b2593c: movabs $0x118,%rdi
  0x0000000002b25946: mov    (%rsi,%rdi,1),%rbx
  0x0000000002b2594a: lea    0x1(%rbx),%rbx
  0x0000000002b2594e: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002b25952: je     0x0000000002b25960  ;*ifnull
                                                ; - java.util.TreeMap::setColor@1 (line 2204)

  0x0000000002b25958: and    $0x1,%r8d
  0x0000000002b2595c: mov    %r8b,0xc(%rdx)     ;*putfield color
                                                ; - java.util.TreeMap::setColor@6 (line 2205)
                                                ; implicit exception: dispatches to 0x0000000002b25980
  0x0000000002b25960: add    $0x30,%rsp
  0x0000000002b25964: pop    %rbp
  0x0000000002b25965: test   %eax,-0x216586b(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b2596b: retq   
  0x0000000002b2596c: mov    %rsi,0x8(%rsp)
  0x0000000002b25971: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b25979: callq  0x0000000002b13560  ; OopMap{rdx=Oop off=158}
                                                ;*synchronization entry
                                                ; - java.util.TreeMap::setColor@-1 (line 2204)
                                                ;   {runtime_call}
  0x0000000002b2597e: jmp    0x0000000002b2591e
  0x0000000002b25980: callq  0x0000000002a80dc0  ; OopMap{off=165}
                                                ;*putfield color
                                                ; - java.util.TreeMap::setColor@6 (line 2205)
                                                ;   {runtime_call}
  0x0000000002b25985: nop
  0x0000000002b25986: nop
  0x0000000002b25987: mov    0x2a8(%r15),%rax
  0x0000000002b2598e: movabs $0x0,%r10
  0x0000000002b25998: mov    %r10,0x2a8(%r15)
  0x0000000002b2599f: movabs $0x0,%r10
  0x0000000002b259a9: mov    %r10,0x2b0(%r15)
  0x0000000002b259b0: add    $0x30,%rsp
  0x0000000002b259b4: pop    %rbp
  0x0000000002b259b5: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b259ba: hlt    
  0x0000000002b259bb: hlt    
  0x0000000002b259bc: hlt    
  0x0000000002b259bd: hlt    
  0x0000000002b259be: hlt    
  0x0000000002b259bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b259c0: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b259c5: mov    %rsp,-0x28(%rsp)
  0x0000000002b259ca: sub    $0x80,%rsp
  0x0000000002b259d1: mov    %rax,0x78(%rsp)
  0x0000000002b259d6: mov    %rcx,0x70(%rsp)
  0x0000000002b259db: mov    %rdx,0x68(%rsp)
  0x0000000002b259e0: mov    %rbx,0x60(%rsp)
  0x0000000002b259e5: mov    %rbp,0x50(%rsp)
  0x0000000002b259ea: mov    %rsi,0x48(%rsp)
  0x0000000002b259ef: mov    %rdi,0x40(%rsp)
  0x0000000002b259f4: mov    %r8,0x38(%rsp)
  0x0000000002b259f9: mov    %r9,0x30(%rsp)
  0x0000000002b259fe: mov    %r10,0x28(%rsp)
  0x0000000002b25a03: mov    %r11,0x20(%rsp)
  0x0000000002b25a08: mov    %r12,0x18(%rsp)
  0x0000000002b25a0d: mov    %r13,0x10(%rsp)
  0x0000000002b25a12: mov    %r14,0x8(%rsp)
  0x0000000002b25a17: mov    %r15,(%rsp)
  0x0000000002b25a1b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b25a25: movabs $0x2b259c5,%rdx    ;   {internal_word}
  0x0000000002b25a2f: mov    %rsp,%r8
  0x0000000002b25a32: and    $0xfffffffffffffff0,%rsp
  0x0000000002b25a36: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b25a3b: hlt    
[Deopt Handler Code]
  0x0000000002b25a3c: movabs $0x2b25a3c,%r10    ;   {section_word}
  0x0000000002b25a46: push   %r10
  0x0000000002b25a48: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b25a4d: hlt    
  0x0000000002b25a4e: hlt    
  0x0000000002b25a4f: hlt    
<nmethod compile_id='23' compiler='C1' level='3' entry='0x0000000002b258e0' size='896' address='0x0000000002b25790' relocation_offset='288' insts_offset='336' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='760' dependencies_offset='872' nul_chk_table_offset='880' method='java/util/TreeMap setColor (Ljava/util/TreeMap$Entry;Z)V' bytes='10' count='2452' iicount='2452' stamp='0.481'/>
Decoding compiled method 0x0000000002b25b50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b76ce78} &apos;rightOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b25ca0: mov    %eax,-0x6000(%rsp)
  0x0000000002b25ca7: push   %rbp
  0x0000000002b25ca8: sub    $0x30,%rsp
  0x0000000002b25cac: movabs $0x1b773000,%rax   ;   {metadata(method data for {method} {0x000000001b76ce78} &apos;rightOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002b25cb6: mov    0xdc(%rax),%esi
  0x0000000002b25cbc: add    $0x8,%esi
  0x0000000002b25cbf: mov    %esi,0xdc(%rax)
  0x0000000002b25cc5: movabs $0x1b76ce70,%rax   ;   {metadata({method} {0x000000001b76ce78} &apos;rightOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002b25ccf: and    $0x1ff8,%esi
  0x0000000002b25cd5: cmp    $0x0,%esi
  0x0000000002b25cd8: je     0x0000000002b25d51  ;*aload_0
                                                ; - java.util.TreeMap::rightOf@0 (line 2213)

  0x0000000002b25cde: cmp    $0x0,%rdx
  0x0000000002b25ce2: movabs $0x1b773000,%rax   ;   {metadata(method data for {method} {0x000000001b76ce78} &apos;rightOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002b25cec: movabs $0x108,%rsi
  0x0000000002b25cf6: jne    0x0000000002b25d06
  0x0000000002b25cfc: movabs $0x118,%rsi
  0x0000000002b25d06: mov    (%rax,%rsi,1),%rdi
  0x0000000002b25d0a: lea    0x1(%rdi),%rdi
  0x0000000002b25d0e: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b25d12: jne    0x0000000002b25d3e  ;*ifnonnull
                                                ; - java.util.TreeMap::rightOf@1 (line 2213)

  0x0000000002b25d18: movabs $0x1b773000,%rax   ;   {metadata(method data for {method} {0x000000001b76ce78} &apos;rightOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002b25d22: incl   0x128(%rax)
  0x0000000002b25d28: movabs $0x0,%rax          ;*goto
                                                ; - java.util.TreeMap::rightOf@5 (line 2213)
                                                ;   {oop(NULL)}
  0x0000000002b25d32: add    $0x30,%rsp
  0x0000000002b25d36: pop    %rbp
  0x0000000002b25d37: test   %eax,-0x2165c3d(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b25d3d: retq   
  0x0000000002b25d3e: mov    0x1c(%rdx),%eax    ; implicit exception: dispatches to 0x0000000002b25d68
  0x0000000002b25d41: shl    $0x3,%rax          ;*getfield right
                                                ; - java.util.TreeMap::rightOf@9 (line 2213)

  0x0000000002b25d45: add    $0x30,%rsp
  0x0000000002b25d49: pop    %rbp
  0x0000000002b25d4a: test   %eax,-0x2165c50(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b25d50: retq   
  0x0000000002b25d51: mov    %rax,0x8(%rsp)
  0x0000000002b25d56: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b25d5e: callq  0x0000000002b13560  ; OopMap{rdx=Oop off=195}
                                                ;*synchronization entry
                                                ; - java.util.TreeMap::rightOf@-1 (line 2213)
                                                ;   {runtime_call}
  0x0000000002b25d63: jmpq   0x0000000002b25cde
  0x0000000002b25d68: callq  0x0000000002a80dc0  ; OopMap{off=205}
                                                ;*getfield right
                                                ; - java.util.TreeMap::rightOf@9 (line 2213)
                                                ;   {runtime_call}
  0x0000000002b25d6d: nop
  0x0000000002b25d6e: nop
  0x0000000002b25d6f: mov    0x2a8(%r15),%rax
  0x0000000002b25d76: movabs $0x0,%r10
  0x0000000002b25d80: mov    %r10,0x2a8(%r15)
  0x0000000002b25d87: movabs $0x0,%r10
  0x0000000002b25d91: mov    %r10,0x2b0(%r15)
  0x0000000002b25d98: add    $0x30,%rsp
  0x0000000002b25d9c: pop    %rbp
  0x0000000002b25d9d: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b25da2: hlt    
  0x0000000002b25da3: hlt    
  0x0000000002b25da4: hlt    
  0x0000000002b25da5: hlt    
  0x0000000002b25da6: hlt    
  0x0000000002b25da7: hlt    
  0x0000000002b25da8: hlt    
  0x0000000002b25da9: hlt    
  0x0000000002b25daa: hlt    
  0x0000000002b25dab: hlt    
  0x0000000002b25dac: hlt    
  0x0000000002b25dad: hlt    
  0x0000000002b25dae: hlt    
  0x0000000002b25daf: hlt    
  0x0000000002b25db0: hlt    
  0x0000000002b25db1: hlt    
  0x0000000002b25db2: hlt    
  0x0000000002b25db3: hlt    
  0x0000000002b25db4: hlt    
  0x0000000002b25db5: hlt    
  0x0000000002b25db6: hlt    
  0x0000000002b25db7: hlt    
  0x0000000002b25db8: hlt    
  0x0000000002b25db9: hlt    
  0x0000000002b25dba: hlt    
  0x0000000002b25dbb: hlt    
  0x0000000002b25dbc: hlt    
  0x0000000002b25dbd: hlt    
  0x0000000002b25dbe: hlt    
  0x0000000002b25dbf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b25dc0: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b25dc5: mov    %rsp,-0x28(%rsp)
  0x0000000002b25dca: sub    $0x80,%rsp
  0x0000000002b25dd1: mov    %rax,0x78(%rsp)
  0x0000000002b25dd6: mov    %rcx,0x70(%rsp)
  0x0000000002b25ddb: mov    %rdx,0x68(%rsp)
  0x0000000002b25de0: mov    %rbx,0x60(%rsp)
  0x0000000002b25de5: mov    %rbp,0x50(%rsp)
  0x0000000002b25dea: mov    %rsi,0x48(%rsp)
  0x0000000002b25def: mov    %rdi,0x40(%rsp)
  0x0000000002b25df4: mov    %r8,0x38(%rsp)
  0x0000000002b25df9: mov    %r9,0x30(%rsp)
  0x0000000002b25dfe: mov    %r10,0x28(%rsp)
  0x0000000002b25e03: mov    %r11,0x20(%rsp)
  0x0000000002b25e08: mov    %r12,0x18(%rsp)
  0x0000000002b25e0d: mov    %r13,0x10(%rsp)
  0x0000000002b25e12: mov    %r14,0x8(%rsp)
  0x0000000002b25e17: mov    %r15,(%rsp)
  0x0000000002b25e1b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b25e25: movabs $0x2b25dc5,%rdx    ;   {internal_word}
  0x0000000002b25e2f: mov    %rsp,%r8
  0x0000000002b25e32: and    $0xfffffffffffffff0,%rsp
  0x0000000002b25e36: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b25e3b: hlt    
[Deopt Handler Code]
  0x0000000002b25e3c: movabs $0x2b25e3c,%r10    ;   {section_word}
  0x0000000002b25e46: push   %r10
  0x0000000002b25e48: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b25e4d: hlt    
  0x0000000002b25e4e: hlt    
  0x0000000002b25e4f: hlt    
<nmethod compile_id='24' compiler='C1' level='3' entry='0x0000000002b25ca0' size='976' address='0x0000000002b25b50' relocation_offset='288' insts_offset='336' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='824' dependencies_offset='952' nul_chk_table_offset='960' method='java/util/TreeMap rightOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='640' iicount='640' stamp='0.487'/>
<writer thread='26472'/>
<task_queued compile_id='25' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='640' backedge_count='1068' iicount='640' level='3' stamp='0.493' comment='tiered' hot_count='640'/>
<task_queued compile_id='26' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='640' iicount='640' level='3' stamp='0.493' comment='tiered' hot_count='640'/>
<task_queued compile_id='27' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='768' iicount='768' level='3' stamp='0.493' comment='tiered' hot_count='768'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b26350:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b644db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002b264c0: mov    0x8(%rdx),%r10d
  0x0000000002b264c4: shl    $0x3,%r10
  0x0000000002b264c8: cmp    %rax,%r10
  0x0000000002b264cb: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b264d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b264dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b264e0: mov    %eax,-0x6000(%rsp)
  0x0000000002b264e7: push   %rbp
  0x0000000002b264e8: sub    $0x30,%rsp
  0x0000000002b264ec: movabs $0x1b89c8c0,%rax   ;   {metadata(method data for {method} {0x000000001b644db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b264f6: mov    0xdc(%rax),%esi
  0x0000000002b264fc: add    $0x8,%esi
  0x0000000002b264ff: mov    %esi,0xdc(%rax)
  0x0000000002b26505: movabs $0x1b644da8,%rax   ;   {metadata({method} {0x000000001b644db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b2650f: and    $0x1ff8,%esi
  0x0000000002b26515: cmp    $0x0,%esi
  0x0000000002b26518: je     0x0000000002b266d5  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x0000000002b2651e: mov    0xc(%rdx),%eax
  0x0000000002b26521: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x0000000002b26525: mov    0xc(%r8),%esi      ; implicit exception: dispatches to 0x0000000002b266ec
  0x0000000002b26529: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x0000000002b2652d: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x0000000002b266f1
  0x0000000002b26530: cmp    $0x0,%r9d
  0x0000000002b26534: movabs $0x1b89c8c0,%rbx   ;   {metadata(method data for {method} {0x000000001b644db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b2653e: movabs $0x108,%rdx
  0x0000000002b26548: jl     0x0000000002b26558
  0x0000000002b2654e: movabs $0x118,%rdx
  0x0000000002b26558: mov    (%rbx,%rdx,1),%rcx
  0x0000000002b2655c: lea    0x1(%rcx),%rcx
  0x0000000002b26560: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002b26564: jl     0x0000000002b266a2  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x0000000002b2656a: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x0000000002b266f6
  0x0000000002b2656d: sub    %edi,%ebx
  0x0000000002b2656f: cmp    %ebx,%r9d
  0x0000000002b26572: movabs $0x1b89c8c0,%rbx   ;   {metadata(method data for {method} {0x000000001b644db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b2657c: movabs $0x128,%rdx
  0x0000000002b26586: jle    0x0000000002b26596
  0x0000000002b2658c: movabs $0x138,%rdx
  0x0000000002b26596: mov    (%rbx,%rdx,1),%rcx
  0x0000000002b2659a: lea    0x1(%rcx),%rcx
  0x0000000002b2659e: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002b265a2: jg     0x0000000002b266a2  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x0000000002b265a8: mov    $0x0,%ebx
  0x0000000002b265ad: jmpq   0x0000000002b26662  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002b265b2: nopw   0x0(%rax,%rax,1)
  0x0000000002b265b8: mov    %r9,%rdx
  0x0000000002b265bb: inc    %edx
  0x0000000002b265bd: movslq %r9d,%rcx
  0x0000000002b265c0: cmp    0xc(%rax),%r9d
  0x0000000002b265c4: jae    0x0000000002b266fb
  0x0000000002b265ca: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x0000000002b265cf: mov    %rbx,%r8
  0x0000000002b265d2: inc    %r8d
  0x0000000002b265d5: movslq %ebx,%r9
  0x0000000002b265d8: cmp    0xc(%rsi),%ebx
  0x0000000002b265db: jae    0x0000000002b26704
  0x0000000002b265e1: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x0000000002b265e7: movabs $0x1b89c8c0,%r9    ;   {metadata(method data for {method} {0x000000001b644db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b265f1: mov    0xe0(%r9),%r11d
  0x0000000002b265f8: add    $0x8,%r11d
  0x0000000002b265fc: mov    %r11d,0xe0(%r9)
  0x0000000002b26603: movabs $0x1b644da8,%r9    ;   {metadata({method} {0x000000001b644db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b2660d: and    $0xfff8,%r11d
  0x0000000002b26614: cmp    $0x0,%r11d
  0x0000000002b26618: je     0x0000000002b2670d  ; OopMap{rsi=Oop rax=Oop off=350}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002b2661e: test   %eax,-0x2166524(%rip)        # 0x00000000009c0100
                                                ;   {poll}
  0x0000000002b26624: cmp    %ebx,%ecx
  0x0000000002b26626: movabs $0x1b89c8c0,%rbx   ;   {metadata(method data for {method} {0x000000001b644db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b26630: movabs $0x168,%rcx
  0x0000000002b2663a: je     0x0000000002b2664a
  0x0000000002b26640: movabs $0x178,%rcx
  0x0000000002b2664a: mov    (%rbx,%rcx,1),%r9
  0x0000000002b2664e: lea    0x1(%r9),%r9
  0x0000000002b26652: mov    %r9,(%rbx,%rcx,1)
  0x0000000002b26656: jne    0x0000000002b266b3  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002b2665c: mov    %r8,%rbx
  0x0000000002b2665f: mov    %rdx,%r9           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002b26662: dec    %edi
  0x0000000002b26664: cmp    $0x0,%edi
  0x0000000002b26667: movabs $0x1b89c8c0,%rdx   ;   {metadata(method data for {method} {0x000000001b644db0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b26671: movabs $0x148,%rcx
  0x0000000002b2667b: jl     0x0000000002b2668b
  0x0000000002b26681: movabs $0x158,%rcx
  0x0000000002b2668b: mov    (%rdx,%rcx,1),%r8
  0x0000000002b2668f: lea    0x1(%r8),%r8
  0x0000000002b26693: mov    %r8,(%rdx,%rcx,1)
  0x0000000002b26697: jl     0x0000000002b266c4
  0x0000000002b2669d: jmpq   0x0000000002b265b8  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x0000000002b266a2: mov    $0x0,%eax
  0x0000000002b266a7: add    $0x30,%rsp
  0x0000000002b266ab: pop    %rbp
  0x0000000002b266ac: test   %eax,-0x21665b2(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b266b2: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x0000000002b266b3: mov    $0x0,%eax
  0x0000000002b266b8: add    $0x30,%rsp
  0x0000000002b266bc: pop    %rbp
  0x0000000002b266bd: test   %eax,-0x21665c3(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b266c3: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x0000000002b266c4: mov    $0x1,%eax
  0x0000000002b266c9: add    $0x30,%rsp
  0x0000000002b266cd: pop    %rbp
  0x0000000002b266ce: test   %eax,-0x21665d4(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b266d4: retq   
  0x0000000002b266d5: mov    %rax,0x8(%rsp)
  0x0000000002b266da: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b266e2: callq  0x0000000002b13560  ; OopMap{rdx=Oop r8=Oop off=551}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x0000000002b266e7: jmpq   0x0000000002b2651e
  0x0000000002b266ec: callq  0x0000000002a80dc0  ; OopMap{rax=Oop off=561}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x0000000002b266f1: callq  0x0000000002a80dc0  ; OopMap{rax=Oop rsi=Oop off=566}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x0000000002b266f6: callq  0x0000000002a80dc0  ; OopMap{rsi=Oop rax=Oop off=571}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x0000000002b266fb: mov    %r9,(%rsp)
  0x0000000002b266ff: callq  0x0000000002a81480  ; OopMap{rsi=Oop rax=Oop off=580}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x0000000002b26704: mov    %rbx,(%rsp)
  0x0000000002b26708: callq  0x0000000002a81480  ; OopMap{rsi=Oop rax=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x0000000002b2670d: mov    %r9,0x8(%rsp)
  0x0000000002b26712: movq   $0x41,(%rsp)
  0x0000000002b2671a: callq  0x0000000002b13560  ; OopMap{rsi=Oop rax=Oop off=607}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x0000000002b2671f: jmpq   0x0000000002b2661e
  0x0000000002b26724: nop
  0x0000000002b26725: nop
  0x0000000002b26726: mov    0x2a8(%r15),%rax
  0x0000000002b2672d: movabs $0x0,%r10
  0x0000000002b26737: mov    %r10,0x2a8(%r15)
  0x0000000002b2673e: movabs $0x0,%r10
  0x0000000002b26748: mov    %r10,0x2b0(%r15)
  0x0000000002b2674f: add    $0x30,%rsp
  0x0000000002b26753: pop    %rbp
  0x0000000002b26754: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b26759: hlt    
  0x0000000002b2675a: hlt    
  0x0000000002b2675b: hlt    
  0x0000000002b2675c: hlt    
  0x0000000002b2675d: hlt    
  0x0000000002b2675e: hlt    
  0x0000000002b2675f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b26760: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b26765: mov    %rsp,-0x28(%rsp)
  0x0000000002b2676a: sub    $0x80,%rsp
  0x0000000002b26771: mov    %rax,0x78(%rsp)
  0x0000000002b26776: mov    %rcx,0x70(%rsp)
  0x0000000002b2677b: mov    %rdx,0x68(%rsp)
  0x0000000002b26780: mov    %rbx,0x60(%rsp)
  0x0000000002b26785: mov    %rbp,0x50(%rsp)
  0x0000000002b2678a: mov    %rsi,0x48(%rsp)
  0x0000000002b2678f: mov    %rdi,0x40(%rsp)
  0x0000000002b26794: mov    %r8,0x38(%rsp)
  0x0000000002b26799: mov    %r9,0x30(%rsp)
  0x0000000002b2679e: mov    %r10,0x28(%rsp)
  0x0000000002b267a3: mov    %r11,0x20(%rsp)
  0x0000000002b267a8: mov    %r12,0x18(%rsp)
  0x0000000002b267ad: mov    %r13,0x10(%rsp)
  0x0000000002b267b2: mov    %r14,0x8(%rsp)
  0x0000000002b267b7: mov    %r15,(%rsp)
  0x0000000002b267bb: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b267c5: movabs $0x2b26765,%rdx    ;   {internal_word}
  0x0000000002b267cf: mov    %rsp,%r8
  0x0000000002b267d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002b267d6: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b267db: hlt    
[Deopt Handler Code]
  0x0000000002b267dc: movabs $0x2b267dc,%r10    ;   {section_word}
  0x0000000002b267e6: push   %r10
  0x0000000002b267e8: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b267ed: hlt    
  0x0000000002b267ee: hlt    
  0x0000000002b267ef: hlt    
<nmethod compile_id='25' compiler='C1' level='3' entry='0x0000000002b264c0' size='1824' address='0x0000000002b26350' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='742' backedge_count='1115' iicount='742' stamp='0.517'/>
<writer thread='26472'/>
<task_queued compile_id='28' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='512' iicount='512' level='3' stamp='0.517' comment='tiered' hot_count='512'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b26a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b6b4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x80]  (sp of caller)
  0x0000000002b26c20: mov    0x8(%rdx),%r10d
  0x0000000002b26c24: shl    $0x3,%r10
  0x0000000002b26c28: cmp    %rax,%r10
  0x0000000002b26c2b: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b26c31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b26c3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b26c40: mov    %eax,-0x6000(%rsp)
  0x0000000002b26c47: push   %rbp
  0x0000000002b26c48: sub    $0x70,%rsp
  0x0000000002b26c4c: mov    %rdx,0x48(%rsp)
  0x0000000002b26c51: movabs $0x1b866a08,%rsi   ;   {metadata(method data for {method} {0x000000001b6b4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b26c5b: mov    0xdc(%rsi),%edi
  0x0000000002b26c61: add    $0x8,%edi
  0x0000000002b26c64: mov    %edi,0xdc(%rsi)
  0x0000000002b26c6a: movabs $0x1b6b4328,%rsi   ;   {metadata({method} {0x000000001b6b4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b26c74: and    $0x1ff8,%edi
  0x0000000002b26c7a: cmp    $0x0,%edi
  0x0000000002b26c7d: je     0x0000000002b26fd0  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 418)

  0x0000000002b26c83: cmp    $0x0,%r8
  0x0000000002b26c87: movabs $0x1b866a08,%rsi   ;   {metadata(method data for {method} {0x000000001b6b4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b26c91: movabs $0x108,%rdi
  0x0000000002b26c9b: jne    0x0000000002b26cab
  0x0000000002b26ca1: movabs $0x118,%rdi
  0x0000000002b26cab: mov    (%rsi,%rdi,1),%rbx
  0x0000000002b26caf: lea    0x1(%rbx),%rbx
  0x0000000002b26cb3: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002b26cb7: je     0x0000000002b26faa  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 418)

  0x0000000002b26cbd: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ; implicit exception: dispatches to 0x0000000002b26fe7
  0x0000000002b26cc0: mov    %r8,%rsi
  0x0000000002b26cc3: movabs $0x1b866a08,%rdi   ;   {metadata(method data for {method} {0x000000001b6b4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b26ccd: mov    0x8(%rsi),%esi
  0x0000000002b26cd0: shl    $0x3,%rsi
  0x0000000002b26cd4: cmp    0x140(%rdi),%rsi
  0x0000000002b26cdb: jne    0x0000000002b26cea
  0x0000000002b26cdd: addq   $0x1,0x148(%rdi)
  0x0000000002b26ce5: jmpq   0x0000000002b26d50
  0x0000000002b26cea: cmp    0x150(%rdi),%rsi
  0x0000000002b26cf1: jne    0x0000000002b26d00
  0x0000000002b26cf3: addq   $0x1,0x158(%rdi)
  0x0000000002b26cfb: jmpq   0x0000000002b26d50
  0x0000000002b26d00: cmpq   $0x0,0x140(%rdi)
  0x0000000002b26d0b: jne    0x0000000002b26d24
  0x0000000002b26d0d: mov    %rsi,0x140(%rdi)
  0x0000000002b26d14: movq   $0x1,0x148(%rdi)
  0x0000000002b26d1f: jmpq   0x0000000002b26d50
  0x0000000002b26d24: cmpq   $0x0,0x150(%rdi)
  0x0000000002b26d2f: jne    0x0000000002b26d48
  0x0000000002b26d31: mov    %rsi,0x150(%rdi)
  0x0000000002b26d38: movq   $0x1,0x158(%rdi)
  0x0000000002b26d43: jmpq   0x0000000002b26d50
  0x0000000002b26d48: addq   $0x1,0x138(%rdi)
  0x0000000002b26d50: movabs $0x1b770bd8,%rsi   ;   {metadata(method data for {method} {0x000000001b643c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b26d5a: mov    0xdc(%rsi),%edi
  0x0000000002b26d60: add    $0x8,%edi
  0x0000000002b26d63: mov    %edi,0xdc(%rsi)
  0x0000000002b26d69: movabs $0x1b643c18,%rsi   ;   {metadata({method} {0x000000001b643c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b26d73: and    $0x7ffff8,%edi
  0x0000000002b26d79: cmp    $0x0,%edi
  0x0000000002b26d7c: je     0x0000000002b26fec
  0x0000000002b26d82: mov    0xc(%r8),%esi
  0x0000000002b26d86: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)

  0x0000000002b26d8a: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ; implicit exception: dispatches to 0x0000000002b27003
  0x0000000002b26d8d: mov    %esi,0x58(%rsp)
  0x0000000002b26d91: mov    0xc(%rdx),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 421)

  0x0000000002b26d94: add    %esi,%edi
  0x0000000002b26d96: mov    %rdx,%rbx
  0x0000000002b26d99: movabs $0x1b866a08,%rax   ;   {metadata(method data for {method} {0x000000001b6b4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b26da3: addq   $0x1,0x168(%rax)
  0x0000000002b26dab: movabs $0x1b83ef10,%rbx   ;   {metadata(method data for {method} {0x000000001b6b3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b26db5: mov    0xdc(%rbx),%eax
  0x0000000002b26dbb: add    $0x8,%eax
  0x0000000002b26dbe: mov    %eax,0xdc(%rbx)
  0x0000000002b26dc4: movabs $0x1b6b3a78,%rbx   ;   {metadata({method} {0x000000001b6b3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b26dce: and    $0x7ffff8,%eax
  0x0000000002b26dd4: cmp    $0x0,%eax
  0x0000000002b26dd7: je     0x0000000002b27008
  0x0000000002b26ddd: mov    0x10(%rdx),%ebx
  0x0000000002b26de0: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)

  0x0000000002b26de4: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ; implicit exception: dispatches to 0x0000000002b2701f
  0x0000000002b26de7: mov    %rdi,%rax
  0x0000000002b26dea: sub    %ebx,%eax
  0x0000000002b26dec: cmp    $0x0,%eax
  0x0000000002b26def: movabs $0x1b83ef10,%rbx   ;   {metadata(method data for {method} {0x000000001b6b3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b26df9: movabs $0x108,%rax
  0x0000000002b26e03: jle    0x0000000002b26e13
  0x0000000002b26e09: movabs $0x118,%rax
  0x0000000002b26e13: mov    (%rbx,%rax,1),%rcx
  0x0000000002b26e17: lea    0x1(%rcx),%rcx
  0x0000000002b26e1b: mov    %rcx,(%rbx,%rax,1)
  0x0000000002b26e1f: mov    %r8,0x50(%rsp)
  0x0000000002b26e24: jle    0x0000000002b26ecc  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)

  0x0000000002b26e2a: mov    %rdx,%rbx
  0x0000000002b26e2d: movabs $0x1b83ef10,%rax   ;   {metadata(method data for {method} {0x000000001b6b3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b26e37: mov    0x8(%rbx),%ebx
  0x0000000002b26e3a: shl    $0x3,%rbx
  0x0000000002b26e3e: cmp    0x130(%rax),%rbx
  0x0000000002b26e45: jne    0x0000000002b26e54
  0x0000000002b26e47: addq   $0x1,0x138(%rax)
  0x0000000002b26e4f: jmpq   0x0000000002b26eba
  0x0000000002b26e54: cmp    0x140(%rax),%rbx
  0x0000000002b26e5b: jne    0x0000000002b26e6a
  0x0000000002b26e5d: addq   $0x1,0x148(%rax)
  0x0000000002b26e65: jmpq   0x0000000002b26eba
  0x0000000002b26e6a: cmpq   $0x0,0x130(%rax)
  0x0000000002b26e75: jne    0x0000000002b26e8e
  0x0000000002b26e77: mov    %rbx,0x130(%rax)
  0x0000000002b26e7e: movq   $0x1,0x138(%rax)
  0x0000000002b26e89: jmpq   0x0000000002b26eba
  0x0000000002b26e8e: cmpq   $0x0,0x140(%rax)
  0x0000000002b26e99: jne    0x0000000002b26eb2
  0x0000000002b26e9b: mov    %rbx,0x140(%rax)
  0x0000000002b26ea2: movq   $0x1,0x148(%rax)
  0x0000000002b26ead: jmpq   0x0000000002b26eba
  0x0000000002b26eb2: addq   $0x1,0x128(%rax)
  0x0000000002b26eba: mov    %rdi,%r8
  0x0000000002b26ebd: mov    %rdx,%rdi
  0x0000000002b26ec0: mov    %rdi,%rdx          ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)

  0x0000000002b26ec3: nop
  0x0000000002b26ec4: nop
  0x0000000002b26ec5: nop
  0x0000000002b26ec6: nop
  0x0000000002b26ec7: callq  0x0000000002a561a0  ; OopMap{[72]=Oop [80]=Oop off=684}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ;   {optimized virtual_call}
  0x0000000002b26ecc: mov    0x58(%rsp),%esi
  0x0000000002b26ed0: mov    0x50(%rsp),%rbx
  0x0000000002b26ed5: mov    0x48(%rsp),%rdx
  0x0000000002b26eda: mov    0x10(%rdx),%edi
  0x0000000002b26edd: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 422)

  0x0000000002b26ee1: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 422)

  0x0000000002b26ee4: mov    %rbx,%r8
  0x0000000002b26ee7: movabs $0x1b866a08,%r9    ;   {metadata(method data for {method} {0x000000001b6b4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b26ef1: mov    0x8(%r8),%r8d
  0x0000000002b26ef5: shl    $0x3,%r8
  0x0000000002b26ef9: cmp    0x180(%r9),%r8
  0x0000000002b26f00: jne    0x0000000002b26f0f
  0x0000000002b26f02: addq   $0x1,0x188(%r9)
  0x0000000002b26f0a: jmpq   0x0000000002b26f75
  0x0000000002b26f0f: cmp    0x190(%r9),%r8
  0x0000000002b26f16: jne    0x0000000002b26f25
  0x0000000002b26f18: addq   $0x1,0x198(%r9)
  0x0000000002b26f20: jmpq   0x0000000002b26f75
  0x0000000002b26f25: cmpq   $0x0,0x180(%r9)
  0x0000000002b26f30: jne    0x0000000002b26f49
  0x0000000002b26f32: mov    %r8,0x180(%r9)
  0x0000000002b26f39: movq   $0x1,0x188(%r9)
  0x0000000002b26f44: jmpq   0x0000000002b26f75
  0x0000000002b26f49: cmpq   $0x0,0x190(%r9)
  0x0000000002b26f54: jne    0x0000000002b26f6d
  0x0000000002b26f56: mov    %r8,0x190(%r9)
  0x0000000002b26f5d: movq   $0x1,0x198(%r9)
  0x0000000002b26f68: jmpq   0x0000000002b26f75
  0x0000000002b26f6d: addq   $0x1,0x178(%r9)
  0x0000000002b26f75: mov    $0x0,%r8d
  0x0000000002b26f7b: mov    %rsi,%r9
  0x0000000002b26f7e: mov    %rax,%rsi
  0x0000000002b26f81: mov    %rbx,%rdx          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 422)

  0x0000000002b26f84: nop
  0x0000000002b26f85: nop
  0x0000000002b26f86: nop
  0x0000000002b26f87: callq  0x0000000002a561a0  ; OopMap{[72]=Oop off=876}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 422)
                                                ;   {optimized virtual_call}
  0x0000000002b26f8c: mov    0x48(%rsp),%rdx
  0x0000000002b26f91: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 423)

  0x0000000002b26f94: add    0x58(%rsp),%eax
  0x0000000002b26f98: mov    %eax,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 423)

  0x0000000002b26f9b: mov    %rdx,%rax
  0x0000000002b26f9e: add    $0x70,%rsp
  0x0000000002b26fa2: pop    %rbp
  0x0000000002b26fa3: test   %eax,-0x2166ea9(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b26fa9: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 424)

  0x0000000002b26faa: mov    %rdx,%rsi
  0x0000000002b26fad: movabs $0x1b866a08,%rdi   ;   {metadata(method data for {method} {0x000000001b6b4330} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b26fb7: addq   $0x1,0x128(%rdi)
  0x0000000002b26fbf: callq  0x0000000002a561a0  ; OopMap{off=932}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 419)
                                                ;   {optimized virtual_call}
  0x0000000002b26fc4: add    $0x70,%rsp
  0x0000000002b26fc8: pop    %rbp
  0x0000000002b26fc9: test   %eax,-0x2166ecf(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b26fcf: retq   
  0x0000000002b26fd0: mov    %rsi,0x8(%rsp)
  0x0000000002b26fd5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b26fdd: callq  0x0000000002b13560  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=962}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 418)
                                                ;   {runtime_call}
  0x0000000002b26fe2: jmpq   0x0000000002b26c83
  0x0000000002b26fe7: callq  0x0000000002a80dc0  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=972}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ;   {runtime_call}
  0x0000000002b26fec: mov    %rsi,0x8(%rsp)
  0x0000000002b26ff1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b26ff9: callq  0x0000000002b13560  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=990}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ;   {runtime_call}
  0x0000000002b26ffe: jmpq   0x0000000002b26d82
  0x0000000002b27003: callq  0x0000000002a80dc0  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=1000}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ;   {runtime_call}
  0x0000000002b27008: mov    %rbx,0x8(%rsp)
  0x0000000002b2700d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b27015: callq  0x0000000002b13560  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=1018}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ;   {runtime_call}
  0x0000000002b2701a: jmpq   0x0000000002b26ddd
  0x0000000002b2701f: callq  0x0000000002a80dc0  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=1028}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ;   {runtime_call}
  0x0000000002b27024: nop
  0x0000000002b27025: nop
  0x0000000002b27026: mov    0x2a8(%r15),%rax
  0x0000000002b2702d: movabs $0x0,%r10
  0x0000000002b27037: mov    %r10,0x2a8(%r15)
  0x0000000002b2703e: movabs $0x0,%r10
  0x0000000002b27048: mov    %r10,0x2b0(%r15)
  0x0000000002b2704f: add    $0x70,%rsp
  0x0000000002b27053: pop    %rbp
  0x0000000002b27054: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b27059: hlt    
  0x0000000002b2705a: hlt    
  0x0000000002b2705b: hlt    
  0x0000000002b2705c: hlt    
  0x0000000002b2705d: hlt    
  0x0000000002b2705e: hlt    
  0x0000000002b2705f: hlt    
[Stub Code]
  0x0000000002b27060: nop                       ;   {no_reloc}
  0x0000000002b27061: nop
  0x0000000002b27062: nop
  0x0000000002b27063: nop
  0x0000000002b27064: nop
  0x0000000002b27065: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b2706f: jmpq   0x0000000002b2706f  ;   {runtime_call}
  0x0000000002b27074: nop
  0x0000000002b27075: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b2707f: jmpq   0x0000000002b2707f  ;   {runtime_call}
  0x0000000002b27084: nop
  0x0000000002b27085: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b2708f: jmpq   0x0000000002b2708f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b27094: callq  0x0000000002a7f5a0  ;   {runtime_call}
  0x0000000002b27099: mov    %rsp,-0x28(%rsp)
  0x0000000002b2709e: sub    $0x80,%rsp
  0x0000000002b270a5: mov    %rax,0x78(%rsp)
  0x0000000002b270aa: mov    %rcx,0x70(%rsp)
  0x0000000002b270af: mov    %rdx,0x68(%rsp)
  0x0000000002b270b4: mov    %rbx,0x60(%rsp)
  0x0000000002b270b9: mov    %rbp,0x50(%rsp)
  0x0000000002b270be: mov    %rsi,0x48(%rsp)
  0x0000000002b270c3: mov    %rdi,0x40(%rsp)
  0x0000000002b270c8: mov    %r8,0x38(%rsp)
  0x0000000002b270cd: mov    %r9,0x30(%rsp)
  0x0000000002b270d2: mov    %r10,0x28(%rsp)
  0x0000000002b270d7: mov    %r11,0x20(%rsp)
  0x0000000002b270dc: mov    %r12,0x18(%rsp)
  0x0000000002b270e1: mov    %r13,0x10(%rsp)
  0x0000000002b270e6: mov    %r14,0x8(%rsp)
  0x0000000002b270eb: mov    %r15,(%rsp)
  0x0000000002b270ef: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b270f9: movabs $0x2b27099,%rdx    ;   {internal_word}
  0x0000000002b27103: mov    %rsp,%r8
  0x0000000002b27106: and    $0xfffffffffffffff0,%rsp
  0x0000000002b2710a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b2710f: hlt    
[Deopt Handler Code]
  0x0000000002b27110: movabs $0x2b27110,%r10    ;   {section_word}
  0x0000000002b2711a: push   %r10
  0x0000000002b2711c: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b27121: hlt    
  0x0000000002b27122: hlt    
  0x0000000002b27123: hlt    
  0x0000000002b27124: hlt    
  0x0000000002b27125: hlt    
  0x0000000002b27126: hlt    
  0x0000000002b27127: hlt    
<nmethod compile_id='27' compiler='C1' level='3' entry='0x0000000002b26c20' size='2440' address='0x0000000002b26a90' relocation_offset='288' insts_offset='400' stub_offset='1488' scopes_data_offset='1720' scopes_pcs_offset='1968' dependencies_offset='2400' nul_chk_table_offset='2408' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='771' iicount='771' stamp='0.532'/>
<writer thread='26472'/>
<task_queued compile_id='29' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3712' iicount='3712' level='3' stamp='0.532' comment='tiered' hot_count='3712'/>
<task_queued compile_id='30' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='7168' iicount='7168' stamp='0.533' comment='tiered' hot_count='7168'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b27450:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b6b7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b275c0: mov    0x8(%rdx),%r10d
  0x0000000002b275c4: shl    $0x3,%r10
  0x0000000002b275c8: cmp    %rax,%r10
  0x0000000002b275cb: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b275d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b275dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b275e0: mov    %eax,-0x6000(%rsp)
  0x0000000002b275e7: push   %rbp
  0x0000000002b275e8: sub    $0x30,%rsp
  0x0000000002b275ec: movabs $0x1b870a00,%rsi   ;   {metadata(method data for {method} {0x000000001b6b7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b275f6: mov    0xdc(%rsi),%edi
  0x0000000002b275fc: add    $0x8,%edi
  0x0000000002b275ff: mov    %edi,0xdc(%rsi)
  0x0000000002b27605: movabs $0x1b6b7738,%rsi   ;   {metadata({method} {0x000000001b6b7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b2760f: and    $0x1ff8,%edi
  0x0000000002b27615: cmp    $0x0,%edi
  0x0000000002b27618: je     0x0000000002b27655  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x0000000002b2761e: mov    %rdx,%rsi
  0x0000000002b27621: movabs $0x1b870a00,%rdi   ;   {metadata(method data for {method} {0x000000001b6b7740} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b2762b: addq   $0x1,0x108(%rdi)
  0x0000000002b27633: mov    %rdx,%rsi
  0x0000000002b27636: mov    %rsi,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x0000000002b27639: mov    %rsi,0x20(%rsp)
  0x0000000002b2763e: nop
  0x0000000002b2763f: callq  0x0000000002a561a0  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x0000000002b27644: mov    0x20(%rsp),%rax
  0x0000000002b27649: add    $0x30,%rsp
  0x0000000002b2764d: pop    %rbp
  0x0000000002b2764e: test   %eax,-0x2167554(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b27654: retq   
  0x0000000002b27655: mov    %rsi,0x8(%rsp)
  0x0000000002b2765a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b27662: callq  0x0000000002b13560  ; OopMap{rdx=Oop r8=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x0000000002b27667: jmp    0x0000000002b2761e
  0x0000000002b27669: nop
  0x0000000002b2766a: nop
  0x0000000002b2766b: mov    0x2a8(%r15),%rax
  0x0000000002b27672: movabs $0x0,%r10
  0x0000000002b2767c: mov    %r10,0x2a8(%r15)
  0x0000000002b27683: movabs $0x0,%r10
  0x0000000002b2768d: mov    %r10,0x2b0(%r15)
  0x0000000002b27694: add    $0x30,%rsp
  0x0000000002b27698: pop    %rbp
  0x0000000002b27699: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b2769e: hlt    
  0x0000000002b2769f: hlt    
[Stub Code]
  0x0000000002b276a0: nop                       ;   {no_reloc}
  0x0000000002b276a1: nop
  0x0000000002b276a2: nop
  0x0000000002b276a3: nop
  0x0000000002b276a4: nop
  0x0000000002b276a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b276af: jmpq   0x0000000002b276af  ;   {runtime_call}
[Exception Handler]
  0x0000000002b276b4: callq  0x0000000002a7f5a0  ;   {runtime_call}
  0x0000000002b276b9: mov    %rsp,-0x28(%rsp)
  0x0000000002b276be: sub    $0x80,%rsp
  0x0000000002b276c5: mov    %rax,0x78(%rsp)
  0x0000000002b276ca: mov    %rcx,0x70(%rsp)
  0x0000000002b276cf: mov    %rdx,0x68(%rsp)
  0x0000000002b276d4: mov    %rbx,0x60(%rsp)
  0x0000000002b276d9: mov    %rbp,0x50(%rsp)
  0x0000000002b276de: mov    %rsi,0x48(%rsp)
  0x0000000002b276e3: mov    %rdi,0x40(%rsp)
  0x0000000002b276e8: mov    %r8,0x38(%rsp)
  0x0000000002b276ed: mov    %r9,0x30(%rsp)
  0x0000000002b276f2: mov    %r10,0x28(%rsp)
  0x0000000002b276f7: mov    %r11,0x20(%rsp)
  0x0000000002b276fc: mov    %r12,0x18(%rsp)
  0x0000000002b27701: mov    %r13,0x10(%rsp)
  0x0000000002b27706: mov    %r14,0x8(%rsp)
  0x0000000002b2770b: mov    %r15,(%rsp)
  0x0000000002b2770f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b27719: movabs $0x2b276b9,%rdx    ;   {internal_word}
  0x0000000002b27723: mov    %rsp,%r8
  0x0000000002b27726: and    $0xfffffffffffffff0,%rsp
  0x0000000002b2772a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b2772f: hlt    
[Deopt Handler Code]
  0x0000000002b27730: movabs $0x2b27730,%r10    ;   {section_word}
  0x0000000002b2773a: push   %r10
  0x0000000002b2773c: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b27741: hlt    
  0x0000000002b27742: hlt    
  0x0000000002b27743: hlt    
  0x0000000002b27744: hlt    
  0x0000000002b27745: hlt    
  0x0000000002b27746: hlt    
  0x0000000002b27747: hlt    
<nmethod compile_id='26' compiler='C1' level='3' entry='0x0000000002b275c0' size='912' address='0x0000000002b27450' relocation_offset='288' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='645' iicount='645' stamp='0.538'/>
<writer thread='26472'/>
<task_queued compile_id='31' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='6400' iicount='6400' stamp='0.539' comment='tiered' hot_count='6400'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b27810:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b6afe38} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0xa0]  (sp of caller)
  0x0000000002b279a0: mov    0x8(%rdx),%r10d
  0x0000000002b279a4: shl    $0x3,%r10
  0x0000000002b279a8: cmp    %rax,%r10
  0x0000000002b279ab: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b279b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b279bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b279c0: mov    %eax,-0x6000(%rsp)
  0x0000000002b279c7: push   %rbp
  0x0000000002b279c8: sub    $0x90,%rsp
  0x0000000002b279cf: lea    0x70(%rsp),%rsi
  0x0000000002b279d4: mov    %rdx,0x8(%rsi)
  0x0000000002b279d8: mov    (%rdx),%rax
  0x0000000002b279db: mov    %rax,%rdi
  0x0000000002b279de: and    $0x7,%rdi
  0x0000000002b279e2: cmp    $0x5,%rdi
  0x0000000002b279e6: jne    0x0000000002b27a6d
  0x0000000002b279ec: mov    0x8(%rdx),%edi
  0x0000000002b279ef: shl    $0x3,%rdi
  0x0000000002b279f3: mov    0xa8(%rdi),%rdi
  0x0000000002b279fa: or     %r15,%rdi
  0x0000000002b279fd: xor    %rax,%rdi
  0x0000000002b27a00: and    $0xffffffffffffff87,%rdi
  0x0000000002b27a04: je     0x0000000002b27a95
  0x0000000002b27a0a: test   $0x7,%rdi
  0x0000000002b27a11: jne    0x0000000002b27a5a
  0x0000000002b27a13: test   $0x300,%rdi
  0x0000000002b27a1a: jne    0x0000000002b27a39
  0x0000000002b27a1c: and    $0x37f,%rax
  0x0000000002b27a23: mov    %rax,%rdi
  0x0000000002b27a26: or     %r15,%rdi
  0x0000000002b27a29: lock cmpxchg %rdi,(%rdx)
  0x0000000002b27a2e: jne    0x0000000002b27ce5
  0x0000000002b27a34: jmpq   0x0000000002b27a95
  0x0000000002b27a39: mov    0x8(%rdx),%edi
  0x0000000002b27a3c: shl    $0x3,%rdi
  0x0000000002b27a40: mov    0xa8(%rdi),%rdi
  0x0000000002b27a47: or     %r15,%rdi
  0x0000000002b27a4a: lock cmpxchg %rdi,(%rdx)
  0x0000000002b27a4f: jne    0x0000000002b27ce5
  0x0000000002b27a55: jmpq   0x0000000002b27a95
  0x0000000002b27a5a: mov    0x8(%rdx),%edi
  0x0000000002b27a5d: shl    $0x3,%rdi
  0x0000000002b27a61: mov    0xa8(%rdi),%rdi
  0x0000000002b27a68: lock cmpxchg %rdi,(%rdx)
  0x0000000002b27a6d: mov    (%rdx),%rax
  0x0000000002b27a70: or     $0x1,%rax
  0x0000000002b27a74: mov    %rax,(%rsi)
  0x0000000002b27a77: lock cmpxchg %rsi,(%rdx)
  0x0000000002b27a7c: je     0x0000000002b27a95
  0x0000000002b27a82: sub    %rsp,%rax
  0x0000000002b27a85: and    $0xfffffffffffff007,%rax
  0x0000000002b27a8c: mov    %rax,(%rsi)
  0x0000000002b27a8f: jne    0x0000000002b27ce5
  0x0000000002b27a95: movabs $0x1b83f4a0,%rsi   ;   {metadata(method data for {method} {0x000000001b6afe38} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002b27a9f: mov    0xdc(%rsi),%edi
  0x0000000002b27aa5: add    $0x8,%edi
  0x0000000002b27aa8: mov    %edi,0xdc(%rsi)
  0x0000000002b27aae: movabs $0x1b6afe30,%rsi   ;   {metadata({method} {0x000000001b6afe38} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002b27ab8: and    $0x1ff8,%edi
  0x0000000002b27abe: cmp    $0x0,%edi
  0x0000000002b27ac1: je     0x0000000002b27cf8  ;*aload_0
                                                ; - java.lang.StringBuffer::append@0 (line 382)

  0x0000000002b27ac7: movl   $0x0,0x14(%rdx)
  0x0000000002b27ace: mov    %rdx,%rsi
  0x0000000002b27ad1: shr    $0x9,%rsi
  0x0000000002b27ad5: movabs $0xe7c2000,%rdi
  0x0000000002b27adf: movb   $0x0,(%rsi,%rdi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 382)

  0x0000000002b27ae3: mov    %rdx,%rsi
  0x0000000002b27ae6: movabs $0x1b83f4a0,%rdi   ;   {metadata(method data for {method} {0x000000001b6afe38} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002b27af0: addq   $0x1,0x108(%rdi)
  0x0000000002b27af8: movabs $0x1b83f0b0,%rsi   ;   {metadata(method data for {method} {0x000000001b6b4b10} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b27b02: mov    0xdc(%rsi),%edi
  0x0000000002b27b08: add    $0x8,%edi
  0x0000000002b27b0b: mov    %edi,0xdc(%rsi)
  0x0000000002b27b11: movabs $0x1b6b4b08,%rsi   ;   {metadata({method} {0x000000001b6b4b10} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b27b1b: and    $0x7ffff8,%edi
  0x0000000002b27b21: cmp    $0x0,%edi
  0x0000000002b27b24: je     0x0000000002b27d0f
  0x0000000002b27b2a: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002b27b2d: inc    %esi
  0x0000000002b27b2f: mov    %rdx,%rdi
  0x0000000002b27b32: movabs $0x1b83f0b0,%rbx   ;   {metadata(method data for {method} {0x000000001b6b4b10} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b27b3c: addq   $0x1,0x108(%rbx)
  0x0000000002b27b44: movabs $0x1b83ef10,%rdi   ;   {metadata(method data for {method} {0x000000001b6b3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b27b4e: mov    0xdc(%rdi),%ebx
  0x0000000002b27b54: add    $0x8,%ebx
  0x0000000002b27b57: mov    %ebx,0xdc(%rdi)
  0x0000000002b27b5d: movabs $0x1b6b3a78,%rdi   ;   {metadata({method} {0x000000001b6b3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b27b67: and    $0x7ffff8,%ebx
  0x0000000002b27b6d: cmp    $0x0,%ebx
  0x0000000002b27b70: je     0x0000000002b27d26
  0x0000000002b27b76: mov    0x10(%rdx),%edi
  0x0000000002b27b79: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002b27b7d: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ; implicit exception: dispatches to 0x0000000002b27d3d
  0x0000000002b27b80: mov    %rsi,%rbx
  0x0000000002b27b83: sub    %edi,%ebx
  0x0000000002b27b85: cmp    $0x0,%ebx
  0x0000000002b27b88: movabs $0x1b83ef10,%rdi   ;   {metadata(method data for {method} {0x000000001b6b3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b27b92: movabs $0x108,%rbx
  0x0000000002b27b9c: jle    0x0000000002b27bac
  0x0000000002b27ba2: movabs $0x118,%rbx
  0x0000000002b27bac: mov    (%rdi,%rbx,1),%rax
  0x0000000002b27bb0: lea    0x1(%rax),%rax
  0x0000000002b27bb4: mov    %rax,(%rdi,%rbx,1)
  0x0000000002b27bb8: mov    %r8d,0x68(%rsp)
  0x0000000002b27bbd: jg     0x0000000002b27bcd  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002b27bc3: mov    %rdx,0x60(%rsp)
  0x0000000002b27bc8: jmpq   0x0000000002b27c74  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002b27bcd: mov    %rdx,%rdi
  0x0000000002b27bd0: movabs $0x1b83ef10,%rbx   ;   {metadata(method data for {method} {0x000000001b6b3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b27bda: mov    0x8(%rdi),%edi
  0x0000000002b27bdd: shl    $0x3,%rdi
  0x0000000002b27be1: cmp    0x130(%rbx),%rdi
  0x0000000002b27be8: jne    0x0000000002b27bf7
  0x0000000002b27bea: addq   $0x1,0x138(%rbx)
  0x0000000002b27bf2: jmpq   0x0000000002b27c5d
  0x0000000002b27bf7: cmp    0x140(%rbx),%rdi
  0x0000000002b27bfe: jne    0x0000000002b27c0d
  0x0000000002b27c00: addq   $0x1,0x148(%rbx)
  0x0000000002b27c08: jmpq   0x0000000002b27c5d
  0x0000000002b27c0d: cmpq   $0x0,0x130(%rbx)
  0x0000000002b27c18: jne    0x0000000002b27c31
  0x0000000002b27c1a: mov    %rdi,0x130(%rbx)
  0x0000000002b27c21: movq   $0x1,0x138(%rbx)
  0x0000000002b27c2c: jmpq   0x0000000002b27c5d
  0x0000000002b27c31: cmpq   $0x0,0x140(%rbx)
  0x0000000002b27c3c: jne    0x0000000002b27c55
  0x0000000002b27c3e: mov    %rdi,0x140(%rbx)
  0x0000000002b27c45: movq   $0x1,0x148(%rbx)
  0x0000000002b27c50: jmpq   0x0000000002b27c5d
  0x0000000002b27c55: addq   $0x1,0x128(%rbx)
  0x0000000002b27c5d: mov    %rsi,%r8
  0x0000000002b27c60: mov    %rdx,%rsi
  0x0000000002b27c63: mov    %rsi,%rdx          ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002b27c66: mov    %rsi,0x60(%rsp)
  0x0000000002b27c6b: nop
  0x0000000002b27c6c: nop
  0x0000000002b27c6d: nop
  0x0000000002b27c6e: nop
  0x0000000002b27c6f: callq  0x0000000002a561a0  ; OopMap{[96]=Oop [120]=Oop off=724}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {optimized virtual_call}
  0x0000000002b27c74: mov    0x68(%rsp),%r8d
  0x0000000002b27c79: mov    0x60(%rsp),%rdx
  0x0000000002b27c7e: mov    0x10(%rdx),%eax
  0x0000000002b27c81: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002b27c85: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002b27c88: mov    %rsi,%rdi
  0x0000000002b27c8b: inc    %edi
  0x0000000002b27c8d: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002b27c90: movslq %esi,%rdi
  0x0000000002b27c93: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002b27d42
  0x0000000002b27c96: jae    0x0000000002b27d4c
  0x0000000002b27c9c: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x0000000002b27ca2: lea    0x70(%rsp),%rax
  0x0000000002b27ca7: mov    0x8(%rax),%rdi
  0x0000000002b27cab: mov    (%rdi),%rsi
  0x0000000002b27cae: and    $0x7,%rsi
  0x0000000002b27cb2: cmp    $0x5,%rsi
  0x0000000002b27cb6: je     0x0000000002b27cd3
  0x0000000002b27cbc: mov    (%rax),%rsi
  0x0000000002b27cbf: test   %rsi,%rsi
  0x0000000002b27cc2: je     0x0000000002b27cd3
  0x0000000002b27cc8: lock cmpxchg %rsi,(%rdi)
  0x0000000002b27ccd: jne    0x0000000002b27d55  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 384)

  0x0000000002b27cd3: mov    %rdx,%rax
  0x0000000002b27cd6: add    $0x90,%rsp
  0x0000000002b27cdd: pop    %rbp
  0x0000000002b27cde: test   %eax,-0x2167be4(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b27ce4: retq   
  0x0000000002b27ce5: mov    %rdx,0x8(%rsp)
  0x0000000002b27cea: mov    %rsi,(%rsp)
  0x0000000002b27cee: callq  0x0000000002b0f620  ; OopMap{rdx=Oop [120]=Oop off=851}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 382)
                                                ;   {runtime_call}
  0x0000000002b27cf3: jmpq   0x0000000002b27a95
  0x0000000002b27cf8: mov    %rsi,0x8(%rsp)
  0x0000000002b27cfd: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b27d05: callq  0x0000000002b13560  ; OopMap{rdx=Oop [120]=Oop off=874}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 382)
                                                ;   {runtime_call}
  0x0000000002b27d0a: jmpq   0x0000000002b27ac7
  0x0000000002b27d0f: mov    %rsi,0x8(%rsp)
  0x0000000002b27d14: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b27d1c: callq  0x0000000002b13560  ; OopMap{rdx=Oop [120]=Oop off=897}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x0000000002b27d21: jmpq   0x0000000002b27b2a
  0x0000000002b27d26: mov    %rdi,0x8(%rsp)
  0x0000000002b27d2b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b27d33: callq  0x0000000002b13560  ; OopMap{rdx=Oop [120]=Oop off=920}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x0000000002b27d38: jmpq   0x0000000002b27b76
  0x0000000002b27d3d: callq  0x0000000002a80dc0  ; OopMap{rdx=Oop [120]=Oop off=930}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x0000000002b27d42: callq  0x0000000002a80dc0  ; OopMap{rdx=Oop rax=Oop [120]=Oop off=935}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x0000000002b27d47: callq  0x0000000002a80dc0  ; OopMap{rdx=Oop rax=Oop [120]=Oop off=940}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x0000000002b27d4c: mov    %rsi,(%rsp)
  0x0000000002b27d50: callq  0x0000000002a81480  ; OopMap{rdx=Oop rax=Oop [120]=Oop off=949}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x0000000002b27d55: lea    0x70(%rsp),%rax
  0x0000000002b27d5a: mov    %rax,(%rsp)
  0x0000000002b27d5e: callq  0x0000000002b0f220  ;   {runtime_call}
  0x0000000002b27d63: jmpq   0x0000000002b27cd3
  0x0000000002b27d68: nop
  0x0000000002b27d69: nop
  0x0000000002b27d6a: mov    0x2a8(%r15),%rax
  0x0000000002b27d71: movabs $0x0,%r10
  0x0000000002b27d7b: mov    %r10,0x2a8(%r15)
  0x0000000002b27d82: movabs $0x0,%r10
  0x0000000002b27d8c: mov    %r10,0x2b0(%r15)
  0x0000000002b27d93: mov    %rax,%rbx
  0x0000000002b27d96: lea    0x70(%rsp),%rax
  0x0000000002b27d9b: mov    0x8(%rax),%rsi
  0x0000000002b27d9f: mov    (%rsi),%rdi
  0x0000000002b27da2: and    $0x7,%rdi
  0x0000000002b27da6: cmp    $0x5,%rdi
  0x0000000002b27daa: je     0x0000000002b27dc7
  0x0000000002b27db0: mov    (%rax),%rdi
  0x0000000002b27db3: test   %rdi,%rdi
  0x0000000002b27db6: je     0x0000000002b27dc7
  0x0000000002b27dbc: lock cmpxchg %rdi,(%rsi)
  0x0000000002b27dc1: jne    0x0000000002b27dd7
  0x0000000002b27dc7: mov    %rbx,%rax
  0x0000000002b27dca: add    $0x90,%rsp
  0x0000000002b27dd1: pop    %rbp
  0x0000000002b27dd2: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b27dd7: lea    0x70(%rsp),%rax
  0x0000000002b27ddc: mov    %rax,(%rsp)
  0x0000000002b27de0: callq  0x0000000002b0f220  ;   {runtime_call}
  0x0000000002b27de5: jmp    0x0000000002b27dc7
  0x0000000002b27de7: hlt    
  0x0000000002b27de8: hlt    
  0x0000000002b27de9: hlt    
  0x0000000002b27dea: hlt    
  0x0000000002b27deb: hlt    
  0x0000000002b27dec: hlt    
  0x0000000002b27ded: hlt    
  0x0000000002b27dee: hlt    
  0x0000000002b27def: hlt    
  0x0000000002b27df0: hlt    
  0x0000000002b27df1: hlt    
  0x0000000002b27df2: hlt    
  0x0000000002b27df3: hlt    
  0x0000000002b27df4: hlt    
  0x0000000002b27df5: hlt    
  0x0000000002b27df6: hlt    
  0x0000000002b27df7: hlt    
  0x0000000002b27df8: hlt    
  0x0000000002b27df9: hlt    
  0x0000000002b27dfa: hlt    
  0x0000000002b27dfb: hlt    
  0x0000000002b27dfc: hlt    
  0x0000000002b27dfd: hlt    
  0x0000000002b27dfe: hlt    
  0x0000000002b27dff: hlt    
[Stub Code]
  0x0000000002b27e00: nop                       ;   {no_reloc}
  0x0000000002b27e01: nop
  0x0000000002b27e02: nop
  0x0000000002b27e03: nop
  0x0000000002b27e04: nop
  0x0000000002b27e05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b27e0f: jmpq   0x0000000002b27e0f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b27e14: callq  0x0000000002a7f5a0  ;   {runtime_call}
  0x0000000002b27e19: mov    %rsp,-0x28(%rsp)
  0x0000000002b27e1e: sub    $0x80,%rsp
  0x0000000002b27e25: mov    %rax,0x78(%rsp)
  0x0000000002b27e2a: mov    %rcx,0x70(%rsp)
  0x0000000002b27e2f: mov    %rdx,0x68(%rsp)
  0x0000000002b27e34: mov    %rbx,0x60(%rsp)
  0x0000000002b27e39: mov    %rbp,0x50(%rsp)
  0x0000000002b27e3e: mov    %rsi,0x48(%rsp)
  0x0000000002b27e43: mov    %rdi,0x40(%rsp)
  0x0000000002b27e48: mov    %r8,0x38(%rsp)
  0x0000000002b27e4d: mov    %r9,0x30(%rsp)
  0x0000000002b27e52: mov    %r10,0x28(%rsp)
  0x0000000002b27e57: mov    %r11,0x20(%rsp)
  0x0000000002b27e5c: mov    %r12,0x18(%rsp)
  0x0000000002b27e61: mov    %r13,0x10(%rsp)
  0x0000000002b27e66: mov    %r14,0x8(%rsp)
  0x0000000002b27e6b: mov    %r15,(%rsp)
  0x0000000002b27e6f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b27e79: movabs $0x2b27e19,%rdx    ;   {internal_word}
  0x0000000002b27e83: mov    %rsp,%r8
  0x0000000002b27e86: and    $0xfffffffffffffff0,%rsp
  0x0000000002b27e8a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b27e8f: hlt    
[Deopt Handler Code]
  0x0000000002b27e90: movabs $0x2b27e90,%r10    ;   {section_word}
  0x0000000002b27e9a: push   %r10
  0x0000000002b27e9c: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b27ea1: hlt    
  0x0000000002b27ea2: hlt    
  0x0000000002b27ea3: hlt    
  0x0000000002b27ea4: hlt    
  0x0000000002b27ea5: hlt    
  0x0000000002b27ea6: hlt    
  0x0000000002b27ea7: hlt    
<nmethod compile_id='29' compiler='C1' level='3' entry='0x0000000002b279a0' size='2336' address='0x0000000002b27810' relocation_offset='288' insts_offset='400' stub_offset='1520' scopes_data_offset='1712' scopes_pcs_offset='1912' dependencies_offset='2296' nul_chk_table_offset='2304' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3784' iicount='3784' stamp='0.555'/>
Decoding compiled method 0x0000000002b2b010:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b644e48} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b2b180: mov    0x8(%rdx),%r10d
  0x0000000002b2b184: shl    $0x3,%r10
  0x0000000002b2b188: cmp    %rax,%r10
  0x0000000002b2b18b: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b2b191: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b2b19c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b2b1a0: mov    %eax,-0x6000(%rsp)
  0x0000000002b2b1a7: push   %rbp
  0x0000000002b2b1a8: sub    $0x30,%rsp
  0x0000000002b2b1ac: movabs $0x1b912278,%r9    ;   {metadata(method data for {method} {0x000000001b644e48} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b2b1b6: mov    0xdc(%r9),%esi
  0x0000000002b2b1bd: add    $0x8,%esi
  0x0000000002b2b1c0: mov    %esi,0xdc(%r9)
  0x0000000002b2b1c7: movabs $0x1b644e40,%r9    ;   {metadata({method} {0x000000001b644e48} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b2b1d1: and    $0x1ff8,%esi
  0x0000000002b2b1d7: cmp    $0x0,%esi
  0x0000000002b2b1da: je     0x0000000002b2b28b  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x0000000002b2b1e0: mov    %rdx,%r9
  0x0000000002b2b1e3: movabs $0x1b912278,%rsi   ;   {metadata(method data for {method} {0x000000001b644e48} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b2b1ed: mov    0x8(%r9),%r9d
  0x0000000002b2b1f1: shl    $0x3,%r9
  0x0000000002b2b1f5: cmp    0x110(%rsi),%r9
  0x0000000002b2b1fc: jne    0x0000000002b2b20b
  0x0000000002b2b1fe: addq   $0x1,0x118(%rsi)
  0x0000000002b2b206: jmpq   0x0000000002b2b271
  0x0000000002b2b20b: cmp    0x120(%rsi),%r9
  0x0000000002b2b212: jne    0x0000000002b2b221
  0x0000000002b2b214: addq   $0x1,0x128(%rsi)
  0x0000000002b2b21c: jmpq   0x0000000002b2b271
  0x0000000002b2b221: cmpq   $0x0,0x110(%rsi)
  0x0000000002b2b22c: jne    0x0000000002b2b245
  0x0000000002b2b22e: mov    %r9,0x110(%rsi)
  0x0000000002b2b235: movq   $0x1,0x118(%rsi)
  0x0000000002b2b240: jmpq   0x0000000002b2b271
  0x0000000002b2b245: cmpq   $0x0,0x120(%rsi)
  0x0000000002b2b250: jne    0x0000000002b2b269
  0x0000000002b2b252: mov    %r9,0x120(%rsi)
  0x0000000002b2b259: movq   $0x1,0x128(%rsi)
  0x0000000002b2b264: jmpq   0x0000000002b2b271
  0x0000000002b2b269: addq   $0x1,0x108(%rsi)
  0x0000000002b2b271: mov    $0x0,%r9d          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x0000000002b2b277: callq  0x0000000002a561a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x0000000002b2b27c: and    $0x1,%eax
  0x0000000002b2b27f: add    $0x30,%rsp
  0x0000000002b2b283: pop    %rbp
  0x0000000002b2b284: test   %eax,-0x216b18a(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b2b28a: retq   
  0x0000000002b2b28b: mov    %r9,0x8(%rsp)
  0x0000000002b2b290: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b2b298: callq  0x0000000002b13560  ; OopMap{rdx=Oop r8=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x0000000002b2b29d: jmpq   0x0000000002b2b1e0
  0x0000000002b2b2a2: nop
  0x0000000002b2b2a3: nop
  0x0000000002b2b2a4: mov    0x2a8(%r15),%rax
  0x0000000002b2b2ab: movabs $0x0,%r10
  0x0000000002b2b2b5: mov    %r10,0x2a8(%r15)
  0x0000000002b2b2bc: movabs $0x0,%r10
  0x0000000002b2b2c6: mov    %r10,0x2b0(%r15)
  0x0000000002b2b2cd: add    $0x30,%rsp
  0x0000000002b2b2d1: pop    %rbp
  0x0000000002b2b2d2: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b2b2d7: hlt    
  0x0000000002b2b2d8: hlt    
  0x0000000002b2b2d9: hlt    
  0x0000000002b2b2da: hlt    
  0x0000000002b2b2db: hlt    
  0x0000000002b2b2dc: hlt    
  0x0000000002b2b2dd: hlt    
  0x0000000002b2b2de: hlt    
  0x0000000002b2b2df: hlt    
[Stub Code]
  0x0000000002b2b2e0: nop                       ;   {no_reloc}
  0x0000000002b2b2e1: nop
  0x0000000002b2b2e2: nop
  0x0000000002b2b2e3: nop
  0x0000000002b2b2e4: nop
  0x0000000002b2b2e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b2b2ef: jmpq   0x0000000002b2b2ef  ;   {runtime_call}
[Exception Handler]
  0x0000000002b2b2f4: callq  0x0000000002a7f5a0  ;   {runtime_call}
  0x0000000002b2b2f9: mov    %rsp,-0x28(%rsp)
  0x0000000002b2b2fe: sub    $0x80,%rsp
  0x0000000002b2b305: mov    %rax,0x78(%rsp)
  0x0000000002b2b30a: mov    %rcx,0x70(%rsp)
  0x0000000002b2b30f: mov    %rdx,0x68(%rsp)
  0x0000000002b2b314: mov    %rbx,0x60(%rsp)
  0x0000000002b2b319: mov    %rbp,0x50(%rsp)
  0x0000000002b2b31e: mov    %rsi,0x48(%rsp)
  0x0000000002b2b323: mov    %rdi,0x40(%rsp)
  0x0000000002b2b328: mov    %r8,0x38(%rsp)
  0x0000000002b2b32d: mov    %r9,0x30(%rsp)
  0x0000000002b2b332: mov    %r10,0x28(%rsp)
  0x0000000002b2b337: mov    %r11,0x20(%rsp)
  0x0000000002b2b33c: mov    %r12,0x18(%rsp)
  0x0000000002b2b341: mov    %r13,0x10(%rsp)
  0x0000000002b2b346: mov    %r14,0x8(%rsp)
  0x0000000002b2b34b: mov    %r15,(%rsp)
  0x0000000002b2b34f: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b2b359: movabs $0x2b2b2f9,%rdx    ;   {internal_word}
  0x0000000002b2b363: mov    %rsp,%r8
  0x0000000002b2b366: and    $0xfffffffffffffff0,%rsp
  0x0000000002b2b36a: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b2b36f: hlt    
[Deopt Handler Code]
  0x0000000002b2b370: movabs $0x2b2b370,%r10    ;   {section_word}
  0x0000000002b2b37a: push   %r10
  0x0000000002b2b37c: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b2b381: hlt    
  0x0000000002b2b382: hlt    
  0x0000000002b2b383: hlt    
  0x0000000002b2b384: hlt    
  0x0000000002b2b385: hlt    
  0x0000000002b2b386: hlt    
  0x0000000002b2b387: hlt    
<nmethod compile_id='28' compiler='C1' level='3' entry='0x0000000002b2b180' size='1040' address='0x0000000002b2b010' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='514' iicount='514' stamp='0.566'/>
<writer thread='21592'/>
Decoding compiled method 0x0000000002b2e390:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b6b4b10} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x90]  (sp of caller)
  0x0000000002b2e4e0: mov    0x8(%rdx),%r10d
  0x0000000002b2e4e4: shl    $0x3,%r10
  0x0000000002b2e4e8: cmp    %r10,%rax
  0x0000000002b2e4eb: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b2e4f1: data16 xchg %ax,%ax
  0x0000000002b2e4f4: nopl   0x0(%rax,%rax,1)
  0x0000000002b2e4fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b2e500: mov    %eax,-0x6000(%rsp)
  0x0000000002b2e507: push   %rbp
  0x0000000002b2e508: sub    $0x80,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 622)

  0x0000000002b2e50f: mov    %r8d,0x20(%rsp)
  0x0000000002b2e514: mov    %rdx,%rbp
  0x0000000002b2e517: mov    0x10(%rdx),%ecx    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e51a: mov    0xc(%r12,%rcx,8),%r9d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; implicit exception: dispatches to 0x0000000002b2e7e1
  0x0000000002b2e51f: mov    0xc(%rdx),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 622)

  0x0000000002b2e523: mov    %r11d,%ebx
  0x0000000002b2e526: sub    %r9d,%ebx
  0x0000000002b2e529: mov    %rcx,%r10
  0x0000000002b2e52c: shl    $0x3,%r10          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e530: inc    %ebx
  0x0000000002b2e532: mov    %r11d,%r8d
  0x0000000002b2e535: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 622)

  0x0000000002b2e538: test   %ebx,%ebx
  0x0000000002b2e53a: jg     0x0000000002b2e573  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e53c: mov    %r8d,0xc(%rbp)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 623)

  0x0000000002b2e540: test   %r10,%r10
  0x0000000002b2e543: je     0x0000000002b2e75a
  0x0000000002b2e549: mov    0xc(%r10),%r8d
  0x0000000002b2e54d: cmp    %r8d,%r11d
  0x0000000002b2e550: jae    0x0000000002b2e771
  0x0000000002b2e556: mov    0x20(%rsp),%r8d
  0x0000000002b2e55b: mov    %r8w,0x10(%r10,%r11,2)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 622)

  0x0000000002b2e561: mov    %rbp,%rax
  0x0000000002b2e564: add    $0x80,%rsp
  0x0000000002b2e56b: pop    %rbp
  0x0000000002b2e56c: test   %eax,-0x216e572(%rip)        # 0x00000000009c0000
                                                ;   {poll_return}
  0x0000000002b2e572: retq   
  0x0000000002b2e573: mov    %r9d,%ebx
  0x0000000002b2e576: shl    %ebx               ;*imul
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@6 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e578: mov    %ebx,%edi
  0x0000000002b2e57a: sub    %r11d,%edi
  0x0000000002b2e57d: inc    %edi
  0x0000000002b2e57f: test   %edi,%edi
  0x0000000002b2e581: jge    0x0000000002b2e694  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@13 (line 130)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e587: test   %r8d,%r8d
  0x0000000002b2e58a: jge    0x0000000002b2e59b  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e58c: test   %r8d,%r8d
  0x0000000002b2e58f: jl     0x0000000002b2e7d3  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@23 (line 133)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e595: mov    $0x7fffffff,%r8d   ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@37 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e59b: cmp    %r8d,%r9d
  0x0000000002b2e59e: mov    %r8d,%r11d
  0x0000000002b2e5a1: cmovl  %r9d,%r11d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e5a5: movslq %r8d,%rdi
  0x0000000002b2e5a8: lea    (%r12,%rcx,8),%rsi  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e5ac: shl    %rdi
  0x0000000002b2e5af: add    $0x17,%rdi         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e5b3: mov    %rdi,%rdx
  0x0000000002b2e5b6: shr    $0x3,%rdx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e5ba: and    $0xfffffffffffffff8,%rdi  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e5be: mov    %rdx,%rax
  0x0000000002b2e5c1: add    $0xfffffffffffffffe,%rax  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e5c5: cmp    $0x80000,%r8d
  0x0000000002b2e5cc: ja     0x0000000002b2e6ed
  0x0000000002b2e5d2: mov    0x60(%r15),%rbx
  0x0000000002b2e5d6: mov    %rbx,%r13
  0x0000000002b2e5d9: add    %rdi,%r13
  0x0000000002b2e5dc: cmp    0x70(%r15),%r13
  0x0000000002b2e5e0: jae    0x0000000002b2e6ed
  0x0000000002b2e5e6: mov    %r13,0x60(%r15)
  0x0000000002b2e5ea: prefetchw 0xc0(%r13)
  0x0000000002b2e5f2: movq   $0x1,(%rbx)
  0x0000000002b2e5f9: prefetchw 0x100(%r13)
  0x0000000002b2e601: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x0000000002b2e608: mov    %r8d,0xc(%rbx)
  0x0000000002b2e60c: prefetchw 0x140(%r13)
  0x0000000002b2e614: prefetchw 0x180(%r13)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e61c: mov    %rbx,%r10
  0x0000000002b2e61f: add    $0x10,%r10
  0x0000000002b2e623: cmp    %r11d,%r9d
  0x0000000002b2e626: jb     0x0000000002b2e789
  0x0000000002b2e62c: cmp    %r11d,%r8d
  0x0000000002b2e62f: jb     0x0000000002b2e789
  0x0000000002b2e635: test   %r11d,%r11d
  0x0000000002b2e638: jle    0x0000000002b2e7be
  0x0000000002b2e63e: lea    0x10(%r12,%rcx,8),%r9
  0x0000000002b2e643: cmp    %r8d,%r11d
  0x0000000002b2e646: jl     0x0000000002b2e6a7
  0x0000000002b2e648: add    $0xfffffffffffffff0,%rdi
  0x0000000002b2e64c: shr    $0x3,%rdi
  0x0000000002b2e650: mov    %r9,%rcx
  0x0000000002b2e653: mov    %r10,%rdx
  0x0000000002b2e656: mov    %rdi,%r8
  0x0000000002b2e659: movabs $0x2a62ca0,%r10
  0x0000000002b2e663: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e666: mov    0xc(%rbp),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 623)

  0x0000000002b2e66a: mov    %rbx,%r8
  0x0000000002b2e66d: shr    $0x3,%r8
  0x0000000002b2e671: mov    %r8d,0x10(%rbp)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@46 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e675: mov    %r11d,%r8d
  0x0000000002b2e678: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 623)

  0x0000000002b2e67b: mov    %rbp,%r10
  0x0000000002b2e67e: shr    $0x9,%r10
  0x0000000002b2e682: mov    $0xe7c2000,%r9d
  0x0000000002b2e688: mov    %r12b,(%r9,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@46 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e68c: mov    %rbx,%r10
  0x0000000002b2e68f: jmpq   0x0000000002b2e53c
  0x0000000002b2e694: add    $0x2,%ebx          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@8 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e697: test   %ebx,%ebx
  0x0000000002b2e699: jl     0x0000000002b2e58c  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e69f: mov    %ebx,%r8d
  0x0000000002b2e6a2: jmpq   0x0000000002b2e59b
  0x0000000002b2e6a7: movslq %r11d,%r8
  0x0000000002b2e6aa: mov    %r8,%r11
  0x0000000002b2e6ad: shl    %r11
  0x0000000002b2e6b0: add    $0x10,%r11
  0x0000000002b2e6b4: mov    %r11,%rcx
  0x0000000002b2e6b7: and    $0xfffffffffffffff9,%rcx
  0x0000000002b2e6bb: mov    %rbx,%rdi
  0x0000000002b2e6be: add    %rcx,%rdi
  0x0000000002b2e6c1: shr    $0x3,%r11
  0x0000000002b2e6c5: sub    %r11,%rdx
  0x0000000002b2e6c8: mov    %rdx,%rcx
  0x0000000002b2e6cb: xor    %rax,%rax
  0x0000000002b2e6ce: shl    $0x3,%rcx
  0x0000000002b2e6d2: rep rex.W stos %al,%es:(%rdi)
  0x0000000002b2e6d5: mov    %r9,%rcx
  0x0000000002b2e6d8: mov    %r10,%rdx
  0x0000000002b2e6db: movabs $0x2a62980,%r10
  0x0000000002b2e6e5: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e6e8: jmpq   0x0000000002b2e666
  0x0000000002b2e6ed: mov    %r9d,0x60(%rsp)
  0x0000000002b2e6f2: mov    %ecx,0x2c(%rsp)
  0x0000000002b2e6f6: mov    %rax,0x48(%rsp)
  0x0000000002b2e6fb: mov    %rdx,0x40(%rsp)
  0x0000000002b2e700: mov    %rsi,0x38(%rsp)
  0x0000000002b2e705: mov    %rdi,0x30(%rsp)
  0x0000000002b2e70a: mov    %r11d,0x28(%rsp)
  0x0000000002b2e70f: mov    %r8d,0x24(%rsp)
  0x0000000002b2e714: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002b2e71e: mov    %r10,0x58(%rsp)
  0x0000000002b2e723: callq  0x0000000002a7e820  ; OopMap{rbp=Oop [44]=NarrowOop [56]=Oop [88]=Oop off=584}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x0000000002b2e728: mov    %rax,%r10
  0x0000000002b2e72b: mov    0x24(%rsp),%r8d
  0x0000000002b2e730: mov    0x28(%rsp),%r11d
  0x0000000002b2e735: mov    0x30(%rsp),%rdi
  0x0000000002b2e73a: mov    0x38(%rsp),%rsi
  0x0000000002b2e73f: mov    0x40(%rsp),%rdx
  0x0000000002b2e744: mov    0x48(%rsp),%rax
  0x0000000002b2e749: mov    0x2c(%rsp),%ecx
  0x0000000002b2e74d: mov    0x60(%rsp),%r9d
  0x0000000002b2e752: mov    %r10,%rbx
  0x0000000002b2e755: jmpq   0x0000000002b2e61c
  0x0000000002b2e75a: mov    $0xfffffff6,%edx
  0x0000000002b2e75f: mov    0x20(%rsp),%ebp
  0x0000000002b2e763: mov    %r11d,0x20(%rsp)
  0x0000000002b2e768: data16 xchg %ax,%ax
  0x0000000002b2e76b: callq  0x0000000002a557a0  ; OopMap{off=656}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ;   {runtime_call}
  0x0000000002b2e770: int3   
  0x0000000002b2e771: mov    $0xffffffe4,%edx
  0x0000000002b2e776: mov    %r10,0x28(%rsp)
  0x0000000002b2e77b: mov    %r11d,0x24(%rsp)
  0x0000000002b2e780: data16 xchg %ax,%ax
  0x0000000002b2e783: callq  0x0000000002a557a0  ; OopMap{rbp=Oop [40]=Oop off=680}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ;   {runtime_call}
  0x0000000002b2e788: int3   
  0x0000000002b2e789: mov    %rax,%rcx
  0x0000000002b2e78c: mov    %r10,%rdi
  0x0000000002b2e78f: xor    %rax,%rax
  0x0000000002b2e792: shl    $0x3,%rcx
  0x0000000002b2e796: rep rex.W stos %al,%es:(%rdi)
  0x0000000002b2e799: mov    %rsi,%rdx
  0x0000000002b2e79c: xor    %r8d,%r8d
  0x0000000002b2e79f: mov    %rbx,%r9
  0x0000000002b2e7a2: xor    %edi,%edi
  0x0000000002b2e7a4: mov    %r11d,%esi
  0x0000000002b2e7a7: mov    %rbx,0x38(%rsp)
  0x0000000002b2e7ac: data16 xchg %ax,%ax
  0x0000000002b2e7af: callq  0x0000000002b119e0  ; OopMap{rbp=Oop [56]=Oop off=724}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x0000000002b2e7b4: mov    0x38(%rsp),%rbx
  0x0000000002b2e7b9: jmpq   0x0000000002b2e666
  0x0000000002b2e7be: mov    %rax,%rcx
  0x0000000002b2e7c1: mov    %r10,%rdi
  0x0000000002b2e7c4: xor    %rax,%rax
  0x0000000002b2e7c7: shl    $0x3,%rcx
  0x0000000002b2e7cb: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e7ce: jmpq   0x0000000002b2e666
  0x0000000002b2e7d3: mov    $0x8d,%edx
  0x0000000002b2e7d8: data16 xchg %ax,%ax
  0x0000000002b2e7db: callq  0x0000000002a557a0  ; OopMap{rbp=Oop off=768}
                                                ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x0000000002b2e7e0: int3                      ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e7e1: mov    $0xfffffff6,%edx
  0x0000000002b2e7e6: nop
  0x0000000002b2e7e7: callq  0x0000000002a557a0  ; OopMap{off=780}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x0000000002b2e7ec: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e7ed: mov    %rax,%rdx
  0x0000000002b2e7f0: jmp    0x0000000002b2e7f5  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e7f2: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@-1 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000002b2e7f5: add    $0x80,%rsp
  0x0000000002b2e7fc: pop    %rbp
  0x0000000002b2e7fd: jmpq   0x0000000002b11aa0  ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@18 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x0000000002b2e802: hlt    
  0x0000000002b2e803: hlt    
  0x0000000002b2e804: hlt    
  0x0000000002b2e805: hlt    
  0x0000000002b2e806: hlt    
  0x0000000002b2e807: hlt    
  0x0000000002b2e808: hlt    
  0x0000000002b2e809: hlt    
  0x0000000002b2e80a: hlt    
  0x0000000002b2e80b: hlt    
  0x0000000002b2e80c: hlt    
  0x0000000002b2e80d: hlt    
  0x0000000002b2e80e: hlt    
  0x0000000002b2e80f: hlt    
  0x0000000002b2e810: hlt    
  0x0000000002b2e811: hlt    
  0x0000000002b2e812: hlt    
  0x0000000002b2e813: hlt    
  0x0000000002b2e814: hlt    
  0x0000000002b2e815: hlt    
  0x0000000002b2e816: hlt    
  0x0000000002b2e817: hlt    
  0x0000000002b2e818: hlt    
  0x0000000002b2e819: hlt    
  0x0000000002b2e81a: hlt    
  0x0000000002b2e81b: hlt    
  0x0000000002b2e81c: hlt    
  0x0000000002b2e81d: hlt    
  0x0000000002b2e81e: hlt    
  0x0000000002b2e81f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b2e820: jmpq   0x0000000002a7eea0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b2e825: callq  0x0000000002b2e82a
  0x0000000002b2e82a: subq   $0x5,(%rsp)
  0x0000000002b2e82f: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b2e834: hlt    
  0x0000000002b2e835: hlt    
  0x0000000002b2e836: hlt    
  0x0000000002b2e837: hlt    
<nmethod compile_id='31' compiler='C2' level='4' entry='0x0000000002b2e4e0' size='2280' address='0x0000000002b2e390' relocation_offset='288' insts_offset='336' stub_offset='1168' scopes_data_offset='1232' scopes_pcs_offset='1520' dependencies_offset='2208' handler_table_offset='2216' nul_chk_table_offset='2264' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='6451' iicount='6451' stamp='0.586'/>
<writer thread='26472'/>
<task_queued compile_id='32' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='4224' iicount='4224' level='3' stamp='0.586' comment='tiered' hot_count='4224'/>
<writer thread='22072'/>
Decoding compiled method 0x0000000002b2dc10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b6b3a80} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x0000000002b2dd60: mov    0x8(%rdx),%r10d
  0x0000000002b2dd64: shl    $0x3,%r10
  0x0000000002b2dd68: cmp    %r10,%rax
  0x0000000002b2dd6b: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b2dd71: data16 xchg %ax,%ax
  0x0000000002b2dd74: nopl   0x0(%rax,%rax,1)
  0x0000000002b2dd7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b2dd80: mov    %eax,-0x6000(%rsp)
  0x0000000002b2dd87: push   %rbp
  0x0000000002b2dd88: sub    $0x70,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)

  0x0000000002b2dd8c: mov    %rdx,0x58(%rsp)
  0x0000000002b2dd91: mov    0x10(%rdx),%ecx    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)

  0x0000000002b2dd94: mov    0xc(%r12,%rcx,8),%ebp  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; implicit exception: dispatches to 0x0000000002b2dfdd
  0x0000000002b2dd99: mov    %r8d,%r10d
  0x0000000002b2dd9c: sub    %ebp,%r10d
  0x0000000002b2dd9f: test   %r10d,%r10d
  0x0000000002b2dda2: jg     0x0000000002b2ddb0  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)

  0x0000000002b2dda4: add    $0x70,%rsp
  0x0000000002b2dda8: pop    %rbp
  0x0000000002b2dda9: test   %eax,-0x216ddaf(%rip)        # 0x00000000009c0000
                                                ;   {poll_return}
  0x0000000002b2ddaf: retq   
  0x0000000002b2ddb0: mov    %ebp,%r11d
  0x0000000002b2ddb3: shl    %r11d              ;*imul
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@6 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2ddb6: mov    %r11d,%r9d
  0x0000000002b2ddb9: sub    %r8d,%r9d
  0x0000000002b2ddbc: add    $0x2,%r9d
  0x0000000002b2ddc0: test   %r9d,%r9d
  0x0000000002b2ddc3: jge    0x0000000002b2dec8  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@13 (line 130)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2ddc9: mov    %r8d,%r10d
  0x0000000002b2ddcc: test   %r8d,%r8d
  0x0000000002b2ddcf: jl     0x0000000002b2ddd6
  0x0000000002b2ddd1: jmp    0x0000000002b2dde5
  0x0000000002b2ddd3: mov    %r8d,%r10d         ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2ddd6: test   %r10d,%r10d
  0x0000000002b2ddd9: jl     0x0000000002b2dfcf  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@23 (line 133)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2dddf: mov    $0x7fffffff,%r10d  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@37 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2dde5: cmp    %r10d,%ebp
  0x0000000002b2dde8: mov    %r10d,%ebx
  0x0000000002b2ddeb: cmovl  %ebp,%ebx          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2ddee: movslq %r10d,%r8
  0x0000000002b2ddf1: lea    (%r12,%rcx,8),%r9  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)

  0x0000000002b2ddf5: shl    %r8
  0x0000000002b2ddf8: add    $0x17,%r8          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2ddfc: mov    %r8,%r11
  0x0000000002b2ddff: shr    $0x3,%r11          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2de03: and    $0xfffffffffffffff8,%r8  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2de07: mov    %r11,%rsi
  0x0000000002b2de0a: add    $0xfffffffffffffffe,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2de0e: cmp    $0x80000,%r10d
  0x0000000002b2de15: ja     0x0000000002b2df1d
  0x0000000002b2de1b: mov    0x60(%r15),%r13
  0x0000000002b2de1f: mov    %r13,%rdi
  0x0000000002b2de22: add    %r8,%rdi
  0x0000000002b2de25: cmp    0x70(%r15),%rdi
  0x0000000002b2de29: jae    0x0000000002b2df1d
  0x0000000002b2de2f: mov    %rdi,0x60(%r15)
  0x0000000002b2de33: prefetchw 0xc0(%rdi)
  0x0000000002b2de3a: movq   $0x1,0x0(%r13)
  0x0000000002b2de42: prefetchw 0x100(%rdi)
  0x0000000002b2de49: movl   $0xf8000041,0x8(%r13)  ;   {metadata({type array char})}
  0x0000000002b2de51: mov    %r10d,0xc(%r13)
  0x0000000002b2de55: prefetchw 0x140(%rdi)
  0x0000000002b2de5c: prefetchw 0x180(%rdi)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2de63: mov    %r13,%rdx
  0x0000000002b2de66: add    $0x10,%rdx
  0x0000000002b2de6a: cmp    %ebx,%ebp
  0x0000000002b2de6c: jb     0x0000000002b2df81
  0x0000000002b2de72: cmp    %ebx,%r10d
  0x0000000002b2de75: jb     0x0000000002b2df81
  0x0000000002b2de7b: test   %ebx,%ebx
  0x0000000002b2de7d: jle    0x0000000002b2dfba
  0x0000000002b2de83: lea    0x10(%r12,%rcx,8),%r9
  0x0000000002b2de88: cmp    %r10d,%ebx
  0x0000000002b2de8b: jl     0x0000000002b2dedd
  0x0000000002b2de8d: add    $0xfffffffffffffff0,%r8
  0x0000000002b2de91: shr    $0x3,%r8
  0x0000000002b2de95: mov    %r9,%rcx
  0x0000000002b2de98: movabs $0x2a62ca0,%r10
  0x0000000002b2dea2: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2dea5: mov    %r13,%r11
  0x0000000002b2dea8: shr    $0x3,%r11
  0x0000000002b2deac: mov    0x58(%rsp),%r10
  0x0000000002b2deb1: mov    %r11d,0x10(%r10)
  0x0000000002b2deb5: shr    $0x9,%r10
  0x0000000002b2deb9: mov    $0xe7c2000,%r11d
  0x0000000002b2debf: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@46 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2dec3: jmpq   0x0000000002b2dda4
  0x0000000002b2dec8: add    $0x2,%r11d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@8 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2decc: test   %r11d,%r11d
  0x0000000002b2decf: jl     0x0000000002b2ddd3  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2ded5: mov    %r11d,%r10d
  0x0000000002b2ded8: jmpq   0x0000000002b2dde5
  0x0000000002b2dedd: movslq %ebx,%r8
  0x0000000002b2dee0: mov    %r8,%r10
  0x0000000002b2dee3: shl    %r10
  0x0000000002b2dee6: add    $0x10,%r10
  0x0000000002b2deea: mov    %r10,%rcx
  0x0000000002b2deed: and    $0xfffffffffffffff9,%rcx
  0x0000000002b2def1: mov    %r13,%rdi
  0x0000000002b2def4: add    %rcx,%rdi
  0x0000000002b2def7: shr    $0x3,%r10
  0x0000000002b2defb: sub    %r10,%r11
  0x0000000002b2defe: mov    %r11,%rcx
  0x0000000002b2df01: xor    %rax,%rax
  0x0000000002b2df04: shl    $0x3,%rcx
  0x0000000002b2df08: rep rex.W stos %al,%es:(%rdi)
  0x0000000002b2df0b: mov    %r9,%rcx
  0x0000000002b2df0e: movabs $0x2a62980,%r10
  0x0000000002b2df18: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2df1b: jmp    0x0000000002b2dea5
  0x0000000002b2df1d: mov    %ecx,0x50(%rsp)
  0x0000000002b2df21: mov    %rsi,0x48(%rsp)
  0x0000000002b2df26: mov    %r11,0x40(%rsp)
  0x0000000002b2df2b: mov    %r9,0x38(%rsp)
  0x0000000002b2df30: mov    %r8,0x30(%rsp)
  0x0000000002b2df35: mov    %ebx,0x2c(%rsp)
  0x0000000002b2df39: mov    %r10d,0x28(%rsp)
  0x0000000002b2df3e: mov    %rdx,0x20(%rsp)
  0x0000000002b2df43: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002b2df4d: mov    %r10d,%r8d
  0x0000000002b2df50: data16 xchg %ax,%ax
  0x0000000002b2df53: callq  0x0000000002a7e820  ; OopMap{[32]=Oop [56]=Oop [80]=NarrowOop [88]=Oop off=504}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ;   {runtime_call}
  0x0000000002b2df58: mov    0x28(%rsp),%r10d
  0x0000000002b2df5d: mov    0x2c(%rsp),%ebx
  0x0000000002b2df61: mov    0x30(%rsp),%r8
  0x0000000002b2df66: mov    0x38(%rsp),%r9
  0x0000000002b2df6b: mov    0x40(%rsp),%r11
  0x0000000002b2df70: mov    0x48(%rsp),%rsi
  0x0000000002b2df75: mov    0x50(%rsp),%ecx
  0x0000000002b2df79: mov    %rax,%r13
  0x0000000002b2df7c: jmpq   0x0000000002b2de63
  0x0000000002b2df81: mov    %rsi,%rcx
  0x0000000002b2df84: mov    %rdx,%rdi
  0x0000000002b2df87: xor    %rax,%rax
  0x0000000002b2df8a: shl    $0x3,%rcx
  0x0000000002b2df8e: rep rex.W stos %al,%es:(%rdi)
  0x0000000002b2df91: mov    %r9,%rdx
  0x0000000002b2df94: xor    %r8d,%r8d
  0x0000000002b2df97: mov    %r13,%r9
  0x0000000002b2df9a: xor    %edi,%edi
  0x0000000002b2df9c: mov    %ebx,%esi
  0x0000000002b2df9e: mov    0x58(%rsp),%rbp
  0x0000000002b2dfa3: mov    %r13,0x28(%rsp)
  0x0000000002b2dfa8: data16 xchg %ax,%ax
  0x0000000002b2dfab: callq  0x0000000002b119e0  ; OopMap{rbp=Oop [40]=Oop [88]=Oop off=592}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ;   {runtime_call}
  0x0000000002b2dfb0: mov    0x28(%rsp),%r13
  0x0000000002b2dfb5: jmpq   0x0000000002b2dea5
  0x0000000002b2dfba: mov    %rsi,%rcx
  0x0000000002b2dfbd: mov    %rdx,%rdi
  0x0000000002b2dfc0: xor    %rax,%rax
  0x0000000002b2dfc3: shl    $0x3,%rcx
  0x0000000002b2dfc7: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2dfca: jmpq   0x0000000002b2dea5
  0x0000000002b2dfcf: mov    $0x8d,%edx
  0x0000000002b2dfd4: data16 xchg %ax,%ax
  0x0000000002b2dfd7: callq  0x0000000002a557a0  ; OopMap{off=636}
                                                ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ;   {runtime_call}
  0x0000000002b2dfdc: int3                      ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2dfdd: mov    $0xfffffff6,%edx
  0x0000000002b2dfe2: nop
  0x0000000002b2dfe3: callq  0x0000000002a557a0  ; OopMap{off=648}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ;   {runtime_call}
  0x0000000002b2dfe8: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2dfe9: mov    %rax,%rdx
  0x0000000002b2dfec: jmp    0x0000000002b2dff1  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2dfee: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@-1 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x0000000002b2dff1: add    $0x70,%rsp
  0x0000000002b2dff5: pop    %rbp
  0x0000000002b2dff6: jmpq   0x0000000002b11aa0  ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@18 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ;   {runtime_call}
  0x0000000002b2dffb: hlt    
  0x0000000002b2dffc: hlt    
  0x0000000002b2dffd: hlt    
  0x0000000002b2dffe: hlt    
  0x0000000002b2dfff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b2e000: jmpq   0x0000000002a7eea0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b2e005: callq  0x0000000002b2e00a
  0x0000000002b2e00a: subq   $0x5,(%rsp)
  0x0000000002b2e00f: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b2e014: hlt    
  0x0000000002b2e015: hlt    
  0x0000000002b2e016: hlt    
  0x0000000002b2e017: hlt    
<nmethod compile_id='30' compiler='C2' level='4' entry='0x0000000002b2dd60' size='1864' address='0x0000000002b2dc10' relocation_offset='288' insts_offset='336' stub_offset='1008' scopes_data_offset='1064' scopes_pcs_offset='1264' dependencies_offset='1792' handler_table_offset='1800' nul_chk_table_offset='1848' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='7241' iicount='7241' stamp='0.600'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b2d7d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b7b9620} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x0000000002b2d920: mov    0x8(%rdx),%r10d
  0x0000000002b2d924: shl    $0x3,%r10
  0x0000000002b2d928: cmp    %rax,%r10
  0x0000000002b2d92b: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b2d931: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b2d93c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b2d940: mov    %eax,-0x6000(%rsp)
  0x0000000002b2d947: push   %rbp
  0x0000000002b2d948: sub    $0x30,%rsp
  0x0000000002b2d94c: movabs $0x1b83f320,%rax   ;   {metadata(method data for {method} {0x000000001b7b9620} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b2d956: mov    0xdc(%rax),%esi
  0x0000000002b2d95c: add    $0x8,%esi
  0x0000000002b2d95f: mov    %esi,0xdc(%rax)
  0x0000000002b2d965: movabs $0x1b7b9618,%rax   ;   {metadata({method} {0x000000001b7b9620} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b2d96f: and    $0x1ff8,%esi
  0x0000000002b2d975: cmp    $0x0,%esi
  0x0000000002b2d978: je     0x0000000002b2da20  ;*iload_1
                                                ; - java.io.WinNTFileSystem::isSlash@0 (line 53)

  0x0000000002b2d97e: cmp    $0x5c,%r8d
  0x0000000002b2d982: movabs $0x1b83f320,%rax   ;   {metadata(method data for {method} {0x000000001b7b9620} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b2d98c: movabs $0x108,%rsi
  0x0000000002b2d996: je     0x0000000002b2d9a6
  0x0000000002b2d99c: movabs $0x118,%rsi
  0x0000000002b2d9a6: mov    (%rax,%rsi,1),%rdi
  0x0000000002b2d9aa: lea    0x1(%rdi),%rdi
  0x0000000002b2d9ae: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b2d9b2: je     0x0000000002b2d9f2  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x0000000002b2d9b8: cmp    $0x2f,%r8d
  0x0000000002b2d9bc: movabs $0x1b83f320,%rax   ;   {metadata(method data for {method} {0x000000001b7b9620} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b2d9c6: movabs $0x128,%rsi
  0x0000000002b2d9d0: jne    0x0000000002b2d9e0
  0x0000000002b2d9d6: movabs $0x138,%rsi
  0x0000000002b2d9e0: mov    (%rax,%rsi,1),%rdi
  0x0000000002b2d9e4: lea    0x1(%rdi),%rdi
  0x0000000002b2d9e8: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b2d9ec: jne    0x0000000002b2da0c  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x0000000002b2d9f2: movabs $0x1b83f320,%rax   ;   {metadata(method data for {method} {0x000000001b7b9620} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b2d9fc: incl   0x148(%rax)
  0x0000000002b2da02: mov    $0x1,%eax
  0x0000000002b2da07: jmpq   0x0000000002b2da11  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x0000000002b2da0c: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)

  0x0000000002b2da11: and    $0x1,%eax
  0x0000000002b2da14: add    $0x30,%rsp
  0x0000000002b2da18: pop    %rbp
  0x0000000002b2da19: test   %eax,-0x216d91f(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b2da1f: retq   
  0x0000000002b2da20: mov    %rax,0x8(%rsp)
  0x0000000002b2da25: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b2da2d: callq  0x0000000002b13560  ; OopMap{rdx=Oop off=274}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ;   {runtime_call}
  0x0000000002b2da32: jmpq   0x0000000002b2d97e
  0x0000000002b2da37: nop
  0x0000000002b2da38: nop
  0x0000000002b2da39: mov    0x2a8(%r15),%rax
  0x0000000002b2da40: movabs $0x0,%r10
  0x0000000002b2da4a: mov    %r10,0x2a8(%r15)
  0x0000000002b2da51: movabs $0x0,%r10
  0x0000000002b2da5b: mov    %r10,0x2b0(%r15)
  0x0000000002b2da62: add    $0x30,%rsp
  0x0000000002b2da66: pop    %rbp
  0x0000000002b2da67: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b2da6c: hlt    
  0x0000000002b2da6d: hlt    
  0x0000000002b2da6e: hlt    
  0x0000000002b2da6f: hlt    
  0x0000000002b2da70: hlt    
  0x0000000002b2da71: hlt    
  0x0000000002b2da72: hlt    
  0x0000000002b2da73: hlt    
  0x0000000002b2da74: hlt    
  0x0000000002b2da75: hlt    
  0x0000000002b2da76: hlt    
  0x0000000002b2da77: hlt    
  0x0000000002b2da78: hlt    
  0x0000000002b2da79: hlt    
  0x0000000002b2da7a: hlt    
  0x0000000002b2da7b: hlt    
  0x0000000002b2da7c: hlt    
  0x0000000002b2da7d: hlt    
  0x0000000002b2da7e: hlt    
  0x0000000002b2da7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b2da80: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b2da85: mov    %rsp,-0x28(%rsp)
  0x0000000002b2da8a: sub    $0x80,%rsp
  0x0000000002b2da91: mov    %rax,0x78(%rsp)
  0x0000000002b2da96: mov    %rcx,0x70(%rsp)
  0x0000000002b2da9b: mov    %rdx,0x68(%rsp)
  0x0000000002b2daa0: mov    %rbx,0x60(%rsp)
  0x0000000002b2daa5: mov    %rbp,0x50(%rsp)
  0x0000000002b2daaa: mov    %rsi,0x48(%rsp)
  0x0000000002b2daaf: mov    %rdi,0x40(%rsp)
  0x0000000002b2dab4: mov    %r8,0x38(%rsp)
  0x0000000002b2dab9: mov    %r9,0x30(%rsp)
  0x0000000002b2dabe: mov    %r10,0x28(%rsp)
  0x0000000002b2dac3: mov    %r11,0x20(%rsp)
  0x0000000002b2dac8: mov    %r12,0x18(%rsp)
  0x0000000002b2dacd: mov    %r13,0x10(%rsp)
  0x0000000002b2dad2: mov    %r14,0x8(%rsp)
  0x0000000002b2dad7: mov    %r15,(%rsp)
  0x0000000002b2dadb: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b2dae5: movabs $0x2b2da85,%rdx    ;   {internal_word}
  0x0000000002b2daef: mov    %rsp,%r8
  0x0000000002b2daf2: and    $0xfffffffffffffff0,%rsp
  0x0000000002b2daf6: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b2dafb: hlt    
[Deopt Handler Code]
  0x0000000002b2dafc: movabs $0x2b2dafc,%r10    ;   {section_word}
  0x0000000002b2db06: push   %r10
  0x0000000002b2db08: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b2db0d: hlt    
  0x0000000002b2db0e: hlt    
  0x0000000002b2db0f: hlt    
<nmethod compile_id='32' compiler='C1' level='3' entry='0x0000000002b2d920' size='1024' address='0x0000000002b2d7d0' relocation_offset='288' insts_offset='336' stub_offset='688' scopes_data_offset='840' scopes_pcs_offset='888' dependencies_offset='1016' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='4232' iicount='4232' stamp='0.606'/>
<writer thread='26472'/>
<task_queued compile_id='33' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='256' iicount='256' level='3' stamp='0.607' comment='tiered' hot_count='256'/>
Decoding compiled method 0x0000000002b2d410:
Code:
[Entry Point]
  # {method} {0x000000001b6bf130} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  #           [sp+0x70]  (sp of caller)
  0x0000000002b2d580: mov    0x8(%rdx),%r10d
  0x0000000002b2d584: shl    $0x3,%r10
  0x0000000002b2d588: cmp    %r10,%rax
  0x0000000002b2d58b: je     0x0000000002b2d598
  0x0000000002b2d591: jmpq   0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b2d596: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002b2d598: mov    %eax,-0x6000(%rsp)
  0x0000000002b2d59f: push   %rbp
  0x0000000002b2d5a0: mov    %rsp,%rbp
  0x0000000002b2d5a3: sub    $0x60,%rsp
  0x0000000002b2d5a7: mov    %r8,0x28(%rsp)
  0x0000000002b2d5ac: cmp    $0x0,%r8
  0x0000000002b2d5b0: lea    0x28(%rsp),%r8
  0x0000000002b2d5b5: cmove  0x28(%rsp),%r8
  0x0000000002b2d5bb: mov    %rdx,0x20(%rsp)
  0x0000000002b2d5c0: cmp    $0x0,%rdx
  0x0000000002b2d5c4: lea    0x20(%rsp),%rdx
  0x0000000002b2d5c9: cmove  0x20(%rsp),%rdx    ; OopMap{[40]=Oop [32]=Oop off=79}
  0x0000000002b2d5cf: movabs $0x2b2d5cf,%r10    ;   {section_word}
  0x0000000002b2d5d9: mov    %r10,0x1e0(%r15)
  0x0000000002b2d5e0: mov    %rsp,0x1d8(%r15)
  0x0000000002b2d5e7: cmpb   $0x0,0x724c6a49(%rip)        # 0x0000000074ff4037
                                                ;   {external_word}
  0x0000000002b2d5ee: je     0x0000000002b2d636
  0x0000000002b2d5f4: push   %rdx
  0x0000000002b2d5f5: push   %r8
  0x0000000002b2d5f7: push   %r9
  0x0000000002b2d5f9: movabs $0x1b6bf128,%rdx   ;   {metadata({method} {0x000000001b6bf130} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002b2d603: mov    %r15,%rcx
  0x0000000002b2d606: sub    $0x20,%rsp
  0x0000000002b2d60a: test   $0xf,%esp
  0x0000000002b2d610: je     0x0000000002b2d628
  0x0000000002b2d616: sub    $0x8,%rsp
  0x0000000002b2d61a: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002b2d61f: add    $0x8,%rsp
  0x0000000002b2d623: jmpq   0x0000000002b2d62d
  0x0000000002b2d628: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002b2d62d: add    $0x20,%rsp
  0x0000000002b2d631: pop    %r9
  0x0000000002b2d633: pop    %r8
  0x0000000002b2d635: pop    %rdx
  0x0000000002b2d636: lea    0x1f8(%r15),%rcx
  0x0000000002b2d63d: movl   $0x4,0x270(%r15)
  0x0000000002b2d648: callq  0x00000000749cc8b0  ;   {runtime_call}
  0x0000000002b2d64d: vzeroupper 
  0x0000000002b2d650: movl   $0x5,0x270(%r15)
  0x0000000002b2d65b: mov    %r15d,%ecx
  0x0000000002b2d65e: shr    $0x4,%ecx
  0x0000000002b2d661: and    $0xffc,%ecx
  0x0000000002b2d667: movabs $0x9d0000,%r10     ;   {external_word}
  0x0000000002b2d671: mov    %ecx,(%r10,%rcx,1)
  0x0000000002b2d675: cmpl   $0x0,0x724c7591(%rip)        # 0x0000000074ff4c10
                                                ;   {external_word}
  0x0000000002b2d67f: jne    0x0000000002b2d693
  0x0000000002b2d685: cmpl   $0x0,0x30(%r15)
  0x0000000002b2d68d: je     0x0000000002b2d6b4
  0x0000000002b2d693: mov    %rax,-0x8(%rbp)
  0x0000000002b2d697: mov    %r15,%rcx
  0x0000000002b2d69a: mov    %rsp,%r12
  0x0000000002b2d69d: sub    $0x20,%rsp
  0x0000000002b2d6a1: and    $0xfffffffffffffff0,%rsp
  0x0000000002b2d6a5: callq  0x0000000074a31270  ;   {runtime_call}
  0x0000000002b2d6aa: mov    %r12,%rsp
  0x0000000002b2d6ad: xor    %r12,%r12
  0x0000000002b2d6b0: mov    -0x8(%rbp),%rax
  0x0000000002b2d6b4: movl   $0x8,0x270(%r15)
  0x0000000002b2d6bf: cmpl   $0x1,0x29c(%r15)
  0x0000000002b2d6ca: je     0x0000000002b2d76e
  0x0000000002b2d6d0: cmpb   $0x0,0x724c6960(%rip)        # 0x0000000074ff4037
                                                ;   {external_word}
  0x0000000002b2d6d7: je     0x0000000002b2d71d
  0x0000000002b2d6dd: mov    %rax,-0x8(%rbp)
  0x0000000002b2d6e1: movabs $0x1b6bf128,%rdx   ;   {metadata({method} {0x000000001b6bf130} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002b2d6eb: mov    %r15,%rcx
  0x0000000002b2d6ee: sub    $0x20,%rsp
  0x0000000002b2d6f2: test   $0xf,%esp
  0x0000000002b2d6f8: je     0x0000000002b2d710
  0x0000000002b2d6fe: sub    $0x8,%rsp
  0x0000000002b2d702: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002b2d707: add    $0x8,%rsp
  0x0000000002b2d70b: jmpq   0x0000000002b2d715
  0x0000000002b2d710: callq  0x0000000074a1ade0  ;   {runtime_call}
  0x0000000002b2d715: add    $0x20,%rsp
  0x0000000002b2d719: mov    -0x8(%rbp),%rax
  0x0000000002b2d71d: movabs $0x0,%r10
  0x0000000002b2d727: mov    %r10,0x1d8(%r15)
  0x0000000002b2d72e: movabs $0x0,%r10
  0x0000000002b2d738: mov    %r10,0x1e0(%r15)
  0x0000000002b2d73f: test   %rax,%rax
  0x0000000002b2d742: je     0x0000000002b2d74b
  0x0000000002b2d748: mov    (%rax),%rax
  0x0000000002b2d74b: mov    0x38(%r15),%rcx
  0x0000000002b2d74f: movl   $0x0,0x100(%rcx)
  0x0000000002b2d759: leaveq 
  0x0000000002b2d75a: cmpq   $0x0,0x8(%r15)
  0x0000000002b2d762: jne    0x0000000002b2d769
  0x0000000002b2d768: retq   
  0x0000000002b2d769: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002b2d76e: mov    %rax,-0x8(%rbp)
  0x0000000002b2d772: mov    %rsp,%r12
  0x0000000002b2d775: sub    $0x20,%rsp
  0x0000000002b2d779: and    $0xfffffffffffffff0,%rsp
  0x0000000002b2d77d: callq  0x0000000074a1ae00  ;   {runtime_call}
  0x0000000002b2d782: mov    %r12,%rsp
  0x0000000002b2d785: xor    %r12,%r12
  0x0000000002b2d788: mov    -0x8(%rbp),%rax
  0x0000000002b2d78c: jmpq   0x0000000002b2d6d0
  0x0000000002b2d791: hlt    
  0x0000000002b2d792: hlt    
  0x0000000002b2d793: hlt    
  0x0000000002b2d794: hlt    
  0x0000000002b2d795: hlt    
  0x0000000002b2d796: hlt    
  0x0000000002b2d797: hlt    
<nmethod compile_id='34' compile_kind='c2n' level='0' entry='0x0000000002b2d580' size='904' address='0x0000000002b2d410' relocation_offset='288' consts_offset='904' insts_offset='368' method='sun/misc/Unsafe getObjectVolatile (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='256' iicount='256' stamp='0.613'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b2cfd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b7fc2e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002b2d120: mov    %eax,-0x6000(%rsp)
  0x0000000002b2d127: push   %rbp
  0x0000000002b2d128: sub    $0x40,%rsp
  0x0000000002b2d12c: movabs $0x1b915790,%rcx   ;   {metadata(method data for {method} {0x000000001b7fc2e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002b2d136: mov    0xdc(%rcx),%eax
  0x0000000002b2d13c: add    $0x8,%eax
  0x0000000002b2d13f: mov    %eax,0xdc(%rcx)
  0x0000000002b2d145: movabs $0x1b7fc2e0,%rcx   ;   {metadata({method} {0x000000001b7fc2e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002b2d14f: and    $0x1ff8,%eax
  0x0000000002b2d155: cmp    $0x0,%eax
  0x0000000002b2d158: je     0x0000000002b2d26a  ;*getstatic U
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 755)

  0x0000000002b2d15e: movslq %r8d,%r8
  0x0000000002b2d161: mov    $0x2,%ecx
  0x0000000002b2d166: shl    %cl,%r8
  0x0000000002b2d169: movabs $0x10,%r10
  0x0000000002b2d173: add    %r10,%r8
  0x0000000002b2d176: mov    (%rdx,%r8,1),%eax
  0x0000000002b2d17a: shl    $0x3,%rax
  0x0000000002b2d17e: cmp    $0x0,%rax
  0x0000000002b2d182: jne    0x0000000002b2d19d
  0x0000000002b2d184: movabs $0x1b915790,%rdi   ;   {metadata(method data for {method} {0x000000001b7fc2e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002b2d18e: orl    $0x100,0x130(%rdi)
  0x0000000002b2d198: jmpq   0x0000000002b2d25e
  0x0000000002b2d19d: movabs $0x7c00371e8,%rbx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x0000000002b2d1a7: mov    0x8(%rax),%edi
  0x0000000002b2d1aa: shl    $0x3,%rdi
  0x0000000002b2d1ae: cmp    0x30(%rdi),%rbx
  0x0000000002b2d1b2: jne    0x0000000002b2d242
  0x0000000002b2d1b8: movabs $0x1b915790,%rdi   ;   {metadata(method data for {method} {0x000000001b7fc2e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002b2d1c2: mov    0x8(%rax),%ebx
  0x0000000002b2d1c5: shl    $0x3,%rbx
  0x0000000002b2d1c9: cmp    0x140(%rdi),%rbx
  0x0000000002b2d1d0: jne    0x0000000002b2d1df
  0x0000000002b2d1d2: addq   $0x1,0x148(%rdi)
  0x0000000002b2d1da: jmpq   0x0000000002b2d25e
  0x0000000002b2d1df: cmp    0x150(%rdi),%rbx
  0x0000000002b2d1e6: jne    0x0000000002b2d1f5
  0x0000000002b2d1e8: addq   $0x1,0x158(%rdi)
  0x0000000002b2d1f0: jmpq   0x0000000002b2d25e
  0x0000000002b2d1f5: cmpq   $0x0,0x140(%rdi)
  0x0000000002b2d200: jne    0x0000000002b2d219
  0x0000000002b2d202: mov    %rbx,0x140(%rdi)
  0x0000000002b2d209: movq   $0x1,0x148(%rdi)
  0x0000000002b2d214: jmpq   0x0000000002b2d25e
  0x0000000002b2d219: cmpq   $0x0,0x150(%rdi)
  0x0000000002b2d224: jne    0x0000000002b2d23d
  0x0000000002b2d226: mov    %rbx,0x150(%rdi)
  0x0000000002b2d22d: movq   $0x1,0x158(%rdi)
  0x0000000002b2d238: jmpq   0x0000000002b2d25e
  0x0000000002b2d23d: jmpq   0x0000000002b2d25e
  0x0000000002b2d242: movabs $0x1b915790,%rdi   ;   {metadata(method data for {method} {0x000000001b7fc2e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002b2d24c: subq   $0x1,0x138(%rdi)
  0x0000000002b2d254: jmpq   0x0000000002b2d281
  0x0000000002b2d259: jmpq   0x0000000002b2d25e  ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)

  0x0000000002b2d25e: add    $0x40,%rsp
  0x0000000002b2d262: pop    %rbp
  0x0000000002b2d263: test   %eax,-0x216d169(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b2d269: retq   
  0x0000000002b2d26a: mov    %rcx,0x8(%rsp)
  0x0000000002b2d26f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b2d277: callq  0x0000000002b13560  ; OopMap{rdx=Oop off=348}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ;   {runtime_call}
  0x0000000002b2d27c: jmpq   0x0000000002b2d15e
  0x0000000002b2d281: mov    %rax,(%rsp)
  0x0000000002b2d285: callq  0x0000000002b0fc80  ; OopMap{off=362}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ;   {runtime_call}
  0x0000000002b2d28a: nop
  0x0000000002b2d28b: nop
  0x0000000002b2d28c: mov    0x2a8(%r15),%rax
  0x0000000002b2d293: movabs $0x0,%r10
  0x0000000002b2d29d: mov    %r10,0x2a8(%r15)
  0x0000000002b2d2a4: movabs $0x0,%r10
  0x0000000002b2d2ae: mov    %r10,0x2b0(%r15)
  0x0000000002b2d2b5: add    $0x40,%rsp
  0x0000000002b2d2b9: pop    %rbp
  0x0000000002b2d2ba: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b2d2bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b2d2c0: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b2d2c5: mov    %rsp,-0x28(%rsp)
  0x0000000002b2d2ca: sub    $0x80,%rsp
  0x0000000002b2d2d1: mov    %rax,0x78(%rsp)
  0x0000000002b2d2d6: mov    %rcx,0x70(%rsp)
  0x0000000002b2d2db: mov    %rdx,0x68(%rsp)
  0x0000000002b2d2e0: mov    %rbx,0x60(%rsp)
  0x0000000002b2d2e5: mov    %rbp,0x50(%rsp)
  0x0000000002b2d2ea: mov    %rsi,0x48(%rsp)
  0x0000000002b2d2ef: mov    %rdi,0x40(%rsp)
  0x0000000002b2d2f4: mov    %r8,0x38(%rsp)
  0x0000000002b2d2f9: mov    %r9,0x30(%rsp)
  0x0000000002b2d2fe: mov    %r10,0x28(%rsp)
  0x0000000002b2d303: mov    %r11,0x20(%rsp)
  0x0000000002b2d308: mov    %r12,0x18(%rsp)
  0x0000000002b2d30d: mov    %r13,0x10(%rsp)
  0x0000000002b2d312: mov    %r14,0x8(%rsp)
  0x0000000002b2d317: mov    %r15,(%rsp)
  0x0000000002b2d31b: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b2d325: movabs $0x2b2d2c5,%rdx    ;   {internal_word}
  0x0000000002b2d32f: mov    %rsp,%r8
  0x0000000002b2d332: and    $0xfffffffffffffff0,%rsp
  0x0000000002b2d336: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b2d33b: hlt    
[Deopt Handler Code]
  0x0000000002b2d33c: movabs $0x2b2d33c,%r10    ;   {section_word}
  0x0000000002b2d346: push   %r10
  0x0000000002b2d348: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b2d34d: hlt    
  0x0000000002b2d34e: hlt    
  0x0000000002b2d34f: hlt    
<nmethod compile_id='33' compiler='C1' level='3' entry='0x0000000002b2d120' size='1048' address='0x0000000002b2cfd0' relocation_offset='288' insts_offset='336' stub_offset='752' scopes_data_offset='904' scopes_pcs_offset='944' dependencies_offset='1040' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='384' iicount='384' stamp='0.619'/>
<writer thread='26472'/>
<task_queued compile_id='35' method='java/util/ArrayList size ()I' bytes='5' count='256' iicount='256' level='1' stamp='0.620' comment='tiered' hot_count='256'/>
<task_queued compile_id='36' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='110' backedge_count='4096' iicount='110' level='3' stamp='0.620' comment='tiered' hot_count='110'/>
<writer thread='18216'/>
Decoding compiled method 0x0000000002b2ccd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b70d1d0} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ArrayList&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b2ce20: mov    0x8(%rdx),%r10d
  0x0000000002b2ce24: shl    $0x3,%r10
  0x0000000002b2ce28: cmp    %rax,%r10
  0x0000000002b2ce2b: jne    0x0000000002a55f60  ;   {runtime_call}
  0x0000000002b2ce31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b2ce3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b2ce40: mov    %eax,-0x6000(%rsp)
  0x0000000002b2ce47: push   %rbp
  0x0000000002b2ce48: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 278)

  0x0000000002b2ce4c: mov    0x10(%rdx),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)

  0x0000000002b2ce4f: add    $0x30,%rsp
  0x0000000002b2ce53: pop    %rbp
  0x0000000002b2ce54: test   %eax,-0x216cd5a(%rip)        # 0x00000000009c0100
                                                ;   {poll_return}
  0x0000000002b2ce5a: retq   
  0x0000000002b2ce5b: nop
  0x0000000002b2ce5c: nop
  0x0000000002b2ce5d: mov    0x2a8(%r15),%rax
  0x0000000002b2ce64: movabs $0x0,%r10
  0x0000000002b2ce6e: mov    %r10,0x2a8(%r15)
  0x0000000002b2ce75: movabs $0x0,%r10
  0x0000000002b2ce7f: mov    %r10,0x2b0(%r15)
  0x0000000002b2ce86: add    $0x30,%rsp
  0x0000000002b2ce8a: pop    %rbp
  0x0000000002b2ce8b: jmpq   0x0000000002a81920  ;   {runtime_call}
  0x0000000002b2ce90: hlt    
  0x0000000002b2ce91: hlt    
  0x0000000002b2ce92: hlt    
  0x0000000002b2ce93: hlt    
  0x0000000002b2ce94: hlt    
  0x0000000002b2ce95: hlt    
  0x0000000002b2ce96: hlt    
  0x0000000002b2ce97: hlt    
  0x0000000002b2ce98: hlt    
  0x0000000002b2ce99: hlt    
  0x0000000002b2ce9a: hlt    
  0x0000000002b2ce9b: hlt    
  0x0000000002b2ce9c: hlt    
  0x0000000002b2ce9d: hlt    
  0x0000000002b2ce9e: hlt    
  0x0000000002b2ce9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b2cea0: callq  0x0000000002a7f5a0  ;   {no_reloc}
  0x0000000002b2cea5: mov    %rsp,-0x28(%rsp)
  0x0000000002b2ceaa: sub    $0x80,%rsp
  0x0000000002b2ceb1: mov    %rax,0x78(%rsp)
  0x0000000002b2ceb6: mov    %rcx,0x70(%rsp)
  0x0000000002b2cebb: mov    %rdx,0x68(%rsp)
  0x0000000002b2cec0: mov    %rbx,0x60(%rsp)
  0x0000000002b2cec5: mov    %rbp,0x50(%rsp)
  0x0000000002b2ceca: mov    %rsi,0x48(%rsp)
  0x0000000002b2cecf: mov    %rdi,0x40(%rsp)
  0x0000000002b2ced4: mov    %r8,0x38(%rsp)
  0x0000000002b2ced9: mov    %r9,0x30(%rsp)
  0x0000000002b2cede: mov    %r10,0x28(%rsp)
  0x0000000002b2cee3: mov    %r11,0x20(%rsp)
  0x0000000002b2cee8: mov    %r12,0x18(%rsp)
  0x0000000002b2ceed: mov    %r13,0x10(%rsp)
  0x0000000002b2cef2: mov    %r14,0x8(%rsp)
  0x0000000002b2cef7: mov    %r15,(%rsp)
  0x0000000002b2cefb: movabs $0x74e21230,%rcx   ;   {external_word}
  0x0000000002b2cf05: movabs $0x2b2cea5,%rdx    ;   {internal_word}
  0x0000000002b2cf0f: mov    %rsp,%r8
  0x0000000002b2cf12: and    $0xfffffffffffffff0,%rsp
  0x0000000002b2cf16: callq  0x0000000074adfb10  ;   {runtime_call}
  0x0000000002b2cf1b: hlt    
[Deopt Handler Code]
  0x0000000002b2cf1c: movabs $0x2b2cf1c,%r10    ;   {section_word}
  0x0000000002b2cf26: push   %r10
  0x0000000002b2cf28: jmpq   0x0000000002a57600  ;   {runtime_call}
  0x0000000002b2cf2d: hlt    
  0x0000000002b2cf2e: hlt    
  0x0000000002b2cf2f: hlt    
<nmethod compile_id='35' compiler='C1' level='1' entry='0x0000000002b2ce20' size='704' address='0x0000000002b2ccd0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/util/ArrayList size ()I' bytes='5' count='290' iicount='290' stamp='0.636'/>
<writer thread='26472'/>
<task_queued compile_id='37' method='cn/itcast/jvm/t4/Demo4_2 add (II)I' bytes='10' count='256' iicount='256' level='3' stamp='0.636' comment='tiered' hot_count='256'/>
<task_queued compile_id='38' method='cn/itcast/jvm/t4/Demo4_2 sub (II)I' bytes='4' count='256' iicount='256' level='3' stamp='0.636' comment='tiered' hot_count='256'/>
<writer thread='23616'/>
<destroy_vm stamp='0.637'/>
<tty_done stamp='0.977'/>
</tty>
<compilation_log thread='18216'>
<start_compile_thread name='C1 CompilerThread2' thread='18216' process='6604' stamp='0.277'/>
<task compile_id='2' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='256' iicount='256' level='3' stamp='0.281'>
<phase name='buildIR' stamp='0.281'>
<type id='711' name='void'/>
<klass id='782' name='java/lang/StringBuilder' flags='17'/>
<method id='819' holder='782' name='&lt;init&gt;' return='711' flags='1' bytes='7' iicount='256'/>
<parse method='819'  stamp='0.281'>
<bc code='183' bci='3'/>
<type id='709' name='int'/>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='821' holder='780' name='&lt;init&gt;' return='711' arguments='709' flags='0' bytes='12' iicount='418'/>
<call method='821' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<bc code='183' bci='1'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<method id='823' holder='716' name='&lt;init&gt;' return='711' flags='1' bytes='1' iicount='4476'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<parse_done stamp='0.281'/>
</parse>
<parse_done stamp='0.281'/>
</parse>
<parse_done stamp='0.281'/>
</parse>
<phase name='optimize_blocks' stamp='0.281'>
<phase_done name='optimize_blocks' stamp='0.281'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.281'>
<phase_done name='rangeCheckElimination' stamp='0.281'/>
</phase>
<phase name='optimize_null_checks' stamp='0.281'>
<phase_done name='optimize_null_checks' stamp='0.281'/>
</phase>
<phase_done name='buildIR' stamp='0.281'/>
</phase>
<phase name='emit_lir' stamp='0.281'>
<phase name='lirGeneration' stamp='0.281'>
<phase_done name='lirGeneration' stamp='0.281'/>
</phase>
<phase name='linearScan' stamp='0.281'>
<phase_done name='linearScan' stamp='0.281'/>
</phase>
<phase_done name='emit_lir' stamp='0.281'/>
</phase>
<phase name='codeemit' stamp='0.281'>
<phase_done name='codeemit' stamp='0.281'/>
</phase>
<phase name='codeinstall' stamp='0.281'>
<phase_done name='codeinstall' stamp='0.289'/>
</phase>
<code_cache total_blobs='237' nmethods='2' adapters='150' free_code_cache='250597184'/>
<task_done success='1' nmsize='688' count='260' inlined_bytes='13' stamp='0.289'/>
</task>
<task compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='757' backedge_count='14372' iicount='757' level='3' stamp='0.289'>
<phase name='buildIR' stamp='0.289'>
<type id='709' name='int'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='hashCode' return='709' flags='1' bytes='55' iicount='757'/>
<parse method='819'  stamp='0.289'>
<parse_done stamp='0.289'/>
</parse>
<phase name='optimize_blocks' stamp='0.289'>
<phase_done name='optimize_blocks' stamp='0.289'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.289'>
<phase_done name='rangeCheckElimination' stamp='0.289'/>
</phase>
<phase name='optimize_null_checks' stamp='0.289'>
<phase_done name='optimize_null_checks' stamp='0.289'/>
</phase>
<phase_done name='buildIR' stamp='0.289'/>
</phase>
<phase name='emit_lir' stamp='0.289'>
<phase name='lirGeneration' stamp='0.289'>
<phase_done name='lirGeneration' stamp='0.289'/>
</phase>
<phase name='linearScan' stamp='0.289'>
<phase_done name='linearScan' stamp='0.289'/>
</phase>
<phase_done name='emit_lir' stamp='0.289'/>
</phase>
<phase name='codeemit' stamp='0.289'>
<phase_done name='codeemit' stamp='0.290'/>
</phase>
<phase name='codeinstall' stamp='0.290'>
<phase_done name='codeinstall' stamp='0.297'/>
</phase>
<code_cache total_blobs='238' nmethods='3' adapters='150' free_code_cache='250595712'/>
<task_done success='1' nmsize='656' count='757' backedge_count='14372' stamp='0.297'/>
</task>
<task compile_id='3' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4505' iicount='4505' level='3' stamp='0.297'>
<phase name='buildIR' stamp='0.297'>
<type id='711' name='void'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<method id='819' holder='716' name='&lt;init&gt;' return='711' flags='1' bytes='1' iicount='4505'/>
<parse method='819'  stamp='0.297'>
<parse_done stamp='0.298'/>
</parse>
<phase name='optimize_blocks' stamp='0.298'>
<phase_done name='optimize_blocks' stamp='0.298'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.298'>
<phase_done name='rangeCheckElimination' stamp='0.298'/>
</phase>
<phase name='optimize_null_checks' stamp='0.298'>
<phase_done name='optimize_null_checks' stamp='0.298'/>
</phase>
<phase_done name='buildIR' stamp='0.298'/>
</phase>
<phase name='emit_lir' stamp='0.298'>
<phase name='lirGeneration' stamp='0.298'>
<phase_done name='lirGeneration' stamp='0.298'/>
</phase>
<phase name='linearScan' stamp='0.298'>
<phase_done name='linearScan' stamp='0.298'/>
</phase>
<phase_done name='emit_lir' stamp='0.298'/>
</phase>
<phase name='codeemit' stamp='0.298'>
<phase_done name='codeemit' stamp='0.298'/>
</phase>
<phase name='codeinstall' stamp='0.298'>
<phase_done name='codeinstall' stamp='0.301'/>
</phase>
<code_cache total_blobs='239' nmethods='4' adapters='150' free_code_cache='250594880'/>
<task_done success='1' nmsize='336' count='4505' stamp='0.301'/>
</task>
<task compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='645' backedge_count='2967' iicount='645' level='3' stamp='0.303'>
<phase name='buildIR' stamp='0.303'>
<type id='703' name='boolean'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='equals' return='703' arguments='716' flags='1' bytes='81' iicount='648'/>
<parse method='819'  stamp='0.303'>
<parse_done stamp='0.303'/>
</parse>
<phase name='optimize_blocks' stamp='0.303'>
<phase_done name='optimize_blocks' stamp='0.303'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.303'>
<phase_done name='rangeCheckElimination' stamp='0.303'/>
</phase>
<phase name='optimize_null_checks' stamp='0.303'>
<phase_done name='optimize_null_checks' stamp='0.303'/>
</phase>
<phase_done name='buildIR' stamp='0.303'/>
</phase>
<phase name='emit_lir' stamp='0.303'>
<phase name='lirGeneration' stamp='0.303'>
<phase_done name='lirGeneration' stamp='0.303'/>
</phase>
<phase name='linearScan' stamp='0.303'>
<phase_done name='linearScan' stamp='0.303'/>
</phase>
<phase_done name='emit_lir' stamp='0.303'/>
</phase>
<phase name='codeemit' stamp='0.303'>
<phase_done name='codeemit' stamp='0.303'/>
</phase>
<phase name='codeinstall' stamp='0.303'>
<phase_done name='codeinstall' stamp='0.319'/>
</phase>
<code_cache total_blobs='248' nmethods='5' adapters='157' free_code_cache='250556480'/>
<task_done success='1' nmsize='1360' count='678' backedge_count='3227' stamp='0.319'/>
</task>
<task compile_id='6' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='129' iicount='129' level='1' stamp='0.319'>
<phase name='buildIR' stamp='0.319'>
<klass id='821' name='[Lsun/instrument/TransformerManager$TransformerInfo;' flags='1042'/>
<klass id='819' name='sun/instrument/TransformerManager' flags='1'/>
<method id='822' holder='819' name='getSnapshotTransformerList' return='821' flags='2' bytes='5' iicount='129'/>
<parse method='822'  stamp='0.319'>
<parse_done stamp='0.319'/>
</parse>
<phase name='optimize_blocks' stamp='0.319'>
<phase_done name='optimize_blocks' stamp='0.319'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.319'>
<phase_done name='rangeCheckElimination' stamp='0.319'/>
</phase>
<phase name='optimize_null_checks' stamp='0.319'>
<phase_done name='optimize_null_checks' stamp='0.319'/>
</phase>
<phase_done name='buildIR' stamp='0.319'/>
</phase>
<phase name='emit_lir' stamp='0.319'>
<phase name='lirGeneration' stamp='0.319'>
<phase_done name='lirGeneration' stamp='0.319'/>
</phase>
<phase name='linearScan' stamp='0.319'>
<phase_done name='linearScan' stamp='0.319'/>
</phase>
<phase_done name='emit_lir' stamp='0.319'/>
</phase>
<phase name='codeemit' stamp='0.319'>
<phase_done name='codeemit' stamp='0.319'/>
</phase>
<phase name='codeinstall' stamp='0.319'>
<phase_done name='codeinstall' stamp='0.322'/>
</phase>
<code_cache total_blobs='249' nmethods='6' adapters='157' free_code_cache='250555584'/>
<task_done success='1' nmsize='272' count='130' stamp='0.322'/>
</task>
<task compile_id='8' method='java/lang/Math min (II)I' bytes='11' count='1794' iicount='1794' level='3' stamp='0.325'>
<phase name='buildIR' stamp='0.325'>
<type id='709' name='int'/>
<klass id='819' name='java/lang/Math' flags='17'/>
<method id='820' holder='819' name='min' return='709' arguments='709 709' flags='9' bytes='11' iicount='1795'/>
<parse method='820'  stamp='0.325'>
<parse_done stamp='0.325'/>
</parse>
<phase name='optimize_blocks' stamp='0.325'>
<phase_done name='optimize_blocks' stamp='0.325'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.325'>
<phase_done name='rangeCheckElimination' stamp='0.325'/>
</phase>
<phase name='optimize_null_checks' stamp='0.325'>
<phase_done name='optimize_null_checks' stamp='0.325'/>
</phase>
<phase_done name='buildIR' stamp='0.325'/>
</phase>
<phase name='emit_lir' stamp='0.325'>
<phase name='lirGeneration' stamp='0.325'>
<phase_done name='lirGeneration' stamp='0.325'/>
</phase>
<phase name='linearScan' stamp='0.325'>
<phase_done name='linearScan' stamp='0.325'/>
</phase>
<phase_done name='emit_lir' stamp='0.325'/>
</phase>
<phase name='codeemit' stamp='0.325'>
<phase_done name='codeemit' stamp='0.325'/>
</phase>
<phase name='codeinstall' stamp='0.325'>
<phase_done name='codeinstall' stamp='0.330'/>
</phase>
<code_cache total_blobs='253' nmethods='7' adapters='160' free_code_cache='250553088'/>
<task_done success='1' nmsize='400' count='1800' stamp='0.330'/>
</task>
<task compile_id='9' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4611' iicount='4611' level='1' stamp='0.336'>
<phase name='buildIR' stamp='0.336'>
<type id='711' name='void'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<method id='819' holder='716' name='&lt;init&gt;' return='711' flags='1' bytes='1' compile_id='3' compiler='C1' level='3' iicount='4611'/>
<parse method='819'  stamp='0.336'>
<parse_done stamp='0.336'/>
</parse>
<phase name='optimize_blocks' stamp='0.336'>
<phase_done name='optimize_blocks' stamp='0.336'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.336'>
<phase_done name='rangeCheckElimination' stamp='0.336'/>
</phase>
<phase name='optimize_null_checks' stamp='0.336'>
<phase_done name='optimize_null_checks' stamp='0.336'/>
</phase>
<phase_done name='buildIR' stamp='0.336'/>
</phase>
<phase name='emit_lir' stamp='0.336'>
<phase name='lirGeneration' stamp='0.336'>
<phase_done name='lirGeneration' stamp='0.336'/>
</phase>
<phase name='linearScan' stamp='0.336'>
<phase_done name='linearScan' stamp='0.336'/>
</phase>
<phase_done name='emit_lir' stamp='0.336'/>
</phase>
<phase name='codeemit' stamp='0.336'>
<phase_done name='codeemit' stamp='0.336'/>
</phase>
<phase name='codeinstall' stamp='0.336'>
<phase_done name='codeinstall' stamp='0.339'/>
</phase>
<code_cache total_blobs='255' nmethods='9' adapters='160' free_code_cache='250551360'/>
<task_done success='1' nmsize='272' count='4625' stamp='0.339'/>
</task>
<task compile_id='11' method='java/lang/String indexOf (II)I' bytes='70' count='537' backedge_count='18651' iicount='537' level='3' stamp='0.339'>
<phase name='buildIR' stamp='0.339'>
<type id='709' name='int'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='indexOf' return='709' arguments='709 709' flags='1' bytes='70' iicount='537'/>
<parse method='819'  stamp='0.339'>
<bc code='183' bci='66'/>
<method id='821' holder='717' name='indexOfSupplementary' return='709' arguments='709 709' flags='2' bytes='71' iicount='1'/>
<call method='821' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.339'/>
</parse>
<phase name='optimize_blocks' stamp='0.339'>
<phase_done name='optimize_blocks' stamp='0.339'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.339'>
<phase_done name='rangeCheckElimination' stamp='0.339'/>
</phase>
<phase name='optimize_null_checks' stamp='0.339'>
<phase_done name='optimize_null_checks' stamp='0.339'/>
</phase>
<phase_done name='buildIR' stamp='0.339'/>
</phase>
<phase name='emit_lir' stamp='0.339'>
<phase name='lirGeneration' stamp='0.339'>
<phase_done name='lirGeneration' stamp='0.339'/>
</phase>
<phase name='linearScan' stamp='0.339'>
<phase_done name='linearScan' stamp='0.339'/>
</phase>
<phase_done name='emit_lir' stamp='0.339'/>
</phase>
<phase name='codeemit' stamp='0.339'>
<phase_done name='codeemit' stamp='0.339'/>
</phase>
<phase name='codeinstall' stamp='0.339'>
<phase_done name='codeinstall' stamp='0.350'/>
</phase>
<code_cache total_blobs='257' nmethods='10' adapters='161' free_code_cache='250548864'/>
<task_done success='1' nmsize='936' count='836' backedge_count='32256' stamp='0.350'/>
</task>
<task compile_id='10' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='902' iicount='902' level='3' stamp='0.350'>
<phase name='buildIR' stamp='0.350'>
<type id='711' name='void'/>
<klass id='808' name='[C' flags='1041'/>
<type id='709' name='int'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='&lt;init&gt;' return='711' arguments='808 709 709' flags='1' bytes='82' iicount='902'/>
<parse method='819'  stamp='0.350'>
<bc code='183' bci='1'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<method id='821' holder='716' name='&lt;init&gt;' return='711' flags='1' bytes='1' compile_id='9' compiler='C1' level='1' iicount='4625'/>
<call method='821' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<parse_done stamp='0.350'/>
</parse>
<bc code='183' bci='13'/>
<klass id='823' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='824' holder='823' name='&lt;init&gt;' return='711' arguments='709' unloaded='1'/>
<call method='824' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='824' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='824' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='826' name='java/util/Arrays' flags='1'/>
<method id='827' holder='826' name='copyOfRange' return='808' arguments='808 709 709' flags='9' bytes='63' iicount='1014'/>
<call method='827' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.351'/>
</parse>
<phase name='optimize_blocks' stamp='0.351'>
<phase_done name='optimize_blocks' stamp='0.351'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.351'>
<phase_done name='rangeCheckElimination' stamp='0.351'/>
</phase>
<phase name='optimize_null_checks' stamp='0.351'>
<phase_done name='optimize_null_checks' stamp='0.351'/>
</phase>
<phase_done name='buildIR' stamp='0.351'/>
</phase>
<phase name='emit_lir' stamp='0.351'>
<phase name='lirGeneration' stamp='0.351'>
<phase_done name='lirGeneration' stamp='0.351'/>
</phase>
<phase name='linearScan' stamp='0.351'>
<phase_done name='linearScan' stamp='0.351'/>
</phase>
<phase_done name='emit_lir' stamp='0.351'/>
</phase>
<phase name='codeemit' stamp='0.351'>
<phase_done name='codeemit' stamp='0.351'/>
</phase>
<phase name='codeinstall' stamp='0.351'>
<phase_done name='codeinstall' stamp='0.368'/>
</phase>
<code_cache total_blobs='265' nmethods='11' adapters='166' free_code_cache='250532032'/>
<task_done success='1' nmsize='1272' count='914' inlined_bytes='1' stamp='0.368'/>
</task>
<task compile_id='14' method='java/lang/String indexOf (I)I' bytes='7' count='741' iicount='741' level='3' stamp='0.370'>
<phase name='buildIR' stamp='0.370'>
<type id='709' name='int'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='indexOf' return='709' arguments='709' flags='1' bytes='7' iicount='741'/>
<parse method='819'  stamp='0.370'>
<bc code='182' bci='3'/>
<method id='821' holder='717' name='indexOf' return='709' arguments='709 709' flags='1' bytes='70' compile_id='11' compiler='C1' level='3' iicount='950'/>
<call method='821' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.370'/>
</parse>
<phase name='optimize_blocks' stamp='0.370'>
<phase_done name='optimize_blocks' stamp='0.370'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.370'>
<phase_done name='rangeCheckElimination' stamp='0.370'/>
</phase>
<phase name='optimize_null_checks' stamp='0.370'>
<phase_done name='optimize_null_checks' stamp='0.370'/>
</phase>
<phase_done name='buildIR' stamp='0.370'/>
</phase>
<phase name='emit_lir' stamp='0.370'>
<phase name='lirGeneration' stamp='0.370'>
<phase_done name='lirGeneration' stamp='0.370'/>
</phase>
<phase name='linearScan' stamp='0.370'>
<phase_done name='linearScan' stamp='0.370'/>
</phase>
<phase_done name='emit_lir' stamp='0.370'/>
</phase>
<phase name='codeemit' stamp='0.370'>
<phase_done name='codeemit' stamp='0.370'/>
</phase>
<phase name='codeinstall' stamp='0.370'>
<phase_done name='codeinstall' stamp='0.376'/>
</phase>
<code_cache total_blobs='265' nmethods='13' adapters='166' free_code_cache='250541696'/>
<task_done success='1' nmsize='520' count='741' stamp='0.376'/>
</task>
<task compile_id='12' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='1026' iicount='1026' level='3' stamp='0.376'>
<phase name='buildIR' stamp='0.376'>
<klass id='808' name='[C' flags='1041'/>
<type id='709' name='int'/>
<klass id='819' name='java/util/Arrays' flags='1'/>
<method id='820' holder='819' name='copyOfRange' return='808' arguments='808 709 709' flags='9' bytes='63' iicount='1026'/>
<parse method='820'  stamp='0.376'>
<bc code='183' bci='16'/>
<type id='711' name='void'/>
<klass id='782' name='java/lang/StringBuilder' flags='17'/>
<method id='823' holder='782' name='&lt;init&gt;' return='711' flags='1' bytes='7' compile_id='2' compiler='C1' level='3' iicount='267'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<bc code='183' bci='3'/>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='825' holder='780' name='&lt;init&gt;' return='711' arguments='709' flags='0' bytes='12' iicount='429'/>
<call method='825' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='825'>
<bc code='183' bci='1'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<method id='827' holder='716' name='&lt;init&gt;' return='711' flags='1' bytes='1' compile_id='9' compiler='C1' level='1' iicount='4628'/>
<call method='827' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='827'>
<parse_done stamp='0.376'/>
</parse>
<parse_done stamp='0.376'/>
</parse>
<parse_done stamp='0.376'/>
</parse>
<bc code='182' bci='20'/>
<method id='829' holder='782' name='append' return='782' arguments='709' flags='1' bytes='8' iicount='6'/>
<call method='829' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='829'>
<bc code='183' bci='2'/>
<method id='831' holder='780' name='append' return='780' arguments='709' flags='1' bytes='62' iicount='6'/>
<call method='831' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.376'/>
</parse>
<bc code='182' bci='25'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='834' holder='782' name='append' return='782' arguments='717' flags='1' bytes='8' iicount='619'/>
<call method='834' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='183' bci='2'/>
<method id='836' holder='780' name='append' return='780' arguments='717' flags='1' bytes='50' iicount='745'/>
<call method='836' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.376'/>
</parse>
<bc code='182' bci='29'/>
<call method='829' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='829'>
<bc code='183' bci='2'/>
<call method='831' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.376'/>
</parse>
<bc code='182' bci='32'/>
<method id='838' holder='782' name='toString' return='717' flags='1' bytes='17' iicount='313'/>
<call method='838' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='13'/>
<method id='840' holder='717' name='&lt;init&gt;' return='711' arguments='808 709 709' flags='1' bytes='82' compile_id='10' compiler='C1' level='3' iicount='915'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.376'/>
</parse>
<bc code='183' bci='35'/>
<klass id='822' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='842' holder='822' name='&lt;init&gt;' return='711' arguments='717' flags='1' bytes='6' iicount='1'/>
<call method='842' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='844' name='java/lang/Math' flags='17'/>
<method id='845' holder='844' name='min' return='709' arguments='709 709' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='1978'/>
<call method='845' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<parse_done stamp='0.376'/>
</parse>
<bc code='184' bci='57'/>
<klass id='722' name='java/lang/System' flags='17'/>
<method id='847' holder='722' name='arraycopy' return='711' arguments='716 709 716 709 709' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2689'/>
<call method='847' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.377'/>
</parse>
<phase name='optimize_blocks' stamp='0.377'>
<phase_done name='optimize_blocks' stamp='0.377'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.377'>
<phase_done name='rangeCheckElimination' stamp='0.377'/>
</phase>
<phase name='optimize_null_checks' stamp='0.377'>
<phase_done name='optimize_null_checks' stamp='0.377'/>
</phase>
<phase_done name='buildIR' stamp='0.377'/>
</phase>
<phase name='emit_lir' stamp='0.377'>
<phase name='lirGeneration' stamp='0.377'>
<phase_done name='lirGeneration' stamp='0.377'/>
</phase>
<phase name='linearScan' stamp='0.377'>
<phase_done name='linearScan' stamp='0.377'/>
</phase>
<phase_done name='emit_lir' stamp='0.377'/>
</phase>
<phase name='codeemit' stamp='0.377'>
<phase_done name='codeemit' stamp='0.377'/>
</phase>
<phase name='codeinstall' stamp='0.377'>
<phase_done name='codeinstall' stamp='0.413'/>
</phase>
<code_cache total_blobs='267' nmethods='15' adapters='166' free_code_cache='250536192'/>
<task_done success='1' nmsize='2872' count='1026' inlined_bytes='72' stamp='0.413'/>
</task>
<task compile_id='18' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4036' iicount='4036' level='3' stamp='0.413'>
<phase name='buildIR' stamp='0.413'>
<type id='709' name='int'/>
<klass id='819' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='820' holder='819' name='getProperties' return='709' arguments='709' flags='0' bytes='11' iicount='4036'/>
<parse method='820'  stamp='0.413'>
<parse_done stamp='0.413'/>
</parse>
<phase name='optimize_blocks' stamp='0.413'>
<phase_done name='optimize_blocks' stamp='0.413'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.413'>
<phase_done name='rangeCheckElimination' stamp='0.413'/>
</phase>
<phase name='optimize_null_checks' stamp='0.413'>
<phase_done name='optimize_null_checks' stamp='0.413'/>
</phase>
<phase_done name='buildIR' stamp='0.413'/>
</phase>
<phase name='emit_lir' stamp='0.413'>
<phase name='lirGeneration' stamp='0.413'>
<phase_done name='lirGeneration' stamp='0.413'/>
</phase>
<phase name='linearScan' stamp='0.413'>
<phase_done name='linearScan' stamp='0.413'/>
</phase>
<phase_done name='emit_lir' stamp='0.413'/>
</phase>
<phase name='codeemit' stamp='0.413'>
<phase_done name='codeemit' stamp='0.413'/>
</phase>
<phase name='codeinstall' stamp='0.413'>
<phase_done name='codeinstall' stamp='0.418'/>
</phase>
<code_cache total_blobs='268' nmethods='16' adapters='166' free_code_cache='250535168'/>
<task_done success='1' nmsize='400' count='4036' stamp='0.418'/>
</task>
<task compile_id='17' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='4036' iicount='4036' level='3' stamp='0.418'>
<phase name='buildIR' stamp='0.418'>
<klass id='819' name='java/lang/CharacterData' flags='1024'/>
<type id='709' name='int'/>
<method id='820' holder='819' name='of' return='819' arguments='709' flags='24' bytes='120' iicount='4036'/>
<parse method='820'  stamp='0.418'>
<parse_done stamp='0.419'/>
</parse>
<phase name='optimize_blocks' stamp='0.419'>
<phase_done name='optimize_blocks' stamp='0.419'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.419'>
<phase_done name='rangeCheckElimination' stamp='0.419'/>
</phase>
<phase name='optimize_null_checks' stamp='0.419'>
<phase_done name='optimize_null_checks' stamp='0.419'/>
</phase>
<phase_done name='buildIR' stamp='0.419'/>
</phase>
<phase name='emit_lir' stamp='0.419'>
<phase name='lirGeneration' stamp='0.419'>
<phase_done name='lirGeneration' stamp='0.419'/>
</phase>
<phase name='linearScan' stamp='0.419'>
<phase_done name='linearScan' stamp='0.419'/>
</phase>
<phase_done name='emit_lir' stamp='0.419'/>
</phase>
<phase name='codeemit' stamp='0.419'>
<phase_done name='codeemit' stamp='0.419'/>
</phase>
<phase name='codeinstall' stamp='0.419'>
<phase_done name='codeinstall' stamp='0.440'/>
</phase>
<code_cache total_blobs='269' nmethods='17' adapters='166' free_code_cache='250532416'/>
<task_done success='1' nmsize='1456' count='4036' stamp='0.440'/>
</task>
<task compile_id='13' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='443' iicount='443' level='3' stamp='0.440'>
<phase name='buildIR' stamp='0.440'>
<type id='709' name='int'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<klass id='819' name='java/util/HashMap' flags='1'/>
<method id='820' holder='819' name='hash' return='709' arguments='716' flags='24' bytes='20' iicount='443'/>
<parse method='820'  stamp='0.440'>
<bc code='182' bci='9'/>
<method id='822' holder='716' name='hashCode' return='709' flags='257' bytes='0' iicount='83'/>
<call method='822' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.440'/>
</parse>
<phase name='optimize_blocks' stamp='0.440'>
<phase_done name='optimize_blocks' stamp='0.440'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.440'>
<phase_done name='rangeCheckElimination' stamp='0.440'/>
</phase>
<phase name='optimize_null_checks' stamp='0.440'>
<phase_done name='optimize_null_checks' stamp='0.440'/>
</phase>
<phase_done name='buildIR' stamp='0.440'/>
</phase>
<phase name='emit_lir' stamp='0.440'>
<phase name='lirGeneration' stamp='0.440'>
<phase_done name='lirGeneration' stamp='0.440'/>
</phase>
<phase name='linearScan' stamp='0.440'>
<phase_done name='linearScan' stamp='0.440'/>
</phase>
<phase_done name='emit_lir' stamp='0.440'/>
</phase>
<phase name='codeemit' stamp='0.440'>
<phase_done name='codeemit' stamp='0.440'/>
</phase>
<phase name='codeinstall' stamp='0.440'>
<phase_done name='codeinstall' stamp='0.447'/>
</phase>
<code_cache total_blobs='270' nmethods='18' adapters='166' free_code_cache='250531200'/>
<task_done success='1' nmsize='584' count='443' stamp='0.447'/>
</task>
<task compile_id='20' method='java/lang/Character toUpperCase (I)I' bytes='9' count='384' iicount='384' level='3' stamp='0.447'>
<phase name='buildIR' stamp='0.447'>
<type id='709' name='int'/>
<klass id='797' name='java/lang/Character' flags='17'/>
<method id='819' holder='797' name='toUpperCase' return='709' arguments='709' flags='9' bytes='9' iicount='384'/>
<parse method='819'  stamp='0.447'>
<bc code='184' bci='1'/>
<klass id='822' name='java/lang/CharacterData' flags='1024'/>
<method id='823' holder='822' name='of' return='822' arguments='709' flags='24' bytes='120' compile_id='17' compiler='C1' level='3' iicount='4112'/>
<call method='823' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='825' holder='822' name='toUpperCase' return='709' arguments='709' flags='1024' bytes='0' iicount='1'/>
<call method='825' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.447'/>
</parse>
<phase name='optimize_blocks' stamp='0.447'>
<phase_done name='optimize_blocks' stamp='0.447'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.447'>
<phase_done name='rangeCheckElimination' stamp='0.447'/>
</phase>
<phase name='optimize_null_checks' stamp='0.447'>
<phase_done name='optimize_null_checks' stamp='0.447'/>
</phase>
<phase_done name='buildIR' stamp='0.447'/>
</phase>
<phase name='emit_lir' stamp='0.447'>
<phase name='lirGeneration' stamp='0.447'>
<phase_done name='lirGeneration' stamp='0.447'/>
</phase>
<phase name='linearScan' stamp='0.447'>
<phase_done name='linearScan' stamp='0.447'/>
</phase>
<phase_done name='emit_lir' stamp='0.447'/>
</phase>
<phase name='codeemit' stamp='0.447'>
<phase_done name='codeemit' stamp='0.447'/>
</phase>
<phase name='codeinstall' stamp='0.447'>
<phase_done name='codeinstall' stamp='0.454'/>
</phase>
<code_cache total_blobs='273' nmethods='19' adapters='168' free_code_cache='250528896'/>
<task_done success='1' nmsize='568' count='688' stamp='0.454'/>
</task>
<task compile_id='21' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='688' iicount='688' level='3' stamp='0.454'>
<phase name='buildIR' stamp='0.454'>
<type id='709' name='int'/>
<klass id='819' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='820' holder='819' name='toUpperCase' return='709' arguments='709' flags='0' bytes='53' iicount='688'/>
<parse method='820'  stamp='0.454'>
<bc code='182' bci='4'/>
<method id='822' holder='819' name='getProperties' return='709' arguments='709' flags='0' bytes='11' compile_id='18' compiler='C1' level='3' iicount='4377'/>
<call method='822' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='819'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='819'/>
<parse method='822'>
<parse_done stamp='0.454'/>
</parse>
<parse_done stamp='0.454'/>
</parse>
<phase name='optimize_blocks' stamp='0.454'>
<phase_done name='optimize_blocks' stamp='0.454'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.454'>
<phase_done name='rangeCheckElimination' stamp='0.454'/>
</phase>
<phase name='optimize_null_checks' stamp='0.454'>
<phase_done name='optimize_null_checks' stamp='0.454'/>
</phase>
<phase_done name='buildIR' stamp='0.454'/>
</phase>
<phase name='emit_lir' stamp='0.454'>
<phase name='lirGeneration' stamp='0.454'>
<phase_done name='lirGeneration' stamp='0.454'/>
</phase>
<phase name='linearScan' stamp='0.454'>
<phase_done name='linearScan' stamp='0.454'/>
</phase>
<phase_done name='emit_lir' stamp='0.454'/>
</phase>
<phase name='codeemit' stamp='0.454'>
<phase_done name='codeemit' stamp='0.454'/>
</phase>
<phase name='codeinstall' stamp='0.454'>
<dependency type='leaf_type' ctxk='819'/>
<phase_done name='codeinstall' stamp='0.462'/>
</phase>
<code_cache total_blobs='276' nmethods='20' adapters='169' free_code_cache='250524928'/>
<task_done success='1' nmsize='720' count='746' inlined_bytes='11' stamp='0.462'/>
</task>
<task compile_id='22' method='java/util/TreeMap leftOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='1813' iicount='1813' level='3' stamp='0.463'>
<phase name='buildIR' stamp='0.463'>
<klass id='820' name='java/util/TreeMap$Entry' flags='24'/>
<klass id='819' name='java/util/TreeMap' flags='1'/>
<method id='821' holder='819' name='leftOf' return='820' arguments='820' flags='10' bytes='13' iicount='1813'/>
<parse method='821'  stamp='0.463'>
<parse_done stamp='0.463'/>
</parse>
<phase name='optimize_blocks' stamp='0.463'>
<phase_done name='optimize_blocks' stamp='0.463'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.463'>
<phase_done name='rangeCheckElimination' stamp='0.463'/>
</phase>
<phase name='optimize_null_checks' stamp='0.463'>
<phase_done name='optimize_null_checks' stamp='0.463'/>
</phase>
<phase_done name='buildIR' stamp='0.463'/>
</phase>
<phase name='emit_lir' stamp='0.463'>
<phase name='lirGeneration' stamp='0.463'>
<phase_done name='lirGeneration' stamp='0.463'/>
</phase>
<phase name='linearScan' stamp='0.463'>
<phase_done name='linearScan' stamp='0.463'/>
</phase>
<phase_done name='emit_lir' stamp='0.463'/>
</phase>
<phase name='codeemit' stamp='0.463'>
<phase_done name='codeemit' stamp='0.463'/>
</phase>
<phase name='codeinstall' stamp='0.463'>
<phase_done name='codeinstall' stamp='0.468'/>
</phase>
<code_cache total_blobs='277' nmethods='21' adapters='169' free_code_cache='250523904'/>
<task_done success='1' nmsize='432' count='1813' stamp='0.468'/>
</task>
<task compile_id='19' method='java/lang/Character toUpperCase (C)C' bytes='6' count='746' iicount='746' level='3' stamp='0.468'>
<phase name='buildIR' stamp='0.468'>
<type id='704' name='char'/>
<klass id='797' name='java/lang/Character' flags='17'/>
<method id='819' holder='797' name='toUpperCase' return='704' arguments='704' flags='9' bytes='6' iicount='746'/>
<parse method='819'  stamp='0.468'>
<bc code='184' bci='1'/>
<type id='709' name='int'/>
<method id='821' holder='797' name='toUpperCase' return='709' arguments='709' flags='9' bytes='9' compile_id='20' compiler='C1' level='3' iicount='746'/>
<call method='821' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<bc code='184' bci='1'/>
<klass id='824' name='java/lang/CharacterData' flags='1024'/>
<method id='825' holder='824' name='of' return='824' arguments='709' flags='24' bytes='120' compile_id='17' compiler='C1' level='3' iicount='4399'/>
<call method='825' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='827' holder='824' name='toUpperCase' return='709' arguments='709' flags='1024' bytes='0' iicount='1'/>
<call method='827' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.469'/>
</parse>
<parse_done stamp='0.469'/>
</parse>
<phase name='optimize_blocks' stamp='0.469'>
<phase_done name='optimize_blocks' stamp='0.469'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.469'>
<phase_done name='rangeCheckElimination' stamp='0.469'/>
</phase>
<phase name='optimize_null_checks' stamp='0.469'>
<phase_done name='optimize_null_checks' stamp='0.469'/>
</phase>
<phase_done name='buildIR' stamp='0.469'/>
</phase>
<phase name='emit_lir' stamp='0.469'>
<phase name='lirGeneration' stamp='0.469'>
<phase_done name='lirGeneration' stamp='0.469'/>
</phase>
<phase name='linearScan' stamp='0.469'>
<phase_done name='linearScan' stamp='0.469'/>
</phase>
<phase_done name='emit_lir' stamp='0.469'/>
</phase>
<phase name='codeemit' stamp='0.469'>
<phase_done name='codeemit' stamp='0.469'/>
</phase>
<phase name='codeinstall' stamp='0.469'>
<phase_done name='codeinstall' stamp='0.476'/>
</phase>
<code_cache total_blobs='278' nmethods='22' adapters='169' free_code_cache='250522560'/>
<task_done success='1' nmsize='664' count='746' inlined_bytes='9' stamp='0.476'/>
</task>
<task compile_id='23' method='java/util/TreeMap setColor (Ljava/util/TreeMap$Entry;Z)V' bytes='10' count='2452' iicount='2452' level='3' stamp='0.476'>
<phase name='buildIR' stamp='0.476'>
<type id='711' name='void'/>
<klass id='820' name='java/util/TreeMap$Entry' flags='24'/>
<type id='703' name='boolean'/>
<klass id='819' name='java/util/TreeMap' flags='1'/>
<method id='821' holder='819' name='setColor' return='711' arguments='820 703' flags='10' bytes='10' iicount='2452'/>
<parse method='821'  stamp='0.477'>
<parse_done stamp='0.477'/>
</parse>
<phase name='optimize_blocks' stamp='0.477'>
<phase_done name='optimize_blocks' stamp='0.477'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.477'>
<phase_done name='rangeCheckElimination' stamp='0.477'/>
</phase>
<phase name='optimize_null_checks' stamp='0.477'>
<phase_done name='optimize_null_checks' stamp='0.477'/>
</phase>
<phase_done name='buildIR' stamp='0.477'/>
</phase>
<phase name='emit_lir' stamp='0.477'>
<phase name='lirGeneration' stamp='0.477'>
<phase_done name='lirGeneration' stamp='0.477'/>
</phase>
<phase name='linearScan' stamp='0.477'>
<phase_done name='linearScan' stamp='0.477'/>
</phase>
<phase_done name='emit_lir' stamp='0.477'/>
</phase>
<phase name='codeemit' stamp='0.477'>
<phase_done name='codeemit' stamp='0.477'/>
</phase>
<phase name='codeinstall' stamp='0.477'>
<phase_done name='codeinstall' stamp='0.481'/>
</phase>
<code_cache total_blobs='279' nmethods='23' adapters='169' free_code_cache='250521600'/>
<task_done success='1' nmsize='368' count='2452' stamp='0.481'/>
</task>
<task compile_id='24' method='java/util/TreeMap rightOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='640' iicount='640' level='3' stamp='0.481'>
<phase name='buildIR' stamp='0.481'>
<klass id='820' name='java/util/TreeMap$Entry' flags='24'/>
<klass id='819' name='java/util/TreeMap' flags='1'/>
<method id='821' holder='819' name='rightOf' return='820' arguments='820' flags='10' bytes='13' iicount='640'/>
<parse method='821'  stamp='0.481'>
<parse_done stamp='0.481'/>
</parse>
<phase name='optimize_blocks' stamp='0.481'>
<phase_done name='optimize_blocks' stamp='0.481'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.481'>
<phase_done name='rangeCheckElimination' stamp='0.481'/>
</phase>
<phase name='optimize_null_checks' stamp='0.481'>
<phase_done name='optimize_null_checks' stamp='0.481'/>
</phase>
<phase_done name='buildIR' stamp='0.481'/>
</phase>
<phase name='emit_lir' stamp='0.481'>
<phase name='lirGeneration' stamp='0.481'>
<phase_done name='lirGeneration' stamp='0.481'/>
</phase>
<phase name='linearScan' stamp='0.481'>
<phase_done name='linearScan' stamp='0.481'/>
</phase>
<phase_done name='emit_lir' stamp='0.481'/>
</phase>
<phase name='codeemit' stamp='0.481'>
<phase_done name='codeemit' stamp='0.481'/>
</phase>
<phase name='codeinstall' stamp='0.481'>
<phase_done name='codeinstall' stamp='0.487'/>
</phase>
<code_cache total_blobs='280' nmethods='24' adapters='169' free_code_cache='250520576'/>
<task_done success='1' nmsize='432' count='640' stamp='0.487'/>
</task>
<task compile_id='25' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='679' backedge_count='1078' iicount='682' level='3' stamp='0.493'>
<phase name='buildIR' stamp='0.493'>
<type id='703' name='boolean'/>
<klass id='717' name='java/lang/String' flags='17'/>
<type id='709' name='int'/>
<method id='819' holder='717' name='startsWith' return='703' arguments='717 709' flags='1' bytes='72' iicount='682'/>
<parse method='819'  stamp='0.493'>
<parse_done stamp='0.493'/>
</parse>
<phase name='optimize_blocks' stamp='0.493'>
<phase_done name='optimize_blocks' stamp='0.493'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.493'>
<phase_done name='rangeCheckElimination' stamp='0.493'/>
</phase>
<phase name='optimize_null_checks' stamp='0.493'>
<phase_done name='optimize_null_checks' stamp='0.493'/>
</phase>
<phase_done name='buildIR' stamp='0.493'/>
</phase>
<phase name='emit_lir' stamp='0.493'>
<phase name='lirGeneration' stamp='0.493'>
<phase_done name='lirGeneration' stamp='0.493'/>
</phase>
<phase name='linearScan' stamp='0.493'>
<phase_done name='linearScan' stamp='0.493'/>
</phase>
<phase_done name='emit_lir' stamp='0.493'/>
</phase>
<phase name='codeemit' stamp='0.493'>
<phase_done name='codeemit' stamp='0.493'/>
</phase>
<phase name='codeinstall' stamp='0.493'>
<phase_done name='codeinstall' stamp='0.517'/>
</phase>
<code_cache total_blobs='283' nmethods='25' adapters='171' free_code_cache='250517696'/>
<task_done success='1' nmsize='816' count='742' backedge_count='1115' stamp='0.517'/>
</task>
<task compile_id='27' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='768' iicount='768' level='3' stamp='0.517'>
<phase name='buildIR' stamp='0.517'>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='780' name='append' return='780' arguments='717' flags='1' bytes='50' iicount='771'/>
<parse method='819'  stamp='0.517'>
<bc code='183' bci='5'/>
<method id='821' holder='780' name='appendNull' return='780' flags='2' bytes='56' iicount='1'/>
<call method='821' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='709' name='int'/>
<method id='823' holder='717' name='length' return='709' flags='1' bytes='6' compile_id='15' compiler='C2' level='4' iicount='27810'/>
<call method='823' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<parse_done stamp='0.517'/>
</parse>
<bc code='183' bci='21'/>
<type id='711' name='void'/>
<method id='825' holder='780' name='ensureCapacityInternal' return='711' arguments='709' flags='2' bytes='16' iicount='7147'/>
<call method='825' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='825'>
<bc code='182' bci='12'/>
<method id='827' holder='780' name='expandCapacity' return='711' arguments='709' flags='0' bytes='50' iicount='356'/>
<call method='827' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='780' x='827'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.517'/>
</parse>
<bc code='182' bci='35'/>
<klass id='808' name='[C' flags='1041'/>
<method id='829' holder='717' name='getChars' return='711' arguments='709 709 808 709' flags='1' bytes='62' iicount='847'/>
<call method='829' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.517'/>
</parse>
<phase name='optimize_blocks' stamp='0.517'>
<phase_done name='optimize_blocks' stamp='0.517'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.517'>
<phase_done name='rangeCheckElimination' stamp='0.517'/>
</phase>
<phase name='optimize_null_checks' stamp='0.517'>
<phase_done name='optimize_null_checks' stamp='0.517'/>
</phase>
<phase_done name='buildIR' stamp='0.518'/>
</phase>
<phase name='emit_lir' stamp='0.518'>
<phase name='lirGeneration' stamp='0.518'>
<phase_done name='lirGeneration' stamp='0.518'/>
</phase>
<phase name='linearScan' stamp='0.518'>
<phase_done name='linearScan' stamp='0.518'/>
</phase>
<phase_done name='emit_lir' stamp='0.518'/>
</phase>
<phase name='codeemit' stamp='0.518'>
<phase_done name='codeemit' stamp='0.518'/>
</phase>
<phase name='codeinstall' stamp='0.518'>
<dependency type='unique_concrete_method' ctxk='780' x='827'/>
<phase_done name='codeinstall' stamp='0.532'/>
</phase>
<code_cache total_blobs='284' nmethods='26' adapters='171' free_code_cache='250515200'/>
<task_done success='1' nmsize='1288' count='771' inlined_bytes='22' stamp='0.532'/>
</task>
<task compile_id='26' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='645' iicount='645' level='3' stamp='0.532'>
<phase name='buildIR' stamp='0.532'>
<klass id='782' name='java/lang/StringBuilder' flags='17'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='782' name='append' return='782' arguments='717' flags='1' bytes='8' iicount='645'/>
<parse method='819'  stamp='0.532'>
<bc code='183' bci='2'/>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='821' holder='780' name='append' return='780' arguments='717' flags='1' bytes='50' compile_id='27' compiler='C1' level='3' iicount='771'/>
<call method='821' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.532'/>
</parse>
<phase name='optimize_blocks' stamp='0.532'>
<phase_done name='optimize_blocks' stamp='0.532'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.532'>
<phase_done name='rangeCheckElimination' stamp='0.532'/>
</phase>
<phase name='optimize_null_checks' stamp='0.532'>
<phase_done name='optimize_null_checks' stamp='0.532'/>
</phase>
<phase_done name='buildIR' stamp='0.532'/>
</phase>
<phase name='emit_lir' stamp='0.532'>
<phase name='lirGeneration' stamp='0.532'>
<phase_done name='lirGeneration' stamp='0.532'/>
</phase>
<phase name='linearScan' stamp='0.532'>
<phase_done name='linearScan' stamp='0.533'/>
</phase>
<phase_done name='emit_lir' stamp='0.533'/>
</phase>
<phase name='codeemit' stamp='0.533'>
<phase_done name='codeemit' stamp='0.533'/>
</phase>
<phase name='codeinstall' stamp='0.533'>
<phase_done name='codeinstall' stamp='0.538'/>
</phase>
<code_cache total_blobs='285' nmethods='27' adapters='171' free_code_cache='250514240'/>
<task_done success='1' nmsize='392' count='645' stamp='0.538'/>
</task>
<task compile_id='29' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3733' iicount='3733' level='3' stamp='0.538'>
<phase name='buildIR' stamp='0.538'>
<klass id='781' name='java/lang/StringBuffer' flags='17'/>
<type id='704' name='char'/>
<method id='819' holder='781' name='append' return='781' arguments='704' flags='33' bytes='13' iicount='3733'/>
<parse method='819'  stamp='0.538'>
<bc code='183' bci='7'/>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='821' holder='780' name='append' return='780' arguments='704' flags='1' bytes='29' iicount='6400'/>
<call method='821' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<bc code='183' bci='7'/>
<type id='711' name='void'/>
<type id='709' name='int'/>
<method id='823' holder='780' name='ensureCapacityInternal' return='711' arguments='709' flags='2' bytes='16' iicount='7177'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<bc code='182' bci='12'/>
<method id='825' holder='780' name='expandCapacity' return='711' arguments='709' flags='0' bytes='50' iicount='356'/>
<call method='825' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.539'/>
</parse>
<parse_done stamp='0.539'/>
</parse>
<parse_done stamp='0.539'/>
</parse>
<phase name='optimize_blocks' stamp='0.539'>
<phase_done name='optimize_blocks' stamp='0.539'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.539'>
<phase_done name='rangeCheckElimination' stamp='0.539'/>
</phase>
<phase name='optimize_null_checks' stamp='0.539'>
<phase_done name='optimize_null_checks' stamp='0.539'/>
</phase>
<phase_done name='buildIR' stamp='0.539'/>
</phase>
<phase name='emit_lir' stamp='0.539'>
<phase name='lirGeneration' stamp='0.539'>
<phase_done name='lirGeneration' stamp='0.539'/>
</phase>
<phase name='linearScan' stamp='0.539'>
<phase_done name='linearScan' stamp='0.539'/>
</phase>
<phase_done name='emit_lir' stamp='0.539'/>
</phase>
<phase name='codeemit' stamp='0.539'>
<phase_done name='codeemit' stamp='0.539'/>
</phase>
<phase name='codeinstall' stamp='0.539'>
<phase_done name='codeinstall' stamp='0.556'/>
</phase>
<code_cache total_blobs='286' nmethods='28' adapters='171' free_code_cache='250511872'/>
<task_done success='1' nmsize='1288' count='3784' inlined_bytes='45' stamp='0.556'/>
</task>
<task compile_id='28' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='514' iicount='514' level='3' stamp='0.556'>
<phase name='buildIR' stamp='0.556'>
<type id='703' name='boolean'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='startsWith' return='703' arguments='717' flags='1' bytes='7' iicount='514'/>
<parse method='819'  stamp='0.556'>
<bc code='182' bci='3'/>
<type id='709' name='int'/>
<method id='821' holder='717' name='startsWith' return='703' arguments='717 709' flags='1' bytes='72' compile_id='25' compiler='C1' level='3' iicount='750'/>
<call method='821' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.556'/>
</parse>
<phase name='optimize_blocks' stamp='0.556'>
<phase_done name='optimize_blocks' stamp='0.556'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.556'>
<phase_done name='rangeCheckElimination' stamp='0.556'/>
</phase>
<phase name='optimize_null_checks' stamp='0.556'>
<phase_done name='optimize_null_checks' stamp='0.556'/>
</phase>
<phase_done name='buildIR' stamp='0.556'/>
</phase>
<phase name='emit_lir' stamp='0.556'>
<phase name='lirGeneration' stamp='0.556'>
<phase_done name='lirGeneration' stamp='0.556'/>
</phase>
<phase name='linearScan' stamp='0.556'>
<phase_done name='linearScan' stamp='0.556'/>
</phase>
<phase_done name='emit_lir' stamp='0.556'/>
</phase>
<phase name='codeemit' stamp='0.556'>
<phase_done name='codeemit' stamp='0.559'/>
</phase>
<phase name='codeinstall' stamp='0.559'>
<phase_done name='codeinstall' stamp='0.566'/>
</phase>
<code_cache total_blobs='290' nmethods='29' adapters='171' free_code_cache='250493440'/>
<task_done success='1' nmsize='520' count='514' stamp='0.566'/>
</task>
<task compile_id='32' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='4224' iicount='4224' level='3' stamp='0.586'>
<phase name='buildIR' stamp='0.586'>
<type id='703' name='boolean'/>
<type id='704' name='char'/>
<klass id='819' name='java/io/WinNTFileSystem' flags='0'/>
<method id='820' holder='819' name='isSlash' return='703' arguments='704' flags='2' bytes='18' iicount='4224'/>
<parse method='820'  stamp='0.586'>
<parse_done stamp='0.586'/>
</parse>
<phase name='optimize_blocks' stamp='0.586'>
<phase_done name='optimize_blocks' stamp='0.586'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.586'>
<phase_done name='rangeCheckElimination' stamp='0.586'/>
</phase>
<phase name='optimize_null_checks' stamp='0.586'>
<phase_done name='optimize_null_checks' stamp='0.586'/>
</phase>
<phase_done name='buildIR' stamp='0.586'/>
</phase>
<phase name='emit_lir' stamp='0.586'>
<phase name='lirGeneration' stamp='0.586'>
<phase_done name='lirGeneration' stamp='0.586'/>
</phase>
<phase name='linearScan' stamp='0.586'>
<phase_done name='linearScan' stamp='0.586'/>
</phase>
<phase_done name='emit_lir' stamp='0.586'/>
</phase>
<phase name='codeemit' stamp='0.586'>
<phase_done name='codeemit' stamp='0.586'/>
</phase>
<phase name='codeinstall' stamp='0.586'>
<phase_done name='codeinstall' stamp='0.606'/>
</phase>
<code_cache total_blobs='290' nmethods='32' adapters='171' free_code_cache='250505472'/>
<task_done success='1' nmsize='496' count='4232' stamp='0.606'/>
</task>
<task compile_id='33' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='256' iicount='256' level='3' stamp='0.607'>
<phase name='buildIR' stamp='0.607'>
<klass id='820' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='821' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='709' name='int'/>
<klass id='819' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='822' holder='819' name='tabAt' return='820' arguments='821 709' flags='24' bytes='21' iicount='256'/>
<parse method='822'  stamp='0.607'>
<bc code='182' bci='14'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<type id='710' name='long'/>
<klass id='783' name='sun/misc/Unsafe' flags='17'/>
<method id='826' holder='783' name='getObjectVolatile' return='716' arguments='716 710' flags='257' bytes='0' iicount='256'/>
<call method='826' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.608'/>
</parse>
<phase name='optimize_blocks' stamp='0.608'>
<phase_done name='optimize_blocks' stamp='0.608'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.608'>
<phase_done name='rangeCheckElimination' stamp='0.608'/>
</phase>
<phase name='optimize_null_checks' stamp='0.608'>
<phase_done name='optimize_null_checks' stamp='0.608'/>
</phase>
<phase_done name='buildIR' stamp='0.608'/>
</phase>
<phase name='emit_lir' stamp='0.608'>
<phase name='lirGeneration' stamp='0.608'>
<phase_done name='lirGeneration' stamp='0.608'/>
</phase>
<phase name='linearScan' stamp='0.608'>
<phase_done name='linearScan' stamp='0.608'/>
</phase>
<phase_done name='emit_lir' stamp='0.608'/>
</phase>
<phase name='codeemit' stamp='0.608'>
<phase_done name='codeemit' stamp='0.608'/>
</phase>
<phase name='codeinstall' stamp='0.608'>
<phase_done name='codeinstall' stamp='0.619'/>
</phase>
<code_cache total_blobs='292' nmethods='34' adapters='171' free_code_cache='250503424'/>
<task_done success='1' nmsize='560' count='384' stamp='0.619'/>
</task>
<task compile_id='35' method='java/util/ArrayList size ()I' bytes='5' count='266' iicount='266' level='1' stamp='0.620'>
<phase name='buildIR' stamp='0.620'>
<type id='709' name='int'/>
<klass id='819' name='java/util/ArrayList' flags='1'/>
<method id='820' holder='819' name='size' return='709' flags='1' bytes='5' iicount='268'/>
<parse method='820'  stamp='0.620'>
<parse_done stamp='0.620'/>
</parse>
<phase name='optimize_blocks' stamp='0.620'>
<phase_done name='optimize_blocks' stamp='0.620'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.620'>
<phase_done name='rangeCheckElimination' stamp='0.620'/>
</phase>
<phase name='optimize_null_checks' stamp='0.620'>
<phase_done name='optimize_null_checks' stamp='0.620'/>
</phase>
<phase_done name='buildIR' stamp='0.620'/>
</phase>
<phase name='emit_lir' stamp='0.620'>
<phase name='lirGeneration' stamp='0.620'>
<phase_done name='lirGeneration' stamp='0.620'/>
</phase>
<phase name='linearScan' stamp='0.620'>
<phase_done name='linearScan' stamp='0.620'/>
</phase>
<phase_done name='emit_lir' stamp='0.620'/>
</phase>
<phase name='codeemit' stamp='0.620'>
<phase_done name='codeemit' stamp='0.620'/>
</phase>
<phase name='codeinstall' stamp='0.620'>
<phase_done name='codeinstall' stamp='0.636'/>
</phase>
<code_cache total_blobs='293' nmethods='35' adapters='171' free_code_cache='250502656'/>
<task_done success='1' nmsize='272' count='290' stamp='0.636'/>
</task>
<fragment>
<![CDATA[
<task compile_id='36' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='110' backedge_count='4117' iicount='110' level='3' stamp='0.636'>
<phase name='buildIR' stamp='0.636'>
<type id='709' name='int'/>
<klass id='808' name='[C' flags='1041'/>
<klass id='811' name='[B' flags='1041'/>
<klass id='819' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='820' holder='819' name='encode' return='709' arguments='808 709 709 811' flags='1' bytes='359' iicount='110'/>
<parse method='820'  stamp='0.636'>
<bc code='184' bci='14'/>
<klass id='822' name='java/lang/Math' flags='17'/>
<method id='823' holder='822' name='min' return='709' arguments='709 709' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='2404'/>
<call method='823' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<parse_done stamp='0.636'/>
</parse>
<bc code='184' bci='139'/>
<type id='703' name='boolean'/>
<type id='704' name='char'/>
<klass id='797' name='java/lang/Character' flags='17'/>
<method id='825' holder='797' name='isSurrogate' return='703' arguments='704' flags='9' bytes='18' iicount='1'/>
<call method='825' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='825'>
<parse_done stamp='0.636'/>
</parse>
<bc code='183' bci='157'/>
<type id='711' name='void'/>
<klass id='827' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<method id='828' holder='827' name='&lt;init&gt;' return='711' unloaded='1'/>
<call method='828' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='175'/>
<method id='829' holder='827' name='parse' return='709' arguments='704 808 709 709' unloaded='1'/>
<call method='829' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='186'/>
<klass id='831' name='java/nio/charset/CodingErrorAction' flags='1'/>
<klass id='830' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='832' holder='830' name='malformedInputAction' return='831' flags='1' bytes='5' iicount='1'/>
<call method='832' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='832'>
<parse_done stamp='0.636'/>
</parse>
<parse_done stamp='0.636'/>
</parse>
<phase name='optimize_blocks' stamp='0.636'>
<phase_done name='optimize_blocks' stamp='0.636'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.637'>
<phase_done name='rangeCheckElimination' stamp='0.637'/>
</phase>
<phase name='optimize_null_checks' stamp='0.637'>
<phase_done name='optimize_null_checks' stamp='0.637'/>
</phase>
<phase_done name='buildIR' stamp='0.637'/>
</phase>
<phase name='emit_lir' stamp='0.637'>
<phase name='lirGeneration' stamp='0.637'>
<phase_done name='lirGeneration' stamp='0.637'/>
</phase>
<phase name='linearScan' stamp='0.637'>
<phase_done name='linearScan' stamp='0.637'/>
</phase>
<phase_done name='emit_lir' stamp='0.637'/>
</phase>
<phase name='codeemit' stamp='0.637'>
<phase_done name='codeemit' stamp='0.637'/>
</phase>
<phase name='codeinstall' stamp='0.637'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='21592'>
<start_compile_thread name='C2 CompilerThread1' thread='21592' process='6604' stamp='0.268'/>
<task compile_id='15' method='java/lang/String length ()I' bytes='6' count='27777' iicount='27777' stamp='0.351'>
<phase name='parse' nodes='3' live='3' stamp='0.351'>
<type id='709' name='int'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='length' return='709' flags='1' bytes='6' iicount='27781'/>
<parse method='819' uses='27781' stamp='0.351'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25928' stamp='0.351'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='0.351'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='0.351'>
<phase name='ccp' nodes='45' live='27' stamp='0.351'>
<phase_done name='ccp' nodes='45' live='27' stamp='0.351'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='0.351'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='0.351'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.351'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.351'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.351'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.351'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='0.351'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='0.351'>
<phase_done name='output' nodes='38' live='37' stamp='0.368'/>
</phase>
<code_cache total_blobs='265' nmethods='12' adapters='166' free_code_cache='250537408'/>
<task_done success='1' nmsize='120' count='27810' stamp='0.370'/>
</task>
<task compile_id='31' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='6400' iicount='6400' stamp='0.539'>
<phase name='parse' nodes='3' live='3' stamp='0.539'>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='704' name='char'/>
<method id='819' holder='780' name='append' return='780' arguments='704' flags='1' bytes='29' iicount='6400'/>
<parse method='819' uses='6400' stamp='0.539'>
<bc code='183' bci='7'/>
<type id='711' name='void'/>
<type id='709' name='int'/>
<method id='821' holder='780' name='ensureCapacityInternal' return='711' arguments='709' flags='2' bytes='16' iicount='7177'/>
<call method='821' count='5887' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='821' uses='6399' stamp='0.556'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='15' taken='6975' not_taken='202' cnt='7177' prob='0.971855'/>
<bc code='182' bci='12'/>
<method id='822' holder='780' name='expandCapacity' return='711' arguments='709' flags='0' bytes='50' iicount='357'/>
<dependency type='unique_concrete_method' ctxk='780' x='822'/>
<call method='822' count='189' prof_factor='0.891598' inline='1'/>
<klass id='739' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='822' bci='26' reason='unloaded' action='reinterpret' index='141' klass='739'/>
<inline_success reason='inline (hot)'/>
<parse method='822' uses='180' stamp='0.556'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='187' bci='26'/>
<uncommon_trap bci='26' reason='unloaded' action='reinterpret' index='141'/>
<bc code='184' bci='43'/>
<klass id='808' name='[C' flags='1041'/>
<klass id='824' name='java/util/Arrays' flags='1'/>
<method id='825' holder='824' name='copyOf' return='808' arguments='808 709' flags='9' bytes='19' iicount='423'/>
<call method='825' count='-1' prof_factor='0.504202' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='825' uses='-1' stamp='0.556'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='827' name='java/lang/Math' flags='17'/>
<method id='828' holder='827' name='min' return='709' arguments='709 709' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='2354'/>
<call method='828' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<klass id='722' name='java/lang/System' flags='17'/>
<method id='829' holder='722' name='arraycopy' return='711' arguments='716 709 716 709 709' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2689'/>
<call method='829' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='325' live='320' memory='77768' stamp='0.556'/>
</parse>
<parse_done nodes='340' live='334' memory='80504' stamp='0.556'/>
</parse>
<parse_done nodes='348' live='341' memory='82896' stamp='0.556'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='396' live='386' memory='91320' stamp='0.557'/>
</parse>
<phase_done name='parse' nodes='398' live='250' stamp='0.557'/>
</phase>
<phase name='optimizer' nodes='398' live='250' stamp='0.557'>
<phase name='escapeAnalysis' nodes='399' live='233' stamp='0.557'>
<phase name='connectionGraph' nodes='400' live='234' stamp='0.557'>
<phase_done name='connectionGraph' nodes='400' live='234' stamp='0.557'/>
</phase>
<phase_done name='escapeAnalysis' nodes='400' live='234' stamp='0.557'/>
</phase>
<phase name='ccp' nodes='400' live='234' stamp='0.557'>
<phase_done name='ccp' nodes='400' live='234' stamp='0.557'/>
</phase>
<phase name='idealLoop' nodes='400' live='233' stamp='0.557'>
<phase_done name='idealLoop' nodes='428' live='228' stamp='0.557'/>
</phase>
<phase name='idealLoop' nodes='428' live='228' stamp='0.557'>
<phase_done name='idealLoop' nodes='428' live='228' stamp='0.558'/>
</phase>
<phase_done name='optimizer' nodes='489' live='269' stamp='0.558'/>
</phase>
<phase name='matcher' nodes='489' live='269' stamp='0.558'>
<phase_done name='matcher' nodes='266' live='266' stamp='0.558'/>
</phase>
<phase name='regalloc' nodes='329' live='328' stamp='0.558'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='441' live='399' stamp='0.560'/>
</phase>
<phase name='output' nodes='441' live='399' stamp='0.560'>
<phase_done name='output' nodes='458' live='412' stamp='0.566'/>
</phase>
<dependency type='unique_concrete_method' ctxk='780' x='822'/>
<code_cache total_blobs='291' nmethods='30' adapters='171' free_code_cache='250491136'/>
<task_done success='1' nmsize='856' count='6451' inlined_bytes='96' stamp='0.586'/>
</task>
</compilation_log>
<compilation_log thread='22072'>
<start_compile_thread name='C2 CompilerThread0' thread='22072' process='6604' stamp='0.265'/>
<task compile_id='7' method='java/lang/String charAt (I)C' bytes='29' count='102426' iicount='102426' stamp='0.325'>
<phase name='parse' nodes='3' live='3' stamp='0.325'>
<type id='704' name='char'/>
<type id='709' name='int'/>
<klass id='717' name='java/lang/String' flags='17'/>
<method id='819' holder='717' name='charAt' return='704' arguments='709' flags='1' bytes='29' iicount='102429'/>
<klass id='821' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='819' bci='13' reason='unloaded' action='reinterpret' index='245' klass='821'/>
<parse method='819' uses='102429' stamp='0.325'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='102429' cnt='102429' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='102429' not_taken='0' cnt='102429' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='101' live='96' memory='34928' stamp='0.330'/>
</parse>
<phase_done name='parse' nodes='102' live='62' stamp='0.330'/>
</phase>
<phase name='optimizer' nodes='102' live='62' stamp='0.330'>
<phase name='ccp' nodes='102' live='62' stamp='0.330'>
<phase_done name='ccp' nodes='102' live='62' stamp='0.330'/>
</phase>
<phase name='idealLoop' nodes='102' live='62' stamp='0.330'>
<phase_done name='idealLoop' nodes='102' live='62' stamp='0.330'/>
</phase>
<phase_done name='optimizer' nodes='106' live='63' stamp='0.330'/>
</phase>
<phase name='matcher' nodes='106' live='63' stamp='0.330'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.330'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.330'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.331'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.331'>
<phase_done name='output' nodes='93' live='85' stamp='0.331'/>
</phase>
<code_cache total_blobs='255' nmethods='8' adapters='160' free_code_cache='250546752'/>
<task_done success='1' nmsize='216' count='102525' stamp='0.336'/>
</task>
<task compile_id='16' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='9999' iicount='9999' stamp='0.370'>
<phase name='parse' nodes='3' live='3' stamp='0.370'>
<klass id='820' name='java/util/TreeMap$Entry' flags='24'/>
<klass id='819' name='java/util/TreeMap' flags='1'/>
<method id='821' holder='819' name='parentOf' return='820' arguments='820' flags='10' bytes='13' iicount='10020'/>
<parse method='821' uses='10020' stamp='0.376'>
<bc code='199' bci='1'/>
<branch target_bci='8' taken='10020' not_taken='0' cnt='10020' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='43' live='41' memory='25800' stamp='0.376'/>
</parse>
<phase_done name='parse' nodes='44' live='25' stamp='0.376'/>
</phase>
<phase name='optimizer' nodes='44' live='25' stamp='0.376'>
<phase name='ccp' nodes='44' live='25' stamp='0.376'>
<phase_done name='ccp' nodes='44' live='25' stamp='0.376'/>
</phase>
<phase name='idealLoop' nodes='44' live='24' stamp='0.376'>
<phase_done name='idealLoop' nodes='44' live='24' stamp='0.376'/>
</phase>
<phase_done name='optimizer' nodes='44' live='24' stamp='0.376'/>
</phase>
<phase name='matcher' nodes='44' live='24' stamp='0.376'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.376'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.376'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='33' live='30' stamp='0.376'/>
</phase>
<phase name='output' nodes='33' live='30' stamp='0.376'>
<phase_done name='output' nodes='39' live='36' stamp='0.377'/>
</phase>
<code_cache total_blobs='267' nmethods='14' adapters='166' free_code_cache='250535744'/>
<task_done success='1' nmsize='88' count='10041' stamp='0.379'/>
</task>
<task compile_id='30' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='7176' iicount='7176' stamp='0.533'>
<phase name='parse' nodes='3' live='3' stamp='0.538'>
<type id='711' name='void'/>
<type id='709' name='int'/>
<klass id='780' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='819' holder='780' name='ensureCapacityInternal' return='711' arguments='709' flags='2' bytes='16' iicount='7177'/>
<parse method='819' uses='7177' stamp='0.538'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='15' taken='6975' not_taken='202' cnt='7177' prob='0.971855'/>
<bc code='182' bci='12'/>
<method id='821' holder='780' name='expandCapacity' return='711' arguments='709' flags='0' bytes='50' iicount='356'/>
<dependency type='unique_concrete_method' ctxk='780' x='821'/>
<call method='821' count='188' prof_factor='1' inline='1'/>
<klass id='739' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='821' bci='26' reason='unloaded' action='reinterpret' index='141' klass='739'/>
<inline_success reason='inline (hot)'/>
<parse method='821' uses='202' stamp='0.539'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='187' bci='26'/>
<uncommon_trap bci='26' reason='unloaded' action='reinterpret' index='141'/>
<bc code='184' bci='43'/>
<klass id='808' name='[C' flags='1041'/>
<klass id='822' name='java/util/Arrays' flags='1'/>
<method id='823' holder='822' name='copyOf' return='808' arguments='808 709' flags='9' bytes='19' iicount='422'/>
<call method='823' count='-1' prof_factor='0.567416' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='823' uses='-1' stamp='0.539'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='825' name='java/lang/Math' flags='17'/>
<method id='826' holder='825' name='min' return='709' arguments='709 709' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='2351'/>
<call method='826' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='716' name='java/lang/Object' flags='1'/>
<klass id='722' name='java/lang/System' flags='17'/>
<method id='827' holder='722' name='arraycopy' return='711' arguments='716 709 716 709 709' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='2689'/>
<call method='827' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='307' live='302' memory='74600' stamp='0.539'/>
</parse>
<parse_done nodes='322' live='316' memory='77336' stamp='0.556'/>
</parse>
<parse_done nodes='330' live='323' memory='79328' stamp='0.556'/>
</parse>
<phase_done name='parse' nodes='332' live='213' stamp='0.556'/>
</phase>
<phase name='optimizer' nodes='332' live='213' stamp='0.556'>
<phase name='escapeAnalysis' nodes='333' live='197' stamp='0.556'>
<phase name='connectionGraph' nodes='334' live='198' stamp='0.556'>
<phase_done name='connectionGraph' nodes='334' live='198' stamp='0.556'/>
</phase>
<phase_done name='escapeAnalysis' nodes='334' live='198' stamp='0.556'/>
</phase>
<phase name='ccp' nodes='334' live='198' stamp='0.556'>
<phase_done name='ccp' nodes='334' live='198' stamp='0.556'/>
</phase>
<phase name='idealLoop' nodes='334' live='197' stamp='0.556'>
<phase_done name='idealLoop' nodes='350' live='191' stamp='0.556'/>
</phase>
<phase name='idealLoop' nodes='350' live='191' stamp='0.556'>
<phase_done name='idealLoop' nodes='350' live='191' stamp='0.556'/>
</phase>
<phase_done name='optimizer' nodes='410' live='230' stamp='0.557'/>
</phase>
<phase name='matcher' nodes='410' live='230' stamp='0.557'>
<phase_done name='matcher' nodes='228' live='228' stamp='0.557'/>
</phase>
<phase name='regalloc' nodes='285' live='284' stamp='0.557'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='375' live='344' stamp='0.559'/>
</phase>
<phase name='output' nodes='377' live='346' stamp='0.559'>
<phase_done name='output' nodes='395' live='358' stamp='0.560'/>
</phase>
<dependency type='unique_concrete_method' ctxk='780' x='821'/>
<code_cache total_blobs='290' nmethods='31' adapters='171' free_code_cache='250501184'/>
<task_done success='1' nmsize='696' count='7241' inlined_bytes='80' stamp='0.600'/>
</task>
</compilation_log>
<hotspot_log_done stamp='0.983'/>
</hotspot_log>
